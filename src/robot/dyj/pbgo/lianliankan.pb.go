// protoc --proto_path=./pb --go_out=./pbgo --go_opt=paths=source_relative ./pb/lianliankan.proto
// protoc-go-inject-tag -input="./pbgo/lianliankan.pb.go"
// goctl model mongo -e -dir ./model -t LLKRoom --home template -c
//!!!!!!! 删除生成的worldtypes, 代码成替换成model对象

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.0--rc1
// source: lianliankan.proto

package pbgo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LLKOperaType int32

const (
	LLKOperaType_EXXL_INVALID LLKOperaType = 0 //!
	LLKOperaType_EXXL_NORMAL  LLKOperaType = 1 //! 正常操作
	LLKOperaType_EXXL_PROPS   LLKOperaType = 2 //! 使用道具
	LLKOperaType_EXXL_TIMEOUT LLKOperaType = 3 //! 超时结束
	LLKOperaType_EXXL_FLEET   LLKOperaType = 4 //! 逃跑
)

// Enum value maps for LLKOperaType.
var (
	LLKOperaType_name = map[int32]string{
		0: "EXXL_INVALID",
		1: "EXXL_NORMAL",
		2: "EXXL_PROPS",
		3: "EXXL_TIMEOUT",
		4: "EXXL_FLEET",
	}
	LLKOperaType_value = map[string]int32{
		"EXXL_INVALID": 0,
		"EXXL_NORMAL":  1,
		"EXXL_PROPS":   2,
		"EXXL_TIMEOUT": 3,
		"EXXL_FLEET":   4,
	}
)

func (x LLKOperaType) Enum() *LLKOperaType {
	p := new(LLKOperaType)
	*p = x
	return p
}

func (x LLKOperaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LLKOperaType) Descriptor() protoreflect.EnumDescriptor {
	return file_lianliankan_proto_enumTypes[0].Descriptor()
}

func (LLKOperaType) Type() protoreflect.EnumType {
	return &file_lianliankan_proto_enumTypes[0]
}

func (x LLKOperaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LLKOperaType.Descriptor instead.
func (LLKOperaType) EnumDescriptor() ([]byte, []int) {
	return file_lianliankan_proto_rawDescGZIP(), []int{0}
}

type ELLKGameUserCnt int32

const (
	ELLKGameUserCnt_ELLKGUC_INVALID ELLKGameUserCnt = 0 //! 无效操作
	ELLKGameUserCnt_ELLKGUC_TWO     ELLKGameUserCnt = 2 //! 游戏人数
)

// Enum value maps for ELLKGameUserCnt.
var (
	ELLKGameUserCnt_name = map[int32]string{
		0: "ELLKGUC_INVALID",
		2: "ELLKGUC_TWO",
	}
	ELLKGameUserCnt_value = map[string]int32{
		"ELLKGUC_INVALID": 0,
		"ELLKGUC_TWO":     2,
	}
)

func (x ELLKGameUserCnt) Enum() *ELLKGameUserCnt {
	p := new(ELLKGameUserCnt)
	*p = x
	return p
}

func (x ELLKGameUserCnt) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ELLKGameUserCnt) Descriptor() protoreflect.EnumDescriptor {
	return file_lianliankan_proto_enumTypes[1].Descriptor()
}

func (ELLKGameUserCnt) Type() protoreflect.EnumType {
	return &file_lianliankan_proto_enumTypes[1]
}

func (x ELLKGameUserCnt) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ELLKGameUserCnt.Descriptor instead.
func (ELLKGameUserCnt) EnumDescriptor() ([]byte, []int) {
	return file_lianliankan_proto_rawDescGZIP(), []int{1}
}

type ELLKPlayerStatus int32

const (
	ELLKPlayerStatus_ELLKPS_INVALID  ELLKPlayerStatus = 0 // 无效操作
	ELLKPlayerStatus_ELLKPS_MATCHING ELLKPlayerStatus = 1 // 匹配中
	ELLKPlayerStatus_ELLKPS_MATCHED  ELLKPlayerStatus = 2 // 匹配成功
	ELLKPlayerStatus_ELLKPS_GAMEING  ELLKPlayerStatus = 3 // 游戏中
)

// Enum value maps for ELLKPlayerStatus.
var (
	ELLKPlayerStatus_name = map[int32]string{
		0: "ELLKPS_INVALID",
		1: "ELLKPS_MATCHING",
		2: "ELLKPS_MATCHED",
		3: "ELLKPS_GAMEING",
	}
	ELLKPlayerStatus_value = map[string]int32{
		"ELLKPS_INVALID":  0,
		"ELLKPS_MATCHING": 1,
		"ELLKPS_MATCHED":  2,
		"ELLKPS_GAMEING":  3,
	}
)

func (x ELLKPlayerStatus) Enum() *ELLKPlayerStatus {
	p := new(ELLKPlayerStatus)
	*p = x
	return p
}

func (x ELLKPlayerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ELLKPlayerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_lianliankan_proto_enumTypes[2].Descriptor()
}

func (ELLKPlayerStatus) Type() protoreflect.EnumType {
	return &file_lianliankan_proto_enumTypes[2]
}

func (x ELLKPlayerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ELLKPlayerStatus.Descriptor instead.
func (ELLKPlayerStatus) EnumDescriptor() ([]byte, []int) {
	return file_lianliankan_proto_rawDescGZIP(), []int{2}
}

type LLKOpera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperaType LLKOperaType `protobuf:"varint,1,opt,name=operaType,proto3,enum=model.LLKOperaType" json:"operaType,omitempty"` // 操作类型
	// @inject_tag: bson:"posList"
	PosList []*Position `protobuf:"bytes,2,rep,name=posList,proto3" json:"posList,omitempty"` //操作类型EXXL_NORMAL:传入2个位置
	// @inject_tag: bson:"propsID"
	PropsID uint32 `protobuf:"varint,3,opt,name=propsID,proto3" json:"propsID,omitempty"` //操作类型EXXL_PROPS:传入道具ID
	// @inject_tag: bson:"timestamp"
	Timestamp uint32 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"` //操作的时间戳(可用于回放或者验证)
	// @inject_tag: bson:"randomCount"
	RandomCount uint32 `protobuf:"varint,5,opt,name=randomCount,proto3" json:"randomCount,omitempty"` //随机计数(用于快速恢复最新进度)
	// @inject_tag: bson:"comboFlag"
	ComboFlag bool `protobuf:"varint,6,opt,name=comboFlag,proto3" json:"comboFlag,omitempty"` //是否为连击，前台不用赋值, 后台赋值后广播
}

func (x *LLKOpera) Reset() {
	*x = LLKOpera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lianliankan_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLKOpera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLKOpera) ProtoMessage() {}

func (x *LLKOpera) ProtoReflect() protoreflect.Message {
	mi := &file_lianliankan_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLKOpera.ProtoReflect.Descriptor instead.
func (*LLKOpera) Descriptor() ([]byte, []int) {
	return file_lianliankan_proto_rawDescGZIP(), []int{0}
}

func (x *LLKOpera) GetOperaType() LLKOperaType {
	if x != nil {
		return x.OperaType
	}
	return LLKOperaType_EXXL_INVALID
}

func (x *LLKOpera) GetPosList() []*Position {
	if x != nil {
		return x.PosList
	}
	return nil
}

func (x *LLKOpera) GetPropsID() uint32 {
	if x != nil {
		return x.PropsID
	}
	return 0
}

func (x *LLKOpera) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LLKOpera) GetRandomCount() uint32 {
	if x != nil {
		return x.RandomCount
	}
	return 0
}

func (x *LLKOpera) GetComboFlag() bool {
	if x != nil {
		return x.ComboFlag
	}
	return false
}

type LLKGameUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: bson:"uid"
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// @inject_tag: bson:"score"
	Score int32 `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	// @inject_tag: bson:"seedNum"
	SeedNum uint32 `protobuf:"varint,3,opt,name=seedNum,proto3" json:"seedNum,omitempty"`
	// @inject_tag: bson:"rmCount"
	RmCount uint32 `protobuf:"varint,4,opt,name=rmCount,proto3" json:"rmCount,omitempty"` //! 单位 对,双
	// @inject_tag: bson:"ComboCnt"
	ComboCnt uint32 `protobuf:"varint,6,opt,name=ComboCnt,proto3" json:"ComboCnt,omitempty"` //! 连击次数 规定时间没连击，会被重置
	// @inject_tag: bson:"lastComboTime"
	LastRmTime uint32 `protobuf:"varint,7,opt,name=lastRmTime,proto3" json:"lastRmTime,omitempty"` //! 上一次移除时间
	// @inject_tag: bson:"operaRecord"
	OperaRecord []*LLKOpera `protobuf:"bytes,8,rep,name=operaRecord,proto3" json:"operaRecord,omitempty"`
}

func (x *LLKGameUser) Reset() {
	*x = LLKGameUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lianliankan_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLKGameUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLKGameUser) ProtoMessage() {}

func (x *LLKGameUser) ProtoReflect() protoreflect.Message {
	mi := &file_lianliankan_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLKGameUser.ProtoReflect.Descriptor instead.
func (*LLKGameUser) Descriptor() ([]byte, []int) {
	return file_lianliankan_proto_rawDescGZIP(), []int{1}
}

func (x *LLKGameUser) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *LLKGameUser) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *LLKGameUser) GetSeedNum() uint32 {
	if x != nil {
		return x.SeedNum
	}
	return 0
}

func (x *LLKGameUser) GetRmCount() uint32 {
	if x != nil {
		return x.RmCount
	}
	return 0
}

func (x *LLKGameUser) GetComboCnt() uint32 {
	if x != nil {
		return x.ComboCnt
	}
	return 0
}

func (x *LLKGameUser) GetLastRmTime() uint32 {
	if x != nil {
		return x.LastRmTime
	}
	return 0
}

func (x *LLKGameUser) GetOperaRecord() []*LLKOpera {
	if x != nil {
		return x.OperaRecord
	}
	return nil
}

type LLKGameEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: bson:"winUser"
	WinUser string `protobuf:"bytes,1,opt,name=winUser,proto3" json:"winUser,omitempty"`
	// @inject_tag: bson:"llkInfoList"
	LlkInfoList []*LLKInfo `protobuf:"bytes,2,rep,name=llkInfoList,proto3" json:"llkInfoList,omitempty"` // 这里只是变化量 score就是结算的时候的分
}

func (x *LLKGameEnd) Reset() {
	*x = LLKGameEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lianliankan_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLKGameEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLKGameEnd) ProtoMessage() {}

func (x *LLKGameEnd) ProtoReflect() protoreflect.Message {
	mi := &file_lianliankan_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLKGameEnd.ProtoReflect.Descriptor instead.
func (*LLKGameEnd) Descriptor() ([]byte, []int) {
	return file_lianliankan_proto_rawDescGZIP(), []int{2}
}

func (x *LLKGameEnd) GetWinUser() string {
	if x != nil {
		return x.WinUser
	}
	return ""
}

func (x *LLKGameEnd) GetLlkInfoList() []*LLKInfo {
	if x != nil {
		return x.LlkInfoList
	}
	return nil
}

type LLKRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: bson:"_id"
	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// @inject_tag: bson:"matchedId"
	MatchedId string `protobuf:"bytes,2,opt,name=matchedId,proto3" json:"matchedId,omitempty"`
	// @inject_tag: bson:"endTime"
	EndTime uint32 `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"` //! 结束时间
	// @inject_tag: bson:"difficulty"
	Difficulty uint32 `protobuf:"varint,4,opt,name=difficulty,proto3" json:"difficulty,omitempty"` //! 地图的长和宽
	// @inject_tag: bson:"gameUserList"
	GameUserList []*LLKGameUser `protobuf:"bytes,5,rep,name=gameUserList,proto3" json:"gameUserList,omitempty"`
	// @inject_tag: bson:"gameEnd"
	GameEnd *LLKGameEnd `protobuf:"bytes,6,opt,name=gameEnd,proto3" json:"gameEnd,omitempty"`
}

func (x *LLKRoom) Reset() {
	*x = LLKRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lianliankan_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLKRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLKRoom) ProtoMessage() {}

func (x *LLKRoom) ProtoReflect() protoreflect.Message {
	mi := &file_lianliankan_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLKRoom.ProtoReflect.Descriptor instead.
func (*LLKRoom) Descriptor() ([]byte, []int) {
	return file_lianliankan_proto_rawDescGZIP(), []int{3}
}

func (x *LLKRoom) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *LLKRoom) GetMatchedId() string {
	if x != nil {
		return x.MatchedId
	}
	return ""
}

func (x *LLKRoom) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *LLKRoom) GetDifficulty() uint32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *LLKRoom) GetGameUserList() []*LLKGameUser {
	if x != nil {
		return x.GameUserList
	}
	return nil
}

func (x *LLKRoom) GetGameEnd() *LLKGameEnd {
	if x != nil {
		return x.GameEnd
	}
	return nil
}

type LLKPlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin       string           `protobuf:"bytes,1,opt,name=uin,proto3" json:"uin,omitempty"`
	Status    ELLKPlayerStatus `protobuf:"varint,2,opt,name=status,proto3,enum=model.ELLKPlayerStatus" json:"status,omitempty"`
	ApplyId   string           `protobuf:"bytes,3,opt,name=applyId,proto3" json:"applyId,omitempty"` // 用于超时取消的时候，判断当前和异步任务中记录的一致，不一致代表不用超时取消
	Rank      uint32           `protobuf:"varint,4,opt,name=rank,proto3" json:"rank,omitempty"`
	MatchedId string           `protobuf:"bytes,5,opt,name=matchedId,proto3" json:"matchedId,omitempty"`
	RoomId    string           `protobuf:"bytes,6,opt,name=roomId,proto3" json:"roomId,omitempty"`
	OffFlag   bool             `protobuf:"varint,7,opt,name=offFlag,proto3" json:"offFlag,omitempty"` // 240613 掉线标志 解决玩家中游戏中掉线 然后一直没回来，或者回来一直没操作
}

func (x *LLKPlayerInfo) Reset() {
	*x = LLKPlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lianliankan_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLKPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLKPlayerInfo) ProtoMessage() {}

func (x *LLKPlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lianliankan_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLKPlayerInfo.ProtoReflect.Descriptor instead.
func (*LLKPlayerInfo) Descriptor() ([]byte, []int) {
	return file_lianliankan_proto_rawDescGZIP(), []int{4}
}

func (x *LLKPlayerInfo) GetUin() string {
	if x != nil {
		return x.Uin
	}
	return ""
}

func (x *LLKPlayerInfo) GetStatus() ELLKPlayerStatus {
	if x != nil {
		return x.Status
	}
	return ELLKPlayerStatus_ELLKPS_INVALID
}

func (x *LLKPlayerInfo) GetApplyId() string {
	if x != nil {
		return x.ApplyId
	}
	return ""
}

func (x *LLKPlayerInfo) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *LLKPlayerInfo) GetMatchedId() string {
	if x != nil {
		return x.MatchedId
	}
	return ""
}

func (x *LLKPlayerInfo) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *LLKPlayerInfo) GetOffFlag() bool {
	if x != nil {
		return x.OffFlag
	}
	return false
}

var File_lianliankan_proto protoreflect.FileDescriptor

var file_lianliankan_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6c, 0x69, 0x61, 0x6e, 0x6c, 0x69, 0x61, 0x6e, 0x6b, 0x61, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x0b, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe0, 0x01, 0x0a, 0x08, 0x4c, 0x4c, 0x4b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x31, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x4c, 0x4c, 0x4b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x70, 0x6f, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x72,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x46, 0x6c, 0x61, 0x67, 0x22, 0xd8, 0x01, 0x0a, 0x0b,
	0x4c, 0x4c, 0x4b, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x65, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x72, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x62, 0x6f,
	0x43, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x6f, 0x6d, 0x62, 0x6f,
	0x43, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x6d, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x6d, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x4c, 0x4c, 0x4b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x58, 0x0a, 0x0a, 0x4c, 0x4c, 0x4b, 0x47, 0x61, 0x6d,
	0x65, 0x45, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x30,
	0x0a, 0x0b, 0x6c, 0x6c, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4c, 0x4c, 0x4b, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x6c, 0x6c, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0xde, 0x01, 0x0a, 0x07, 0x4c, 0x4c, 0x4b, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x0c,
	0x67, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4c, 0x4c, 0x4b, 0x47, 0x61,
	0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4c, 0x4c,
	0x4b, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x45, 0x6e,
	0x64, 0x22, 0xd0, 0x01, 0x0a, 0x0d, 0x4c, 0x4c, 0x4b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x4c,
	0x4c, 0x4b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x66,
	0x66, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6f, 0x66, 0x66,
	0x46, 0x6c, 0x61, 0x67, 0x2a, 0x63, 0x0a, 0x0c, 0x4c, 0x4c, 0x4b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x58, 0x58, 0x4c, 0x5f, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x58, 0x58, 0x4c, 0x5f, 0x4e,
	0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x58, 0x58, 0x4c, 0x5f,
	0x50, 0x52, 0x4f, 0x50, 0x53, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x58, 0x58, 0x4c, 0x5f,
	0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x58, 0x58,
	0x4c, 0x5f, 0x46, 0x4c, 0x45, 0x45, 0x54, 0x10, 0x04, 0x2a, 0x37, 0x0a, 0x0f, 0x45, 0x4c, 0x4c,
	0x4b, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x4c, 0x4c, 0x4b, 0x47, 0x55, 0x43, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x4c, 0x4c, 0x4b, 0x47, 0x55, 0x43, 0x5f, 0x54, 0x57, 0x4f,
	0x10, 0x02, 0x2a, 0x63, 0x0a, 0x10, 0x45, 0x4c, 0x4c, 0x4b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x4c, 0x4c, 0x4b, 0x50, 0x53,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4c,
	0x4c, 0x4b, 0x50, 0x53, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12,
	0x12, 0x0a, 0x0e, 0x45, 0x4c, 0x4c, 0x4b, 0x50, 0x53, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x4c, 0x4c, 0x4b, 0x50, 0x53, 0x5f, 0x47, 0x41,
	0x4d, 0x45, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x42, 0x0d, 0x5a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x70, 0x62, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lianliankan_proto_rawDescOnce sync.Once
	file_lianliankan_proto_rawDescData = file_lianliankan_proto_rawDesc
)

func file_lianliankan_proto_rawDescGZIP() []byte {
	file_lianliankan_proto_rawDescOnce.Do(func() {
		file_lianliankan_proto_rawDescData = protoimpl.X.CompressGZIP(file_lianliankan_proto_rawDescData)
	})
	return file_lianliankan_proto_rawDescData
}

var file_lianliankan_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_lianliankan_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_lianliankan_proto_goTypes = []interface{}{
	(LLKOperaType)(0),     // 0: model.LLKOperaType
	(ELLKGameUserCnt)(0),  // 1: model.ELLKGameUserCnt
	(ELLKPlayerStatus)(0), // 2: model.ELLKPlayerStatus
	(*LLKOpera)(nil),      // 3: model.LLKOpera
	(*LLKGameUser)(nil),   // 4: model.LLKGameUser
	(*LLKGameEnd)(nil),    // 5: model.LLKGameEnd
	(*LLKRoom)(nil),       // 6: model.LLKRoom
	(*LLKPlayerInfo)(nil), // 7: model.LLKPlayerInfo
	(*Position)(nil),      // 8: model.Position
	(*LLKInfo)(nil),       // 9: model.LLKInfo
}
var file_lianliankan_proto_depIdxs = []int32{
	0, // 0: model.LLKOpera.operaType:type_name -> model.LLKOperaType
	8, // 1: model.LLKOpera.posList:type_name -> model.Position
	3, // 2: model.LLKGameUser.operaRecord:type_name -> model.LLKOpera
	9, // 3: model.LLKGameEnd.llkInfoList:type_name -> model.LLKInfo
	4, // 4: model.LLKRoom.gameUserList:type_name -> model.LLKGameUser
	5, // 5: model.LLKRoom.gameEnd:type_name -> model.LLKGameEnd
	2, // 6: model.LLKPlayerInfo.status:type_name -> model.ELLKPlayerStatus
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_lianliankan_proto_init() }
func file_lianliankan_proto_init() {
	if File_lianliankan_proto != nil {
		return
	}
	file_world_proto_init()
	file_user_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_lianliankan_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLKOpera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lianliankan_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLKGameUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lianliankan_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLKGameEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lianliankan_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLKRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lianliankan_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLKPlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lianliankan_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lianliankan_proto_goTypes,
		DependencyIndexes: file_lianliankan_proto_depIdxs,
		EnumInfos:         file_lianliankan_proto_enumTypes,
		MessageInfos:      file_lianliankan_proto_msgTypes,
	}.Build()
	File_lianliankan_proto = out.File
	file_lianliankan_proto_rawDesc = nil
	file_lianliankan_proto_goTypes = nil
	file_lianliankan_proto_depIdxs = nil
}
