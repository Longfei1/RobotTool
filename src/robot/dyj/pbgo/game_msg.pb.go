// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.0--rc1
// source: game_msg.proto

package pbgo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PCK int32

const (
	PCK_Default_ID              PCK = 0
	PCK_C2SCommon_ID            PCK = 1001
	PCK_S2CCommon_ID            PCK = 2001
	PCK_C2SLogin_ID             PCK = 1002
	PCK_S2CLogin_ID             PCK = 2002
	PCK_C2SCreateBuilding_ID    PCK = 1003
	PCK_S2CCreateBuilding_ID    PCK = 2003
	PCK_C2SMoveBuilding_ID      PCK = 1004
	PCK_S2CMoveBuilding_ID      PCK = 2004
	PCK_C2SBuildingOpera_ID     PCK = 1005
	PCK_S2CBuildingOpera_ID     PCK = 2005
	PCK_C2SPlantOpera_ID        PCK = 1007
	PCK_S2CPlantOpera_ID        PCK = 2007
	PCK_C2SOrderOpera_ID        PCK = 1008
	PCK_S2COrderOpera_ID        PCK = 2008
	PCK_C2SWarehouse_ID         PCK = 1009
	PCK_S2CWarehouse_ID         PCK = 2009
	PCK_C2SItemInfo_ID          PCK = 1010
	PCK_S2CItemInfo_ID          PCK = 2010
	PCK_C2SProductOpera_ID      PCK = 1011
	PCK_S2CProductOpera_ID      PCK = 2011
	PCK_C2SUserBaseOpera_ID     PCK = 1012
	PCK_S2CUserBaseOpera_ID     PCK = 2012
	PCK_C2SShopOpera_ID         PCK = 1013
	PCK_S2CShopOpera_ID         PCK = 2013
	PCK_C2STask_ID              PCK = 1014
	PCK_S2CTask_ID              PCK = 2014
	PCK_C2SWorldOpera_ID        PCK = 1015
	PCK_S2CWorldOpera_ID        PCK = 2015
	PCK_C2SFormula_ID           PCK = 1017
	PCK_S2CFormula_ID           PCK = 2017
	PCK_C2SDelivery_ID          PCK = 1018
	PCK_S2CDelivery_ID          PCK = 2018
	PCK_C2SPetBuilding_ID       PCK = 1020
	PCK_S2CPetBuilding_ID       PCK = 2020
	PCK_C2SPet_ID               PCK = 1021
	PCK_S2CPet_ID               PCK = 2021
	PCK_C2SPetAssign_ID         PCK = 1022
	PCK_S2CPetAssign_ID         PCK = 2022
	PCK_S2CCommonReward_ID      PCK = 2023
	PCK_C2SNPCInfo_ID           PCK = 1024
	PCK_S2CNPCInfo_ID           PCK = 2024
	PCK_C2SBuyGoods_ID          PCK = 1025
	PCK_S2CBuyGoods_ID          PCK = 2025
	PCK_C2SMallOpera_ID         PCK = 1026
	PCK_S2CMallOpera_ID         PCK = 2026
	PCK_C2SPetDispatch_ID       PCK = 1027
	PCK_S2CPetDispatch_ID       PCK = 2027
	PCK_C2SDailySign_ID         PCK = 1028
	PCK_S2CDailySign_ID         PCK = 2028
	PCK_C2SActivityOpera_ID     PCK = 1029
	PCK_S2CActivityOpera_ID     PCK = 2029
	PCK_C2STaskActivity_ID      PCK = 1030
	PCK_S2CTaskActivity_ID      PCK = 2030
	PCK_C2SMonthSupply_ID       PCK = 1031
	PCK_S2CMonthSupply_ID       PCK = 2031
	PCK_C2SFetchActCfg_ID       PCK = 1032
	PCK_S2CFetchActCfg_ID       PCK = 2032
	PCK_C2SRankOpera_ID         PCK = 1033
	PCK_S2CRankOpera_ID         PCK = 2033
	PCK_C2SOpenBoxReq_ID        PCK = 1034
	PCK_S2COpenBoxRsp_ID        PCK = 2034
	PCK_NotifyUserDataChange_ID PCK = 2035
	PCK_NotifyDeliverGoods_ID   PCK = 2036
	PCK_C2SBlueVipReq_ID        PCK = 1037
	PCK_S2CBlueVipRsp_ID        PCK = 2037
	PCK_C2SQQHallGiftReq_ID     PCK = 1038
	PCK_S2CQQHallGiftRsp_ID     PCK = 2038
	PCK_C2SEmailReq_ID          PCK = 1039
	PCK_S2CEmailRsp_ID          PCK = 2039
	PCK_NotifyNewEmail_ID       PCK = 2040
	PCK_C2SUserInfoReq_ID       PCK = 1041
	PCK_S2CUserInfoRsp_ID       PCK = 2041
	PCK_S2CEventStatsChange_ID  PCK = 2042
)

// Enum value maps for PCK.
var (
	PCK_name = map[int32]string{
		0:    "Default_ID",
		1001: "C2SCommon_ID",
		2001: "S2CCommon_ID",
		1002: "C2SLogin_ID",
		2002: "S2CLogin_ID",
		1003: "C2SCreateBuilding_ID",
		2003: "S2CCreateBuilding_ID",
		1004: "C2SMoveBuilding_ID",
		2004: "S2CMoveBuilding_ID",
		1005: "C2SBuildingOpera_ID",
		2005: "S2CBuildingOpera_ID",
		1007: "C2SPlantOpera_ID",
		2007: "S2CPlantOpera_ID",
		1008: "C2SOrderOpera_ID",
		2008: "S2COrderOpera_ID",
		1009: "C2SWarehouse_ID",
		2009: "S2CWarehouse_ID",
		1010: "C2SItemInfo_ID",
		2010: "S2CItemInfo_ID",
		1011: "C2SProductOpera_ID",
		2011: "S2CProductOpera_ID",
		1012: "C2SUserBaseOpera_ID",
		2012: "S2CUserBaseOpera_ID",
		1013: "C2SShopOpera_ID",
		2013: "S2CShopOpera_ID",
		1014: "C2STask_ID",
		2014: "S2CTask_ID",
		1015: "C2SWorldOpera_ID",
		2015: "S2CWorldOpera_ID",
		1017: "C2SFormula_ID",
		2017: "S2CFormula_ID",
		1018: "C2SDelivery_ID",
		2018: "S2CDelivery_ID",
		1020: "C2SPetBuilding_ID",
		2020: "S2CPetBuilding_ID",
		1021: "C2SPet_ID",
		2021: "S2CPet_ID",
		1022: "C2SPetAssign_ID",
		2022: "S2CPetAssign_ID",
		2023: "S2CCommonReward_ID",
		1024: "C2SNPCInfo_ID",
		2024: "S2CNPCInfo_ID",
		1025: "C2SBuyGoods_ID",
		2025: "S2CBuyGoods_ID",
		1026: "C2SMallOpera_ID",
		2026: "S2CMallOpera_ID",
		1027: "C2SPetDispatch_ID",
		2027: "S2CPetDispatch_ID",
		1028: "C2SDailySign_ID",
		2028: "S2CDailySign_ID",
		1029: "C2SActivityOpera_ID",
		2029: "S2CActivityOpera_ID",
		1030: "C2STaskActivity_ID",
		2030: "S2CTaskActivity_ID",
		1031: "C2SMonthSupply_ID",
		2031: "S2CMonthSupply_ID",
		1032: "C2SFetchActCfg_ID",
		2032: "S2CFetchActCfg_ID",
		1033: "C2SRankOpera_ID",
		2033: "S2CRankOpera_ID",
		1034: "C2SOpenBoxReq_ID",
		2034: "S2COpenBoxRsp_ID",
		2035: "NotifyUserDataChange_ID",
		2036: "NotifyDeliverGoods_ID",
		1037: "C2SBlueVipReq_ID",
		2037: "S2CBlueVipRsp_ID",
		1038: "C2SQQHallGiftReq_ID",
		2038: "S2CQQHallGiftRsp_ID",
		1039: "C2SEmailReq_ID",
		2039: "S2CEmailRsp_ID",
		2040: "NotifyNewEmail_ID",
		1041: "C2SUserInfoReq_ID",
		2041: "S2CUserInfoRsp_ID",
		2042: "S2CEventStatsChange_ID",
	}
	PCK_value = map[string]int32{
		"Default_ID":              0,
		"C2SCommon_ID":            1001,
		"S2CCommon_ID":            2001,
		"C2SLogin_ID":             1002,
		"S2CLogin_ID":             2002,
		"C2SCreateBuilding_ID":    1003,
		"S2CCreateBuilding_ID":    2003,
		"C2SMoveBuilding_ID":      1004,
		"S2CMoveBuilding_ID":      2004,
		"C2SBuildingOpera_ID":     1005,
		"S2CBuildingOpera_ID":     2005,
		"C2SPlantOpera_ID":        1007,
		"S2CPlantOpera_ID":        2007,
		"C2SOrderOpera_ID":        1008,
		"S2COrderOpera_ID":        2008,
		"C2SWarehouse_ID":         1009,
		"S2CWarehouse_ID":         2009,
		"C2SItemInfo_ID":          1010,
		"S2CItemInfo_ID":          2010,
		"C2SProductOpera_ID":      1011,
		"S2CProductOpera_ID":      2011,
		"C2SUserBaseOpera_ID":     1012,
		"S2CUserBaseOpera_ID":     2012,
		"C2SShopOpera_ID":         1013,
		"S2CShopOpera_ID":         2013,
		"C2STask_ID":              1014,
		"S2CTask_ID":              2014,
		"C2SWorldOpera_ID":        1015,
		"S2CWorldOpera_ID":        2015,
		"C2SFormula_ID":           1017,
		"S2CFormula_ID":           2017,
		"C2SDelivery_ID":          1018,
		"S2CDelivery_ID":          2018,
		"C2SPetBuilding_ID":       1020,
		"S2CPetBuilding_ID":       2020,
		"C2SPet_ID":               1021,
		"S2CPet_ID":               2021,
		"C2SPetAssign_ID":         1022,
		"S2CPetAssign_ID":         2022,
		"S2CCommonReward_ID":      2023,
		"C2SNPCInfo_ID":           1024,
		"S2CNPCInfo_ID":           2024,
		"C2SBuyGoods_ID":          1025,
		"S2CBuyGoods_ID":          2025,
		"C2SMallOpera_ID":         1026,
		"S2CMallOpera_ID":         2026,
		"C2SPetDispatch_ID":       1027,
		"S2CPetDispatch_ID":       2027,
		"C2SDailySign_ID":         1028,
		"S2CDailySign_ID":         2028,
		"C2SActivityOpera_ID":     1029,
		"S2CActivityOpera_ID":     2029,
		"C2STaskActivity_ID":      1030,
		"S2CTaskActivity_ID":      2030,
		"C2SMonthSupply_ID":       1031,
		"S2CMonthSupply_ID":       2031,
		"C2SFetchActCfg_ID":       1032,
		"S2CFetchActCfg_ID":       2032,
		"C2SRankOpera_ID":         1033,
		"S2CRankOpera_ID":         2033,
		"C2SOpenBoxReq_ID":        1034,
		"S2COpenBoxRsp_ID":        2034,
		"NotifyUserDataChange_ID": 2035,
		"NotifyDeliverGoods_ID":   2036,
		"C2SBlueVipReq_ID":        1037,
		"S2CBlueVipRsp_ID":        2037,
		"C2SQQHallGiftReq_ID":     1038,
		"S2CQQHallGiftRsp_ID":     2038,
		"C2SEmailReq_ID":          1039,
		"S2CEmailRsp_ID":          2039,
		"NotifyNewEmail_ID":       2040,
		"C2SUserInfoReq_ID":       1041,
		"S2CUserInfoRsp_ID":       2041,
		"S2CEventStatsChange_ID":  2042,
	}
)

func (x PCK) Enum() *PCK {
	p := new(PCK)
	*p = x
	return p
}

func (x PCK) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PCK) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[0].Descriptor()
}

func (PCK) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[0]
}

func (x PCK) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PCK.Descriptor instead.
func (PCK) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{0}
}

type LLKMsgId int32

const (
	LLKMsgId_LLKDefault_ID     LLKMsgId = 0
	LLKMsgId_C2SLianLianKan_ID LLKMsgId = 3001
	LLKMsgId_S2CLianLianKan_ID LLKMsgId = 4001
)

// Enum value maps for LLKMsgId.
var (
	LLKMsgId_name = map[int32]string{
		0:    "LLKDefault_ID",
		3001: "C2SLianLianKan_ID",
		4001: "S2CLianLianKan_ID",
	}
	LLKMsgId_value = map[string]int32{
		"LLKDefault_ID":     0,
		"C2SLianLianKan_ID": 3001,
		"S2CLianLianKan_ID": 4001,
	}
)

func (x LLKMsgId) Enum() *LLKMsgId {
	p := new(LLKMsgId)
	*p = x
	return p
}

func (x LLKMsgId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LLKMsgId) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[1].Descriptor()
}

func (LLKMsgId) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[1]
}

func (x LLKMsgId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LLKMsgId.Descriptor instead.
func (LLKMsgId) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{1}
}

type CreateBuildingOpera int32

const (
	CreateBuildingOpera_CreateBuildingOperaInvalid CreateBuildingOpera = 0
	CreateBuildingOpera_BuildStart                 CreateBuildingOpera = 1 //! 开始建造
	CreateBuildingOpera_BuildEnd                   CreateBuildingOpera = 2 //! 建造结束
	CreateBuildingOpera_BuildAccelerate            CreateBuildingOpera = 3 //! 加速
)

// Enum value maps for CreateBuildingOpera.
var (
	CreateBuildingOpera_name = map[int32]string{
		0: "CreateBuildingOperaInvalid",
		1: "BuildStart",
		2: "BuildEnd",
		3: "BuildAccelerate",
	}
	CreateBuildingOpera_value = map[string]int32{
		"CreateBuildingOperaInvalid": 0,
		"BuildStart":                 1,
		"BuildEnd":                   2,
		"BuildAccelerate":            3,
	}
)

func (x CreateBuildingOpera) Enum() *CreateBuildingOpera {
	p := new(CreateBuildingOpera)
	*p = x
	return p
}

func (x CreateBuildingOpera) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateBuildingOpera) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[2].Descriptor()
}

func (CreateBuildingOpera) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[2]
}

func (x CreateBuildingOpera) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateBuildingOpera.Descriptor instead.
func (CreateBuildingOpera) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{2}
}

type BuildingOpera int32

const (
	BuildingOpera_BO_Invalid     BuildingOpera = 0
	BuildingOpera_BO_RepairStart BuildingOpera = 1 //! 开始修复
	BuildingOpera_BO_RepairEnd   BuildingOpera = 2 //! 修复结束
	BuildingOpera_BO_RemoveStart BuildingOpera = 3 //! 开始移除
	BuildingOpera_BO_RemoveEnd   BuildingOpera = 4 //! 移除结束
	BuildingOpera_BO_Accelerate  BuildingOpera = 5 //! 加速
	BuildingOpera_BO_UpgradeLvl  BuildingOpera = 10
)

// Enum value maps for BuildingOpera.
var (
	BuildingOpera_name = map[int32]string{
		0:  "BO_Invalid",
		1:  "BO_RepairStart",
		2:  "BO_RepairEnd",
		3:  "BO_RemoveStart",
		4:  "BO_RemoveEnd",
		5:  "BO_Accelerate",
		10: "BO_UpgradeLvl",
	}
	BuildingOpera_value = map[string]int32{
		"BO_Invalid":     0,
		"BO_RepairStart": 1,
		"BO_RepairEnd":   2,
		"BO_RemoveStart": 3,
		"BO_RemoveEnd":   4,
		"BO_Accelerate":  5,
		"BO_UpgradeLvl":  10,
	}
)

func (x BuildingOpera) Enum() *BuildingOpera {
	p := new(BuildingOpera)
	*p = x
	return p
}

func (x BuildingOpera) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuildingOpera) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[3].Descriptor()
}

func (BuildingOpera) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[3]
}

func (x BuildingOpera) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuildingOpera.Descriptor instead.
func (BuildingOpera) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{3}
}

type PropFrom int32

const (
	PropFrom_InvalidPropFrom PropFrom = 0
	PropFrom_WareHouse       PropFrom = 1
	PropFrom_Bag             PropFrom = 2
)

// Enum value maps for PropFrom.
var (
	PropFrom_name = map[int32]string{
		0: "InvalidPropFrom",
		1: "WareHouse",
		2: "Bag",
	}
	PropFrom_value = map[string]int32{
		"InvalidPropFrom": 0,
		"WareHouse":       1,
		"Bag":             2,
	}
)

func (x PropFrom) Enum() *PropFrom {
	p := new(PropFrom)
	*p = x
	return p
}

func (x PropFrom) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PropFrom) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[4].Descriptor()
}

func (PropFrom) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[4]
}

func (x PropFrom) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PropFrom.Descriptor instead.
func (PropFrom) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{4}
}

type PropOpera int32

const (
	PropOpera_InvalidOpera PropOpera = 0
	PropOpera_Sell         PropOpera = 1
)

// Enum value maps for PropOpera.
var (
	PropOpera_name = map[int32]string{
		0: "InvalidOpera",
		1: "Sell",
	}
	PropOpera_value = map[string]int32{
		"InvalidOpera": 0,
		"Sell":         1,
	}
)

func (x PropOpera) Enum() *PropOpera {
	p := new(PropOpera)
	*p = x
	return p
}

func (x PropOpera) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PropOpera) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[5].Descriptor()
}

func (PropOpera) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[5]
}

func (x PropOpera) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PropOpera.Descriptor instead.
func (PropOpera) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{5}
}

type OrderOperaCmd int32

const (
	OrderOperaCmd_OrderOperaCmdInvalid OrderOperaCmd = 0
	OrderOperaCmd_GetOrder             OrderOperaCmd = 1
	OrderOperaCmd_SubmitOrder          OrderOperaCmd = 2
	OrderOperaCmd_RefreshOrder         OrderOperaCmd = 3
)

// Enum value maps for OrderOperaCmd.
var (
	OrderOperaCmd_name = map[int32]string{
		0: "OrderOperaCmdInvalid",
		1: "GetOrder",
		2: "SubmitOrder",
		3: "RefreshOrder",
	}
	OrderOperaCmd_value = map[string]int32{
		"OrderOperaCmdInvalid": 0,
		"GetOrder":             1,
		"SubmitOrder":          2,
		"RefreshOrder":         3,
	}
)

func (x OrderOperaCmd) Enum() *OrderOperaCmd {
	p := new(OrderOperaCmd)
	*p = x
	return p
}

func (x OrderOperaCmd) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderOperaCmd) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[6].Descriptor()
}

func (OrderOperaCmd) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[6]
}

func (x OrderOperaCmd) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderOperaCmd.Descriptor instead.
func (OrderOperaCmd) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{6}
}

type WarehouseCmd int32

const (
	WarehouseCmd_WarehouseCmdInvalid WarehouseCmd = 0
	WarehouseCmd_GetWareHouse        WarehouseCmd = 1
	WarehouseCmd_Expand              WarehouseCmd = 2
)

// Enum value maps for WarehouseCmd.
var (
	WarehouseCmd_name = map[int32]string{
		0: "WarehouseCmdInvalid",
		1: "GetWareHouse",
		2: "Expand",
	}
	WarehouseCmd_value = map[string]int32{
		"WarehouseCmdInvalid": 0,
		"GetWareHouse":        1,
		"Expand":              2,
	}
)

func (x WarehouseCmd) Enum() *WarehouseCmd {
	p := new(WarehouseCmd)
	*p = x
	return p
}

func (x WarehouseCmd) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WarehouseCmd) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[7].Descriptor()
}

func (WarehouseCmd) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[7]
}

func (x WarehouseCmd) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WarehouseCmd.Descriptor instead.
func (WarehouseCmd) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{7}
}

type WarehouseExpandCmd int32

const (
	WarehouseExpandCmd_EWEC_Invalid WarehouseExpandCmd = 0
	WarehouseExpandCmd_EWEC_Props   WarehouseExpandCmd = 1 // 道具扩展
	WarehouseExpandCmd_EWEC_Coupons WarehouseExpandCmd = 2 // 仓库券扩展
)

// Enum value maps for WarehouseExpandCmd.
var (
	WarehouseExpandCmd_name = map[int32]string{
		0: "EWEC_Invalid",
		1: "EWEC_Props",
		2: "EWEC_Coupons",
	}
	WarehouseExpandCmd_value = map[string]int32{
		"EWEC_Invalid": 0,
		"EWEC_Props":   1,
		"EWEC_Coupons": 2,
	}
)

func (x WarehouseExpandCmd) Enum() *WarehouseExpandCmd {
	p := new(WarehouseExpandCmd)
	*p = x
	return p
}

func (x WarehouseExpandCmd) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WarehouseExpandCmd) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[8].Descriptor()
}

func (WarehouseExpandCmd) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[8]
}

func (x WarehouseExpandCmd) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WarehouseExpandCmd.Descriptor instead.
func (WarehouseExpandCmd) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{8}
}

type ItemChange int32

const (
	ItemChange_ItemAll  ItemChange = 0
	ItemChange_UpdateTo ItemChange = 1
)

// Enum value maps for ItemChange.
var (
	ItemChange_name = map[int32]string{
		0: "ItemAll",
		1: "UpdateTo",
	}
	ItemChange_value = map[string]int32{
		"ItemAll":  0,
		"UpdateTo": 1,
	}
)

func (x ItemChange) Enum() *ItemChange {
	p := new(ItemChange)
	*p = x
	return p
}

func (x ItemChange) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemChange) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[9].Descriptor()
}

func (ItemChange) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[9]
}

func (x ItemChange) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemChange.Descriptor instead.
func (ItemChange) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{9}
}

type ProductOperaCmd int32

const (
	ProductOperaCmd_ProductOperaCmdInvalid ProductOperaCmd = 0
	ProductOperaCmd_GetProduct             ProductOperaCmd = 1
	ProductOperaCmd_ProductStart           ProductOperaCmd = 2
	ProductOperaCmd_ProductEnd             ProductOperaCmd = 3
	ProductOperaCmd_UnlockField            ProductOperaCmd = 4
	ProductOperaCmd_Accelerate             ProductOperaCmd = 5
)

// Enum value maps for ProductOperaCmd.
var (
	ProductOperaCmd_name = map[int32]string{
		0: "ProductOperaCmdInvalid",
		1: "GetProduct",
		2: "ProductStart",
		3: "ProductEnd",
		4: "UnlockField",
		5: "Accelerate",
	}
	ProductOperaCmd_value = map[string]int32{
		"ProductOperaCmdInvalid": 0,
		"GetProduct":             1,
		"ProductStart":           2,
		"ProductEnd":             3,
		"UnlockField":            4,
		"Accelerate":             5,
	}
)

func (x ProductOperaCmd) Enum() *ProductOperaCmd {
	p := new(ProductOperaCmd)
	*p = x
	return p
}

func (x ProductOperaCmd) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProductOperaCmd) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[10].Descriptor()
}

func (ProductOperaCmd) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[10]
}

func (x ProductOperaCmd) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProductOperaCmd.Descriptor instead.
func (ProductOperaCmd) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{10}
}

type ShopOperaCmd int32

const (
	ShopOperaCmd_SO_Get ShopOperaCmd = 0
	ShopOperaCmd_SO_Buy ShopOperaCmd = 1
)

// Enum value maps for ShopOperaCmd.
var (
	ShopOperaCmd_name = map[int32]string{
		0: "SO_Get",
		1: "SO_Buy",
	}
	ShopOperaCmd_value = map[string]int32{
		"SO_Get": 0,
		"SO_Buy": 1,
	}
)

func (x ShopOperaCmd) Enum() *ShopOperaCmd {
	p := new(ShopOperaCmd)
	*p = x
	return p
}

func (x ShopOperaCmd) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShopOperaCmd) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[11].Descriptor()
}

func (ShopOperaCmd) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[11]
}

func (x ShopOperaCmd) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShopOperaCmd.Descriptor instead.
func (ShopOperaCmd) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{11}
}

type TaskOperaCmd int32

const (
	TaskOperaCmd_TOC_Get      TaskOperaCmd = 0
	TaskOperaCmd_TOC_Accept   TaskOperaCmd = 1
	TaskOperaCmd_TOC_Submit   TaskOperaCmd = 2
	TaskOperaCmd_TOC_Notify   TaskOperaCmd = 3
	TaskOperaCmd_TOC_FetchAll TaskOperaCmd = 4
)

// Enum value maps for TaskOperaCmd.
var (
	TaskOperaCmd_name = map[int32]string{
		0: "TOC_Get",
		1: "TOC_Accept",
		2: "TOC_Submit",
		3: "TOC_Notify",
		4: "TOC_FetchAll",
	}
	TaskOperaCmd_value = map[string]int32{
		"TOC_Get":      0,
		"TOC_Accept":   1,
		"TOC_Submit":   2,
		"TOC_Notify":   3,
		"TOC_FetchAll": 4,
	}
)

func (x TaskOperaCmd) Enum() *TaskOperaCmd {
	p := new(TaskOperaCmd)
	*p = x
	return p
}

func (x TaskOperaCmd) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskOperaCmd) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[12].Descriptor()
}

func (TaskOperaCmd) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[12]
}

func (x TaskOperaCmd) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskOperaCmd.Descriptor instead.
func (TaskOperaCmd) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{12}
}

type EReward int32

const (
	EReward_ER_Invalid    EReward = 0
	EReward_ER_Lvl        EReward = 1
	EReward_ER_ComfortLvl EReward = 2
)

// Enum value maps for EReward.
var (
	EReward_name = map[int32]string{
		0: "ER_Invalid",
		1: "ER_Lvl",
		2: "ER_ComfortLvl",
	}
	EReward_value = map[string]int32{
		"ER_Invalid":    0,
		"ER_Lvl":        1,
		"ER_ComfortLvl": 2,
	}
)

func (x EReward) Enum() *EReward {
	p := new(EReward)
	*p = x
	return p
}

func (x EReward) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EReward) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[13].Descriptor()
}

func (EReward) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[13]
}

func (x EReward) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EReward.Descriptor instead.
func (EReward) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{13}
}

type EMaterialType int32

const (
	EMaterialType_EMT_Invalid EMaterialType = 0
	EMaterialType_EMT_Main    EMaterialType = 1
	EMaterialType_EMT_Sub     EMaterialType = 2
)

// Enum value maps for EMaterialType.
var (
	EMaterialType_name = map[int32]string{
		0: "EMT_Invalid",
		1: "EMT_Main",
		2: "EMT_Sub",
	}
	EMaterialType_value = map[string]int32{
		"EMT_Invalid": 0,
		"EMT_Main":    1,
		"EMT_Sub":     2,
	}
)

func (x EMaterialType) Enum() *EMaterialType {
	p := new(EMaterialType)
	*p = x
	return p
}

func (x EMaterialType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EMaterialType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[14].Descriptor()
}

func (EMaterialType) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[14]
}

func (x EMaterialType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EMaterialType.Descriptor instead.
func (EMaterialType) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{14}
}

type EDeliveryOpera int32

const (
	EDeliveryOpera_EDO_Get     EDeliveryOpera = 0
	EDeliveryOpera_EDO_Load    EDeliveryOpera = 1 //! 装货 最后一个装完自动发车
	EDeliveryOpera_EDO_Flash   EDeliveryOpera = 2 //! 光速返程
	EDeliveryOpera_EDO_Fin     EDeliveryOpera = 3 //! 配送完成的确认 最后一个奖励领取完，自动刷新下一个货物清单
	EDeliveryOpera_EDO_Restock EDeliveryOpera = 4 //! 道具补货
)

// Enum value maps for EDeliveryOpera.
var (
	EDeliveryOpera_name = map[int32]string{
		0: "EDO_Get",
		1: "EDO_Load",
		2: "EDO_Flash",
		3: "EDO_Fin",
		4: "EDO_Restock",
	}
	EDeliveryOpera_value = map[string]int32{
		"EDO_Get":     0,
		"EDO_Load":    1,
		"EDO_Flash":   2,
		"EDO_Fin":     3,
		"EDO_Restock": 4,
	}
)

func (x EDeliveryOpera) Enum() *EDeliveryOpera {
	p := new(EDeliveryOpera)
	*p = x
	return p
}

func (x EDeliveryOpera) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EDeliveryOpera) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[15].Descriptor()
}

func (EDeliveryOpera) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[15]
}

func (x EDeliveryOpera) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EDeliveryOpera.Descriptor instead.
func (EDeliveryOpera) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{15}
}

type ELianLianKanOpera int32

const (
	ELianLianKanOpera_ELLKO_GET      ELianLianKanOpera = 0 //! 无效操作
	ELianLianKanOpera_ELLKO_MATCHING ELianLianKanOpera = 1 //! 匹配操作 对应ELianLianKanMatch
	ELianLianKanOpera_ELLKO_MATCHED  ELianLianKanOpera = 2 //! 匹配成功  对应model.LLKRoom
	ELianLianKanOpera_ELLKO_GAMING   ELianLianKanOpera = 3 //! 游戏中的连线及道具操作 对应 model.LLKRoom
	ELianLianKanOpera_ELLKO_GAME_END ELianLianKanOpera = 4 //! 游戏结算 两种情况：1. 一方连完 2到时间结束
)

// Enum value maps for ELianLianKanOpera.
var (
	ELianLianKanOpera_name = map[int32]string{
		0: "ELLKO_GET",
		1: "ELLKO_MATCHING",
		2: "ELLKO_MATCHED",
		3: "ELLKO_GAMING",
		4: "ELLKO_GAME_END",
	}
	ELianLianKanOpera_value = map[string]int32{
		"ELLKO_GET":      0,
		"ELLKO_MATCHING": 1,
		"ELLKO_MATCHED":  2,
		"ELLKO_GAMING":   3,
		"ELLKO_GAME_END": 4,
	}
)

func (x ELianLianKanOpera) Enum() *ELianLianKanOpera {
	p := new(ELianLianKanOpera)
	*p = x
	return p
}

func (x ELianLianKanOpera) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ELianLianKanOpera) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[16].Descriptor()
}

func (ELianLianKanOpera) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[16]
}

func (x ELianLianKanOpera) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ELianLianKanOpera.Descriptor instead.
func (ELianLianKanOpera) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{16}
}

type ELLKGetOperaType int32

const (
	ELLKGetOperaType_ELLKG_INVALID ELLKGetOperaType = 0 //! 无效操作
	ELLKGetOperaType_ELLKG_MATCHED ELLKGetOperaType = 1 //! 掉线回来请求匹配数据  返回的是matched和roomId
	ELLKGetOperaType_ELLKG_GAMING  ELLKGetOperaType = 2 //! 掉线回来请求游戏中数据  返回的是gaming，如果游戏结束有返回错误码
)

// Enum value maps for ELLKGetOperaType.
var (
	ELLKGetOperaType_name = map[int32]string{
		0: "ELLKG_INVALID",
		1: "ELLKG_MATCHED",
		2: "ELLKG_GAMING",
	}
	ELLKGetOperaType_value = map[string]int32{
		"ELLKG_INVALID": 0,
		"ELLKG_MATCHED": 1,
		"ELLKG_GAMING":  2,
	}
)

func (x ELLKGetOperaType) Enum() *ELLKGetOperaType {
	p := new(ELLKGetOperaType)
	*p = x
	return p
}

func (x ELLKGetOperaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ELLKGetOperaType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[17].Descriptor()
}

func (ELLKGetOperaType) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[17]
}

func (x ELLKGetOperaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ELLKGetOperaType.Descriptor instead.
func (ELLKGetOperaType) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{17}
}

type ELianLianKanMatch int32

const (
	ELianLianKanMatch_ELLKM_INVALID  ELianLianKanMatch = 0 //! 无效操作
	ELianLianKanMatch_ELLKM_APPLY    ELianLianKanMatch = 1 //! 申请匹配
	ELianLianKanMatch_ELLKM_TIME_OUT ELianLianKanMatch = 2 //! 匹配超时
	ELianLianKanMatch_ELLKM_CANCEL   ELianLianKanMatch = 3 //! 取消匹配
)

// Enum value maps for ELianLianKanMatch.
var (
	ELianLianKanMatch_name = map[int32]string{
		0: "ELLKM_INVALID",
		1: "ELLKM_APPLY",
		2: "ELLKM_TIME_OUT",
		3: "ELLKM_CANCEL",
	}
	ELianLianKanMatch_value = map[string]int32{
		"ELLKM_INVALID":  0,
		"ELLKM_APPLY":    1,
		"ELLKM_TIME_OUT": 2,
		"ELLKM_CANCEL":   3,
	}
)

func (x ELianLianKanMatch) Enum() *ELianLianKanMatch {
	p := new(ELianLianKanMatch)
	*p = x
	return p
}

func (x ELianLianKanMatch) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ELianLianKanMatch) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[18].Descriptor()
}

func (ELianLianKanMatch) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[18]
}

func (x ELianLianKanMatch) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ELianLianKanMatch.Descriptor instead.
func (ELianLianKanMatch) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{18}
}

type ELianLianKanMatchedOpera int32

const (
	ELianLianKanMatchedOpera_ELLKMO_INVALID              ELianLianKanMatchedOpera = 0 //! 无效操作
	ELianLianKanMatchedOpera_ELLKMO_CONFIRM              ELianLianKanMatchedOpera = 1 //! 确认匹配
	ELianLianKanMatchedOpera_ELLKMO_REFUSE               ELianLianKanMatchedOpera = 2 //! 拒绝匹配
	ELianLianKanMatchedOpera_ELLKMO_TIME_OUT_START_GAME  ELianLianKanMatchedOpera = 3 //! 一方不准备的超时后自动开始游戏
	ELianLianKanMatchedOpera_ELLKMO_TIME_OUT_END_MATCHED ELianLianKanMatchedOpera = 4 //! 双方不准备的超时结束
	ELianLianKanMatchedOpera_ELLKMO_LOGOUT               ELianLianKanMatchedOpera = 5 //! 玩家掉线
)

// Enum value maps for ELianLianKanMatchedOpera.
var (
	ELianLianKanMatchedOpera_name = map[int32]string{
		0: "ELLKMO_INVALID",
		1: "ELLKMO_CONFIRM",
		2: "ELLKMO_REFUSE",
		3: "ELLKMO_TIME_OUT_START_GAME",
		4: "ELLKMO_TIME_OUT_END_MATCHED",
		5: "ELLKMO_LOGOUT",
	}
	ELianLianKanMatchedOpera_value = map[string]int32{
		"ELLKMO_INVALID":              0,
		"ELLKMO_CONFIRM":              1,
		"ELLKMO_REFUSE":               2,
		"ELLKMO_TIME_OUT_START_GAME":  3,
		"ELLKMO_TIME_OUT_END_MATCHED": 4,
		"ELLKMO_LOGOUT":               5,
	}
)

func (x ELianLianKanMatchedOpera) Enum() *ELianLianKanMatchedOpera {
	p := new(ELianLianKanMatchedOpera)
	*p = x
	return p
}

func (x ELianLianKanMatchedOpera) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ELianLianKanMatchedOpera) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[19].Descriptor()
}

func (ELianLianKanMatchedOpera) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[19]
}

func (x ELianLianKanMatchedOpera) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ELianLianKanMatchedOpera.Descriptor instead.
func (ELianLianKanMatchedOpera) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{19}
}

type EPetBuildingOpera int32

const (
	EPetBuildingOpera_EPBO_INVALID    EPetBuildingOpera = 0 //! 无效操作
	EPetBuildingOpera_EPBO_GET        EPetBuildingOpera = 1 //! 拉取
	EPetBuildingOpera_EPBO_ADD        EPetBuildingOpera = 2 //！新增招募
	EPetBuildingOpera_EPBO_ACCELERATE EPetBuildingOpera = 3 // 加速招募
	EPetBuildingOpera_EPBO_STOP       EPetBuildingOpera = 4 // 停止招募
	EPetBuildingOpera_EPBO_AWARD      EPetBuildingOpera = 5 //! 领取宠物
)

// Enum value maps for EPetBuildingOpera.
var (
	EPetBuildingOpera_name = map[int32]string{
		0: "EPBO_INVALID",
		1: "EPBO_GET",
		2: "EPBO_ADD",
		3: "EPBO_ACCELERATE",
		4: "EPBO_STOP",
		5: "EPBO_AWARD",
	}
	EPetBuildingOpera_value = map[string]int32{
		"EPBO_INVALID":    0,
		"EPBO_GET":        1,
		"EPBO_ADD":        2,
		"EPBO_ACCELERATE": 3,
		"EPBO_STOP":       4,
		"EPBO_AWARD":      5,
	}
)

func (x EPetBuildingOpera) Enum() *EPetBuildingOpera {
	p := new(EPetBuildingOpera)
	*p = x
	return p
}

func (x EPetBuildingOpera) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPetBuildingOpera) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[20].Descriptor()
}

func (EPetBuildingOpera) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[20]
}

func (x EPetBuildingOpera) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EPetBuildingOpera.Descriptor instead.
func (EPetBuildingOpera) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{20}
}

type EPetOpera int32

const (
	EPetOpera_EPO_INVALID       EPetOpera = 0 //! 无效操作
	EPetOpera_EPO_FETCH         EPetOpera = 1 //! 拉取
	EPetOpera_EPO_UPGRADE       EPetOpera = 2 //! 升级、突破
	EPetOpera_EPO_ASSIGN        EPetOpera = 3 //! 指派工作
	EPetOpera_EPO_UN_ASSIGN     EPetOpera = 4 //! 取消指派工作
	EPetOpera_EPO_RESET         EPetOpera = 5 //! 宠物涅槃
	EPetOpera_EPO_SKILL_UPGRADE EPetOpera = 6 //! 技能升级
	EPetOpera_EPO_SKILL_CHANGE  EPetOpera = 7 //! 技能重置
	EPetOpera_EPO_RELEASE       EPetOpera = 8 //! 放生
)

// Enum value maps for EPetOpera.
var (
	EPetOpera_name = map[int32]string{
		0: "EPO_INVALID",
		1: "EPO_FETCH",
		2: "EPO_UPGRADE",
		3: "EPO_ASSIGN",
		4: "EPO_UN_ASSIGN",
		5: "EPO_RESET",
		6: "EPO_SKILL_UPGRADE",
		7: "EPO_SKILL_CHANGE",
		8: "EPO_RELEASE",
	}
	EPetOpera_value = map[string]int32{
		"EPO_INVALID":       0,
		"EPO_FETCH":         1,
		"EPO_UPGRADE":       2,
		"EPO_ASSIGN":        3,
		"EPO_UN_ASSIGN":     4,
		"EPO_RESET":         5,
		"EPO_SKILL_UPGRADE": 6,
		"EPO_SKILL_CHANGE":  7,
		"EPO_RELEASE":       8,
	}
)

func (x EPetOpera) Enum() *EPetOpera {
	p := new(EPetOpera)
	*p = x
	return p
}

func (x EPetOpera) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPetOpera) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[21].Descriptor()
}

func (EPetOpera) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[21]
}

func (x EPetOpera) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EPetOpera.Descriptor instead.
func (EPetOpera) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{21}
}

type ENPCOpera int32

const (
	ENPCOpera_ENO_INVALID ENPCOpera = 0 //! 无效操作
	ENPCOpera_ENO_INFO    ENPCOpera = 1 //! 拉取
	ENPCOpera_ENO_INVITE  ENPCOpera = 2 //! 邀请来庄园
	ENPCOpera_ENO_GIVE    ENPCOpera = 3 //赠送喜好礼物
	ENPCOpera_ENO_TOKEN   ENPCOpera = 4 //领取手信
)

// Enum value maps for ENPCOpera.
var (
	ENPCOpera_name = map[int32]string{
		0: "ENO_INVALID",
		1: "ENO_INFO",
		2: "ENO_INVITE",
		3: "ENO_GIVE",
		4: "ENO_TOKEN",
	}
	ENPCOpera_value = map[string]int32{
		"ENO_INVALID": 0,
		"ENO_INFO":    1,
		"ENO_INVITE":  2,
		"ENO_GIVE":    3,
		"ENO_TOKEN":   4,
	}
)

func (x ENPCOpera) Enum() *ENPCOpera {
	p := new(ENPCOpera)
	*p = x
	return p
}

func (x ENPCOpera) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ENPCOpera) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[22].Descriptor()
}

func (ENPCOpera) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[22]
}

func (x ENPCOpera) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ENPCOpera.Descriptor instead.
func (ENPCOpera) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{22}
}

type EMallOperType int32

const (
	EMallOperType_MOT_Get EMallOperType = 0
	EMallOperType_MOT_Buy EMallOperType = 1
)

// Enum value maps for EMallOperType.
var (
	EMallOperType_name = map[int32]string{
		0: "MOT_Get",
		1: "MOT_Buy",
	}
	EMallOperType_value = map[string]int32{
		"MOT_Get": 0,
		"MOT_Buy": 1,
	}
)

func (x EMallOperType) Enum() *EMallOperType {
	p := new(EMallOperType)
	*p = x
	return p
}

func (x EMallOperType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EMallOperType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[23].Descriptor()
}

func (EMallOperType) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[23]
}

func (x EMallOperType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EMallOperType.Descriptor instead.
func (EMallOperType) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{23}
}

// 签到
type EDailySignOperType int32

const (
	EDailySignOperType_DSOT_Get    EDailySignOperType = 0
	EDailySignOperType_DSOT_Sign   EDailySignOperType = 1
	EDailySignOperType_DSOT_ReSign EDailySignOperType = 2 // 补签
)

// Enum value maps for EDailySignOperType.
var (
	EDailySignOperType_name = map[int32]string{
		0: "DSOT_Get",
		1: "DSOT_Sign",
		2: "DSOT_ReSign",
	}
	EDailySignOperType_value = map[string]int32{
		"DSOT_Get":    0,
		"DSOT_Sign":   1,
		"DSOT_ReSign": 2,
	}
)

func (x EDailySignOperType) Enum() *EDailySignOperType {
	p := new(EDailySignOperType)
	*p = x
	return p
}

func (x EDailySignOperType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EDailySignOperType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[24].Descriptor()
}

func (EDailySignOperType) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[24]
}

func (x EDailySignOperType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EDailySignOperType.Descriptor instead.
func (EDailySignOperType) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{24}
}

type SevenDaySignReqType int32

const (
	SevenDaySignReqType_SDSR_GET_INFO SevenDaySignReqType = 0 //拉数据
	SevenDaySignReqType_SDSR_SIGN     SevenDaySignReqType = 1 //签到
)

// Enum value maps for SevenDaySignReqType.
var (
	SevenDaySignReqType_name = map[int32]string{
		0: "SDSR_GET_INFO",
		1: "SDSR_SIGN",
	}
	SevenDaySignReqType_value = map[string]int32{
		"SDSR_GET_INFO": 0,
		"SDSR_SIGN":     1,
	}
)

func (x SevenDaySignReqType) Enum() *SevenDaySignReqType {
	p := new(SevenDaySignReqType)
	*p = x
	return p
}

func (x SevenDaySignReqType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SevenDaySignReqType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[25].Descriptor()
}

func (SevenDaySignReqType) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[25]
}

func (x SevenDaySignReqType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SevenDaySignReqType.Descriptor instead.
func (SevenDaySignReqType) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{25}
}

type ETimeLimitedTaskOperaType int32

const (
	ETimeLimitedTaskOperaType_ETLTOY_Invalid    ETimeLimitedTaskOperaType = 0
	ETimeLimitedTaskOperaType_ETLTOY_Get        ETimeLimitedTaskOperaType = 1 // 拉取数据
	ETimeLimitedTaskOperaType_ETLTOY_TakeReward ETimeLimitedTaskOperaType = 2 // 领取奖励
)

// Enum value maps for ETimeLimitedTaskOperaType.
var (
	ETimeLimitedTaskOperaType_name = map[int32]string{
		0: "ETLTOY_Invalid",
		1: "ETLTOY_Get",
		2: "ETLTOY_TakeReward",
	}
	ETimeLimitedTaskOperaType_value = map[string]int32{
		"ETLTOY_Invalid":    0,
		"ETLTOY_Get":        1,
		"ETLTOY_TakeReward": 2,
	}
)

func (x ETimeLimitedTaskOperaType) Enum() *ETimeLimitedTaskOperaType {
	p := new(ETimeLimitedTaskOperaType)
	*p = x
	return p
}

func (x ETimeLimitedTaskOperaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ETimeLimitedTaskOperaType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[26].Descriptor()
}

func (ETimeLimitedTaskOperaType) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[26]
}

func (x ETimeLimitedTaskOperaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ETimeLimitedTaskOperaType.Descriptor instead.
func (ETimeLimitedTaskOperaType) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{26}
}

// 每日任务
type DailyTaskReqType int32

const (
	DailyTaskReqType_DTRT_Info   DailyTaskReqType = 0 //拉数据
	DailyTaskReqType_DTRT_Reward DailyTaskReqType = 1 //领奖
)

// Enum value maps for DailyTaskReqType.
var (
	DailyTaskReqType_name = map[int32]string{
		0: "DTRT_Info",
		1: "DTRT_Reward",
	}
	DailyTaskReqType_value = map[string]int32{
		"DTRT_Info":   0,
		"DTRT_Reward": 1,
	}
)

func (x DailyTaskReqType) Enum() *DailyTaskReqType {
	p := new(DailyTaskReqType)
	*p = x
	return p
}

func (x DailyTaskReqType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DailyTaskReqType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[27].Descriptor()
}

func (DailyTaskReqType) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[27]
}

func (x DailyTaskReqType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DailyTaskReqType.Descriptor instead.
func (DailyTaskReqType) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{27}
}

// 全民返利
type GlobalRebateReqType int32

const (
	GlobalRebateReqType_GRRT_Info         GlobalRebateReqType = 0 //拉数据
	GlobalRebateReqType_GRRT_GlobalReward GlobalRebateReqType = 1 //全服领奖
	GlobalRebateReqType_GRRT_PersonReward GlobalRebateReqType = 2 //个人领奖
)

// Enum value maps for GlobalRebateReqType.
var (
	GlobalRebateReqType_name = map[int32]string{
		0: "GRRT_Info",
		1: "GRRT_GlobalReward",
		2: "GRRT_PersonReward",
	}
	GlobalRebateReqType_value = map[string]int32{
		"GRRT_Info":         0,
		"GRRT_GlobalReward": 1,
		"GRRT_PersonReward": 2,
	}
)

func (x GlobalRebateReqType) Enum() *GlobalRebateReqType {
	p := new(GlobalRebateReqType)
	*p = x
	return p
}

func (x GlobalRebateReqType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GlobalRebateReqType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[28].Descriptor()
}

func (GlobalRebateReqType) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[28]
}

func (x GlobalRebateReqType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GlobalRebateReqType.Descriptor instead.
func (GlobalRebateReqType) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{28}
}

// 触发礼包
type TriggerGiftReqType int32

const (
	TriggerGiftReqType_TGRT_Info    TriggerGiftReqType = 0
	TriggerGiftReqType_TGRT_Trigger TriggerGiftReqType = 1 //触发
)

// Enum value maps for TriggerGiftReqType.
var (
	TriggerGiftReqType_name = map[int32]string{
		0: "TGRT_Info",
		1: "TGRT_Trigger",
	}
	TriggerGiftReqType_value = map[string]int32{
		"TGRT_Info":    0,
		"TGRT_Trigger": 1,
	}
)

func (x TriggerGiftReqType) Enum() *TriggerGiftReqType {
	p := new(TriggerGiftReqType)
	*p = x
	return p
}

func (x TriggerGiftReqType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TriggerGiftReqType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[29].Descriptor()
}

func (TriggerGiftReqType) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[29]
}

func (x TriggerGiftReqType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TriggerGiftReqType.Descriptor instead.
func (TriggerGiftReqType) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{29}
}

// 基金投资
type FoundationInvestReqType int32

const (
	FoundationInvestReqType_FGRT_Info   FoundationInvestReqType = 0
	FoundationInvestReqType_FGRT_Reward FoundationInvestReqType = 1 //领奖
)

// Enum value maps for FoundationInvestReqType.
var (
	FoundationInvestReqType_name = map[int32]string{
		0: "FGRT_Info",
		1: "FGRT_Reward",
	}
	FoundationInvestReqType_value = map[string]int32{
		"FGRT_Info":   0,
		"FGRT_Reward": 1,
	}
)

func (x FoundationInvestReqType) Enum() *FoundationInvestReqType {
	p := new(FoundationInvestReqType)
	*p = x
	return p
}

func (x FoundationInvestReqType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FoundationInvestReqType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[30].Descriptor()
}

func (FoundationInvestReqType) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[30]
}

func (x FoundationInvestReqType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FoundationInvestReqType.Descriptor instead.
func (FoundationInvestReqType) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{30}
}

// 排行榜
type RankType int32

const (
	RankType_RankTypeInvalid      RankType = 0
	RankType_RankTypeGlobalCharge RankType = 1 // 全服累充
	RankType_RankTypeComfort      RankType = 2 //舒适度
)

// Enum value maps for RankType.
var (
	RankType_name = map[int32]string{
		0: "RankTypeInvalid",
		1: "RankTypeGlobalCharge",
		2: "RankTypeComfort",
	}
	RankType_value = map[string]int32{
		"RankTypeInvalid":      0,
		"RankTypeGlobalCharge": 1,
		"RankTypeComfort":      2,
	}
)

func (x RankType) Enum() *RankType {
	p := new(RankType)
	*p = x
	return p
}

func (x RankType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RankType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[31].Descriptor()
}

func (RankType) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[31]
}

func (x RankType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RankType.Descriptor instead.
func (RankType) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{31}
}

type ENotifyDataType int32

const (
	ENotifyDataType_ENDT_FirstChargeTime ENotifyDataType = 0
	ENotifyDataType_ENDT_MonthSupplyTime ENotifyDataType = 1
)

// Enum value maps for ENotifyDataType.
var (
	ENotifyDataType_name = map[int32]string{
		0: "ENDT_FirstChargeTime",
		1: "ENDT_MonthSupplyTime",
	}
	ENotifyDataType_value = map[string]int32{
		"ENDT_FirstChargeTime": 0,
		"ENDT_MonthSupplyTime": 1,
	}
)

func (x ENotifyDataType) Enum() *ENotifyDataType {
	p := new(ENotifyDataType)
	*p = x
	return p
}

func (x ENotifyDataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ENotifyDataType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[32].Descriptor()
}

func (ENotifyDataType) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[32]
}

func (x ENotifyDataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ENotifyDataType.Descriptor instead.
func (ENotifyDataType) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{32}
}

type EmailReqType int32

const (
	EmailReqType_EMAIL_GET_INFO  EmailReqType = 0 //拉数据
	EmailReqType_EMAIL_READ      EmailReqType = 1 //读邮件
	EmailReqType_EMIIL_GET_AWARD EmailReqType = 2 //领奖
	EmailReqType_EMAIL_DELETE    EmailReqType = 3 //删除
)

// Enum value maps for EmailReqType.
var (
	EmailReqType_name = map[int32]string{
		0: "EMAIL_GET_INFO",
		1: "EMAIL_READ",
		2: "EMIIL_GET_AWARD",
		3: "EMAIL_DELETE",
	}
	EmailReqType_value = map[string]int32{
		"EMAIL_GET_INFO":  0,
		"EMAIL_READ":      1,
		"EMIIL_GET_AWARD": 2,
		"EMAIL_DELETE":    3,
	}
)

func (x EmailReqType) Enum() *EmailReqType {
	p := new(EmailReqType)
	*p = x
	return p
}

func (x EmailReqType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmailReqType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_msg_proto_enumTypes[33].Descriptor()
}

func (EmailReqType) Type() protoreflect.EnumType {
	return &file_game_msg_proto_enumTypes[33]
}

func (x EmailReqType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmailReqType.Descriptor instead.
func (EmailReqType) EnumDescriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{33}
}

type C2SCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version int32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"` //客户端版本，现在传0就
}

func (x *C2SCommon) Reset() {
	*x = C2SCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SCommon) ProtoMessage() {}

func (x *C2SCommon) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SCommon.ProtoReflect.Descriptor instead.
func (*C2SCommon) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{0}
}

func (x *C2SCommon) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type S2CCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode STATUS `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
}

func (x *S2CCommon) Reset() {
	*x = S2CCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CCommon) ProtoMessage() {}

func (x *S2CCommon) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CCommon.ProtoReflect.Descriptor instead.
func (*S2CCommon) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{1}
}

func (x *S2CCommon) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

type C2SLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     int32  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"` //客户端版本，现在传0就
	Timestamp   int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Id          string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"` // openId
	Token       string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	IsReconnect bool   `protobuf:"varint,5,opt,name=isReconnect,proto3" json:"isReconnect,omitempty"`
	Ip          string `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
	OpenKey     string `protobuf:"bytes,7,opt,name=openKey,proto3" json:"openKey,omitempty"`
	Pf          string `protobuf:"bytes,8,opt,name=pf,proto3" json:"pf,omitempty"`
	UserId      string `protobuf:"bytes,9,opt,name=userId,proto3" json:"userId,omitempty"` //! 用于测试版本
}

func (x *C2SLogin) Reset() {
	*x = C2SLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SLogin) ProtoMessage() {}

func (x *C2SLogin) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SLogin.ProtoReflect.Descriptor instead.
func (*C2SLogin) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{2}
}

func (x *C2SLogin) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *C2SLogin) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *C2SLogin) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *C2SLogin) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *C2SLogin) GetIsReconnect() bool {
	if x != nil {
		return x.IsReconnect
	}
	return false
}

func (x *C2SLogin) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *C2SLogin) GetOpenKey() string {
	if x != nil {
		return x.OpenKey
	}
	return ""
}

func (x *C2SLogin) GetPf() string {
	if x != nil {
		return x.Pf
	}
	return ""
}

func (x *C2SLogin) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type S2CLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode    STATUS       `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	UserBase   *UserBase    `protobuf:"bytes,2,opt,name=userBase,proto3" json:"userBase,omitempty"`
	World      *World       `protobuf:"bytes,3,opt,name=world,proto3" json:"world,omitempty"`
	PlantList  []*PlantInfo `protobuf:"bytes,5,rep,name=plantList,proto3" json:"plantList,omitempty"`
	SvrTime    uint32       `protobuf:"varint,6,opt,name=SvrTime,proto3" json:"SvrTime,omitempty"`
	Lvl        uint32       `protobuf:"varint,7,opt,name=lvl,proto3" json:"lvl,omitempty"`
	FirstLogin bool         `protobuf:"varint,8,opt,name=firstLogin,proto3" json:"firstLogin,omitempty"`
}

func (x *S2CLogin) Reset() {
	*x = S2CLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CLogin) ProtoMessage() {}

func (x *S2CLogin) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CLogin.ProtoReflect.Descriptor instead.
func (*S2CLogin) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{3}
}

func (x *S2CLogin) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CLogin) GetUserBase() *UserBase {
	if x != nil {
		return x.UserBase
	}
	return nil
}

func (x *S2CLogin) GetWorld() *World {
	if x != nil {
		return x.World
	}
	return nil
}

func (x *S2CLogin) GetPlantList() []*PlantInfo {
	if x != nil {
		return x.PlantList
	}
	return nil
}

func (x *S2CLogin) GetSvrTime() uint32 {
	if x != nil {
		return x.SvrTime
	}
	return 0
}

func (x *S2CLogin) GetLvl() uint32 {
	if x != nil {
		return x.Lvl
	}
	return 0
}

func (x *S2CLogin) GetFirstLogin() bool {
	if x != nil {
		return x.FirstLogin
	}
	return false
}

type C2SCreateBuilding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId                uint32              `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	CreateBuildingOpera CreateBuildingOpera `protobuf:"varint,2,opt,name=createBuildingOpera,proto3,enum=msg.CreateBuildingOpera" json:"createBuildingOpera,omitempty"`
	BuildModel          *Model              `protobuf:"bytes,3,opt,name=buildModel,proto3" json:"buildModel,omitempty"`
	BuyFlag             bool                `protobuf:"varint,4,opt,name=buyFlag,proto3" json:"buyFlag,omitempty"`
	BuildUid            string              `protobuf:"bytes,5,opt,name=buildUid,proto3" json:"buildUid,omitempty"`
	PropId              uint32              `protobuf:"varint,6,opt,name=propId,proto3" json:"propId,omitempty"`
}

func (x *C2SCreateBuilding) Reset() {
	*x = C2SCreateBuilding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SCreateBuilding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SCreateBuilding) ProtoMessage() {}

func (x *C2SCreateBuilding) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SCreateBuilding.ProtoReflect.Descriptor instead.
func (*C2SCreateBuilding) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{4}
}

func (x *C2SCreateBuilding) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SCreateBuilding) GetCreateBuildingOpera() CreateBuildingOpera {
	if x != nil {
		return x.CreateBuildingOpera
	}
	return CreateBuildingOpera_CreateBuildingOperaInvalid
}

func (x *C2SCreateBuilding) GetBuildModel() *Model {
	if x != nil {
		return x.BuildModel
	}
	return nil
}

func (x *C2SCreateBuilding) GetBuyFlag() bool {
	if x != nil {
		return x.BuyFlag
	}
	return false
}

func (x *C2SCreateBuilding) GetBuildUid() string {
	if x != nil {
		return x.BuildUid
	}
	return ""
}

func (x *C2SCreateBuilding) GetPropId() uint32 {
	if x != nil {
		return x.PropId
	}
	return 0
}

type S2CCreateBuilding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode             STATUS              `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	CreateBuildingOpera CreateBuildingOpera `protobuf:"varint,2,opt,name=createBuildingOpera,proto3,enum=msg.CreateBuildingOpera" json:"createBuildingOpera,omitempty"`
	BuildUid            string              `protobuf:"bytes,3,opt,name=buildUid,proto3" json:"buildUid,omitempty"`
	BuildStartTime      uint32              `protobuf:"varint,4,opt,name=buildStartTime,proto3" json:"buildStartTime,omitempty"` //! 开始建造时间
}

func (x *S2CCreateBuilding) Reset() {
	*x = S2CCreateBuilding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CCreateBuilding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CCreateBuilding) ProtoMessage() {}

func (x *S2CCreateBuilding) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CCreateBuilding.ProtoReflect.Descriptor instead.
func (*S2CCreateBuilding) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{5}
}

func (x *S2CCreateBuilding) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CCreateBuilding) GetCreateBuildingOpera() CreateBuildingOpera {
	if x != nil {
		return x.CreateBuildingOpera
	}
	return CreateBuildingOpera_CreateBuildingOperaInvalid
}

func (x *S2CCreateBuilding) GetBuildUid() string {
	if x != nil {
		return x.BuildUid
	}
	return ""
}

func (x *S2CCreateBuilding) GetBuildStartTime() uint32 {
	if x != nil {
		return x.BuildStartTime
	}
	return 0
}

type C2SMoveBuilding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId      uint32    `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	Id        string    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Pos       *Position `protobuf:"bytes,3,opt,name=pos,proto3" json:"pos,omitempty"`
	Direction uint32    `protobuf:"varint,4,opt,name=direction,proto3" json:"direction,omitempty"`
}

func (x *C2SMoveBuilding) Reset() {
	*x = C2SMoveBuilding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SMoveBuilding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SMoveBuilding) ProtoMessage() {}

func (x *C2SMoveBuilding) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SMoveBuilding.ProtoReflect.Descriptor instead.
func (*C2SMoveBuilding) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{6}
}

func (x *C2SMoveBuilding) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SMoveBuilding) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *C2SMoveBuilding) GetPos() *Position {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *C2SMoveBuilding) GetDirection() uint32 {
	if x != nil {
		return x.Direction
	}
	return 0
}

type S2CMoveBuilding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode STATUS `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
}

func (x *S2CMoveBuilding) Reset() {
	*x = S2CMoveBuilding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CMoveBuilding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CMoveBuilding) ProtoMessage() {}

func (x *S2CMoveBuilding) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CMoveBuilding.ProtoReflect.Descriptor instead.
func (*S2CMoveBuilding) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{7}
}

func (x *S2CMoveBuilding) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

// ! 建筑相关操作
type C2SBuildingOpera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId          uint32        `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	BuildingOpera BuildingOpera `protobuf:"varint,2,opt,name=buildingOpera,proto3,enum=msg.BuildingOpera" json:"buildingOpera,omitempty"`
	BuildUid      string        `protobuf:"bytes,3,opt,name=buildUid,proto3" json:"buildUid,omitempty"`
	PropId        uint32        `protobuf:"varint,4,opt,name=propId,proto3" json:"propId,omitempty"`
}

func (x *C2SBuildingOpera) Reset() {
	*x = C2SBuildingOpera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SBuildingOpera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SBuildingOpera) ProtoMessage() {}

func (x *C2SBuildingOpera) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SBuildingOpera.ProtoReflect.Descriptor instead.
func (*C2SBuildingOpera) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{8}
}

func (x *C2SBuildingOpera) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SBuildingOpera) GetBuildingOpera() BuildingOpera {
	if x != nil {
		return x.BuildingOpera
	}
	return BuildingOpera_BO_Invalid
}

func (x *C2SBuildingOpera) GetBuildUid() string {
	if x != nil {
		return x.BuildUid
	}
	return ""
}

func (x *C2SBuildingOpera) GetPropId() uint32 {
	if x != nil {
		return x.PropId
	}
	return 0
}

type S2CBuildingOpera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode        STATUS        `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	BuildingOpera  BuildingOpera `protobuf:"varint,2,opt,name=buildingOpera,proto3,enum=msg.BuildingOpera" json:"buildingOpera,omitempty"`
	BuildModel     *Model        `protobuf:"bytes,3,opt,name=buildModel,proto3" json:"buildModel,omitempty"`
	BuildUid       string        `protobuf:"bytes,4,opt,name=buildUid,proto3" json:"buildUid,omitempty"`
	BuildStartTime uint32        `protobuf:"varint,5,opt,name=buildStartTime,proto3" json:"buildStartTime,omitempty"` //! 开始建造时间
}

func (x *S2CBuildingOpera) Reset() {
	*x = S2CBuildingOpera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CBuildingOpera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CBuildingOpera) ProtoMessage() {}

func (x *S2CBuildingOpera) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CBuildingOpera.ProtoReflect.Descriptor instead.
func (*S2CBuildingOpera) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{9}
}

func (x *S2CBuildingOpera) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CBuildingOpera) GetBuildingOpera() BuildingOpera {
	if x != nil {
		return x.BuildingOpera
	}
	return BuildingOpera_BO_Invalid
}

func (x *S2CBuildingOpera) GetBuildModel() *Model {
	if x != nil {
		return x.BuildModel
	}
	return nil
}

func (x *S2CBuildingOpera) GetBuildUid() string {
	if x != nil {
		return x.BuildUid
	}
	return ""
}

func (x *S2CBuildingOpera) GetBuildStartTime() uint32 {
	if x != nil {
		return x.BuildStartTime
	}
	return 0
}

type C2SPlantOpera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId             uint32 `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	PlantUid         string `protobuf:"bytes,2,opt,name=plantUid,proto3" json:"plantUid,omitempty"`                  //! 植物的唯一id, 创建的时候传值为空
	BuildUid         string `protobuf:"bytes,3,opt,name=buildUid,proto3" json:"buildUid,omitempty"`                  //! 植物依赖的建筑的唯一id, 创建的时候需要传值
	GlobalItemId     uint32 `protobuf:"varint,4,opt,name=globalItemId,proto3" json:"globalItemId,omitempty"`         //！植物的全局id
	PropGlobalItemId uint32 `protobuf:"varint,5,opt,name=propGlobalItemId,proto3" json:"propGlobalItemId,omitempty"` //！道具 id, 注意 种植、浇水等也需要配置id
	BranchId         uint32 `protobuf:"varint,6,opt,name=branchId,proto3" json:"branchId,omitempty"`                 //！道具 id, 注意 种植、浇水等也需要配置id
	AccelerateId     uint32 `protobuf:"varint,7,opt,name=accelerateId,proto3" json:"accelerateId,omitempty"`         //! 加速道具id
}

func (x *C2SPlantOpera) Reset() {
	*x = C2SPlantOpera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPlantOpera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPlantOpera) ProtoMessage() {}

func (x *C2SPlantOpera) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPlantOpera.ProtoReflect.Descriptor instead.
func (*C2SPlantOpera) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{10}
}

func (x *C2SPlantOpera) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SPlantOpera) GetPlantUid() string {
	if x != nil {
		return x.PlantUid
	}
	return ""
}

func (x *C2SPlantOpera) GetBuildUid() string {
	if x != nil {
		return x.BuildUid
	}
	return ""
}

func (x *C2SPlantOpera) GetGlobalItemId() uint32 {
	if x != nil {
		return x.GlobalItemId
	}
	return 0
}

func (x *C2SPlantOpera) GetPropGlobalItemId() uint32 {
	if x != nil {
		return x.PropGlobalItemId
	}
	return 0
}

func (x *C2SPlantOpera) GetBranchId() uint32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

func (x *C2SPlantOpera) GetAccelerateId() uint32 {
	if x != nil {
		return x.AccelerateId
	}
	return 0
}

type S2CPlantOpera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode          STATUS     `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	PlantInfo        *PlantInfo `protobuf:"bytes,2,opt,name=plantInfo,proto3" json:"plantInfo,omitempty"`
	PropGlobalItemId uint32     `protobuf:"varint,3,opt,name=propGlobalItemId,proto3" json:"propGlobalItemId,omitempty"` //！道具 id, 注意 种植、浇水等也需要配置id
}

func (x *S2CPlantOpera) Reset() {
	*x = S2CPlantOpera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPlantOpera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPlantOpera) ProtoMessage() {}

func (x *S2CPlantOpera) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPlantOpera.ProtoReflect.Descriptor instead.
func (*S2CPlantOpera) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{11}
}

func (x *S2CPlantOpera) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CPlantOpera) GetPlantInfo() *PlantInfo {
	if x != nil {
		return x.PlantInfo
	}
	return nil
}

func (x *S2CPlantOpera) GetPropGlobalItemId() uint32 {
	if x != nil {
		return x.PropGlobalItemId
	}
	return 0
}

type C2SOrderOpera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId       uint32        `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	BuildUid   string        `protobuf:"bytes,2,opt,name=buildUid,proto3" json:"buildUid,omitempty"`
	OperaCmd   OrderOperaCmd `protobuf:"varint,3,opt,name=operaCmd,proto3,enum=msg.OrderOperaCmd" json:"operaCmd,omitempty"`
	OrderIndex uint32        `protobuf:"varint,4,opt,name=orderIndex,proto3" json:"orderIndex,omitempty"`
}

func (x *C2SOrderOpera) Reset() {
	*x = C2SOrderOpera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SOrderOpera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SOrderOpera) ProtoMessage() {}

func (x *C2SOrderOpera) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SOrderOpera.ProtoReflect.Descriptor instead.
func (*C2SOrderOpera) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{12}
}

func (x *C2SOrderOpera) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SOrderOpera) GetBuildUid() string {
	if x != nil {
		return x.BuildUid
	}
	return ""
}

func (x *C2SOrderOpera) GetOperaCmd() OrderOperaCmd {
	if x != nil {
		return x.OperaCmd
	}
	return OrderOperaCmd_OrderOperaCmdInvalid
}

func (x *C2SOrderOpera) GetOrderIndex() uint32 {
	if x != nil {
		return x.OrderIndex
	}
	return 0
}

type S2COrderOpera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode   STATUS        `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	OperaCmd  OrderOperaCmd `protobuf:"varint,2,opt,name=operaCmd,proto3,enum=msg.OrderOperaCmd" json:"operaCmd,omitempty"`
	OrderInfo *OrderInfo    `protobuf:"bytes,3,opt,name=orderInfo,proto3" json:"orderInfo,omitempty"`
}

func (x *S2COrderOpera) Reset() {
	*x = S2COrderOpera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2COrderOpera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2COrderOpera) ProtoMessage() {}

func (x *S2COrderOpera) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2COrderOpera.ProtoReflect.Descriptor instead.
func (*S2COrderOpera) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{13}
}

func (x *S2COrderOpera) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2COrderOpera) GetOperaCmd() OrderOperaCmd {
	if x != nil {
		return x.OperaCmd
	}
	return OrderOperaCmd_OrderOperaCmdInvalid
}

func (x *S2COrderOpera) GetOrderInfo() *OrderInfo {
	if x != nil {
		return x.OrderInfo
	}
	return nil
}

type WarehouseGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WarehouseGetReq) Reset() {
	*x = WarehouseGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WarehouseGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarehouseGetReq) ProtoMessage() {}

func (x *WarehouseGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarehouseGetReq.ProtoReflect.Descriptor instead.
func (*WarehouseGetReq) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{14}
}

type WarehouseExpandReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpandCmd WarehouseExpandCmd `protobuf:"varint,1,opt,name=expandCmd,proto3,enum=msg.WarehouseExpandCmd" json:"expandCmd,omitempty"`
}

func (x *WarehouseExpandReq) Reset() {
	*x = WarehouseExpandReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WarehouseExpandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarehouseExpandReq) ProtoMessage() {}

func (x *WarehouseExpandReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarehouseExpandReq.ProtoReflect.Descriptor instead.
func (*WarehouseExpandReq) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{15}
}

func (x *WarehouseExpandReq) GetExpandCmd() WarehouseExpandCmd {
	if x != nil {
		return x.ExpandCmd
	}
	return WarehouseExpandCmd_EWEC_Invalid
}

type WarehouseSellReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId uint32 `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	Num    uint32 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *WarehouseSellReq) Reset() {
	*x = WarehouseSellReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WarehouseSellReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarehouseSellReq) ProtoMessage() {}

func (x *WarehouseSellReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarehouseSellReq.ProtoReflect.Descriptor instead.
func (*WarehouseSellReq) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{16}
}

func (x *WarehouseSellReq) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *WarehouseSellReq) GetNum() uint32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type C2SWarehouse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId uint32 `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	// Types that are assignable to Opera:
	//
	//	*C2SWarehouse_GetReq
	//	*C2SWarehouse_ExpandReq
	//	*C2SWarehouse_SellReq
	Opera isC2SWarehouse_Opera `protobuf_oneof:"Opera"`
}

func (x *C2SWarehouse) Reset() {
	*x = C2SWarehouse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SWarehouse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SWarehouse) ProtoMessage() {}

func (x *C2SWarehouse) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SWarehouse.ProtoReflect.Descriptor instead.
func (*C2SWarehouse) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{17}
}

func (x *C2SWarehouse) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (m *C2SWarehouse) GetOpera() isC2SWarehouse_Opera {
	if m != nil {
		return m.Opera
	}
	return nil
}

func (x *C2SWarehouse) GetGetReq() *WarehouseGetReq {
	if x, ok := x.GetOpera().(*C2SWarehouse_GetReq); ok {
		return x.GetReq
	}
	return nil
}

func (x *C2SWarehouse) GetExpandReq() *WarehouseExpandReq {
	if x, ok := x.GetOpera().(*C2SWarehouse_ExpandReq); ok {
		return x.ExpandReq
	}
	return nil
}

func (x *C2SWarehouse) GetSellReq() *WarehouseSellReq {
	if x, ok := x.GetOpera().(*C2SWarehouse_SellReq); ok {
		return x.SellReq
	}
	return nil
}

type isC2SWarehouse_Opera interface {
	isC2SWarehouse_Opera()
}

type C2SWarehouse_GetReq struct {
	GetReq *WarehouseGetReq `protobuf:"bytes,2,opt,name=getReq,proto3,oneof"`
}

type C2SWarehouse_ExpandReq struct {
	ExpandReq *WarehouseExpandReq `protobuf:"bytes,3,opt,name=expandReq,proto3,oneof"`
}

type C2SWarehouse_SellReq struct {
	SellReq *WarehouseSellReq `protobuf:"bytes,4,opt,name=sellReq,proto3,oneof"`
}

func (*C2SWarehouse_GetReq) isC2SWarehouse_Opera() {}

func (*C2SWarehouse_ExpandReq) isC2SWarehouse_Opera() {}

func (*C2SWarehouse_SellReq) isC2SWarehouse_Opera() {}

type WarehouseGetRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WareHouse *WareHouse `protobuf:"bytes,1,opt,name=WareHouse,proto3" json:"WareHouse,omitempty"`
	Capacity  uint32     `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"`
}

func (x *WarehouseGetRsp) Reset() {
	*x = WarehouseGetRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WarehouseGetRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarehouseGetRsp) ProtoMessage() {}

func (x *WarehouseGetRsp) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarehouseGetRsp.ProtoReflect.Descriptor instead.
func (*WarehouseGetRsp) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{18}
}

func (x *WarehouseGetRsp) GetWareHouse() *WareHouse {
	if x != nil {
		return x.WareHouse
	}
	return nil
}

func (x *WarehouseGetRsp) GetCapacity() uint32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

type WarehouseExpandRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WareHouse *WareHouse `protobuf:"bytes,1,opt,name=WareHouse,proto3" json:"WareHouse,omitempty"`
	Capacity  uint32     `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"`
}

func (x *WarehouseExpandRsp) Reset() {
	*x = WarehouseExpandRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WarehouseExpandRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarehouseExpandRsp) ProtoMessage() {}

func (x *WarehouseExpandRsp) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarehouseExpandRsp.ProtoReflect.Descriptor instead.
func (*WarehouseExpandRsp) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{19}
}

func (x *WarehouseExpandRsp) GetWareHouse() *WareHouse {
	if x != nil {
		return x.WareHouse
	}
	return nil
}

func (x *WarehouseExpandRsp) GetCapacity() uint32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

type WarehouseSellRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WarehouseSellRsp) Reset() {
	*x = WarehouseSellRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WarehouseSellRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarehouseSellRsp) ProtoMessage() {}

func (x *WarehouseSellRsp) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarehouseSellRsp.ProtoReflect.Descriptor instead.
func (*WarehouseSellRsp) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{20}
}

type S2CWarehouse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode STATUS `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	UiId    uint32 `protobuf:"varint,2,opt,name=uiId,proto3" json:"uiId,omitempty"`
	// Types that are assignable to Opera:
	//
	//	*S2CWarehouse_GetRsp
	//	*S2CWarehouse_ExpandRsp
	//	*S2CWarehouse_SellRsp
	Opera isS2CWarehouse_Opera `protobuf_oneof:"Opera"`
}

func (x *S2CWarehouse) Reset() {
	*x = S2CWarehouse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CWarehouse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CWarehouse) ProtoMessage() {}

func (x *S2CWarehouse) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CWarehouse.ProtoReflect.Descriptor instead.
func (*S2CWarehouse) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{21}
}

func (x *S2CWarehouse) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CWarehouse) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (m *S2CWarehouse) GetOpera() isS2CWarehouse_Opera {
	if m != nil {
		return m.Opera
	}
	return nil
}

func (x *S2CWarehouse) GetGetRsp() *WarehouseGetRsp {
	if x, ok := x.GetOpera().(*S2CWarehouse_GetRsp); ok {
		return x.GetRsp
	}
	return nil
}

func (x *S2CWarehouse) GetExpandRsp() *WarehouseExpandRsp {
	if x, ok := x.GetOpera().(*S2CWarehouse_ExpandRsp); ok {
		return x.ExpandRsp
	}
	return nil
}

func (x *S2CWarehouse) GetSellRsp() *WarehouseSellRsp {
	if x, ok := x.GetOpera().(*S2CWarehouse_SellRsp); ok {
		return x.SellRsp
	}
	return nil
}

type isS2CWarehouse_Opera interface {
	isS2CWarehouse_Opera()
}

type S2CWarehouse_GetRsp struct {
	GetRsp *WarehouseGetRsp `protobuf:"bytes,3,opt,name=getRsp,proto3,oneof"`
}

type S2CWarehouse_ExpandRsp struct {
	ExpandRsp *WarehouseExpandRsp `protobuf:"bytes,4,opt,name=expandRsp,proto3,oneof"`
}

type S2CWarehouse_SellRsp struct {
	SellRsp *WarehouseSellRsp `protobuf:"bytes,5,opt,name=sellRsp,proto3,oneof"`
}

func (*S2CWarehouse_GetRsp) isS2CWarehouse_Opera() {}

func (*S2CWarehouse_ExpandRsp) isS2CWarehouse_Opera() {}

func (*S2CWarehouse_SellRsp) isS2CWarehouse_Opera() {}

type C2SItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemChange ItemChange `protobuf:"varint,1,opt,name=itemChange,proto3,enum=msg.ItemChange" json:"itemChange,omitempty"`
}

func (x *C2SItemInfo) Reset() {
	*x = C2SItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SItemInfo) ProtoMessage() {}

func (x *C2SItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SItemInfo.ProtoReflect.Descriptor instead.
func (*C2SItemInfo) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{22}
}

func (x *C2SItemInfo) GetItemChange() ItemChange {
	if x != nil {
		return x.ItemChange
	}
	return ItemChange_ItemAll
}

type ItemChangeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemChange ItemChange  `protobuf:"varint,1,opt,name=ItemChange,proto3,enum=msg.ItemChange" json:"ItemChange,omitempty"`
	ItemList   []*ItemInfo `protobuf:"bytes,2,rep,name=itemList,proto3" json:"itemList,omitempty"`
}

func (x *ItemChangeInfo) Reset() {
	*x = ItemChangeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemChangeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemChangeInfo) ProtoMessage() {}

func (x *ItemChangeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemChangeInfo.ProtoReflect.Descriptor instead.
func (*ItemChangeInfo) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{23}
}

func (x *ItemChangeInfo) GetItemChange() ItemChange {
	if x != nil {
		return x.ItemChange
	}
	return ItemChange_ItemAll
}

func (x *ItemChangeInfo) GetItemList() []*ItemInfo {
	if x != nil {
		return x.ItemList
	}
	return nil
}

type S2CItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode        STATUS            `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	ItemChangeInfo []*ItemChangeInfo `protobuf:"bytes,2,rep,name=itemChangeInfo,proto3" json:"itemChangeInfo,omitempty"`
	UiId           uint32            `protobuf:"varint,3,opt,name=uiId,proto3" json:"uiId,omitempty"`
}

func (x *S2CItemInfo) Reset() {
	*x = S2CItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CItemInfo) ProtoMessage() {}

func (x *S2CItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CItemInfo.ProtoReflect.Descriptor instead.
func (*S2CItemInfo) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{24}
}

func (x *S2CItemInfo) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CItemInfo) GetItemChangeInfo() []*ItemChangeInfo {
	if x != nil {
		return x.ItemChangeInfo
	}
	return nil
}

func (x *S2CItemInfo) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

type C2SProductOpera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId     uint32          `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	OperaCmd ProductOperaCmd `protobuf:"varint,2,opt,name=operaCmd,proto3,enum=msg.ProductOperaCmd" json:"operaCmd,omitempty"`
	BuildUid string          `protobuf:"bytes,3,opt,name=buildUid,proto3" json:"buildUid,omitempty"`
	// Types that are assignable to Opera:
	//
	//	*C2SProductOpera_GlobalItemId
	//	*C2SProductOpera_ProductIndex
	//	*C2SProductOpera_AddFieldId
	//	*C2SProductOpera_PropId
	Opera isC2SProductOpera_Opera `protobuf_oneof:"Opera"`
}

func (x *C2SProductOpera) Reset() {
	*x = C2SProductOpera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SProductOpera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SProductOpera) ProtoMessage() {}

func (x *C2SProductOpera) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SProductOpera.ProtoReflect.Descriptor instead.
func (*C2SProductOpera) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{25}
}

func (x *C2SProductOpera) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SProductOpera) GetOperaCmd() ProductOperaCmd {
	if x != nil {
		return x.OperaCmd
	}
	return ProductOperaCmd_ProductOperaCmdInvalid
}

func (x *C2SProductOpera) GetBuildUid() string {
	if x != nil {
		return x.BuildUid
	}
	return ""
}

func (m *C2SProductOpera) GetOpera() isC2SProductOpera_Opera {
	if m != nil {
		return m.Opera
	}
	return nil
}

func (x *C2SProductOpera) GetGlobalItemId() uint32 {
	if x, ok := x.GetOpera().(*C2SProductOpera_GlobalItemId); ok {
		return x.GlobalItemId
	}
	return 0
}

func (x *C2SProductOpera) GetProductIndex() uint32 {
	if x, ok := x.GetOpera().(*C2SProductOpera_ProductIndex); ok {
		return x.ProductIndex
	}
	return 0
}

func (x *C2SProductOpera) GetAddFieldId() uint32 {
	if x, ok := x.GetOpera().(*C2SProductOpera_AddFieldId); ok {
		return x.AddFieldId
	}
	return 0
}

func (x *C2SProductOpera) GetPropId() uint32 {
	if x, ok := x.GetOpera().(*C2SProductOpera_PropId); ok {
		return x.PropId
	}
	return 0
}

type isC2SProductOpera_Opera interface {
	isC2SProductOpera_Opera()
}

type C2SProductOpera_GlobalItemId struct {
	GlobalItemId uint32 `protobuf:"varint,4,opt,name=globalItemId,proto3,oneof"` //! 生产时需要的生产id
}

type C2SProductOpera_ProductIndex struct {
	ProductIndex uint32 `protobuf:"varint,5,opt,name=productIndex,proto3,oneof"` //! 领取生产物品的时候需要带上
}

type C2SProductOpera_AddFieldId struct {
	AddFieldId uint32 `protobuf:"varint,6,opt,name=addFieldId,proto3,oneof"` //解锁格子(对应配置里的id)
}

type C2SProductOpera_PropId struct {
	PropId uint32 `protobuf:"varint,7,opt,name=propId,proto3,oneof"` //对应配置中的id
}

func (*C2SProductOpera_GlobalItemId) isC2SProductOpera_Opera() {}

func (*C2SProductOpera_ProductIndex) isC2SProductOpera_Opera() {}

func (*C2SProductOpera_AddFieldId) isC2SProductOpera_Opera() {}

func (*C2SProductOpera_PropId) isC2SProductOpera_Opera() {}

type S2CProductOpera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode     STATUS          `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	OperaCmd    ProductOperaCmd `protobuf:"varint,2,opt,name=operaCmd,proto3,enum=msg.ProductOperaCmd" json:"operaCmd,omitempty"`
	ProductInfo *ProductInfo    `protobuf:"bytes,3,opt,name=productInfo,proto3" json:"productInfo,omitempty"` //! 全量的，如果领取中间的，中间这个被删除后，后面的会往前
	ScienceInfo *ScienceInfo    `protobuf:"bytes,4,opt,name=scienceInfo,proto3" json:"scienceInfo,omitempty"` //科技树信息
}

func (x *S2CProductOpera) Reset() {
	*x = S2CProductOpera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CProductOpera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CProductOpera) ProtoMessage() {}

func (x *S2CProductOpera) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CProductOpera.ProtoReflect.Descriptor instead.
func (*S2CProductOpera) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{26}
}

func (x *S2CProductOpera) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CProductOpera) GetOperaCmd() ProductOperaCmd {
	if x != nil {
		return x.OperaCmd
	}
	return ProductOperaCmd_ProductOperaCmdInvalid
}

func (x *S2CProductOpera) GetProductInfo() *ProductInfo {
	if x != nil {
		return x.ProductInfo
	}
	return nil
}

func (x *S2CProductOpera) GetScienceInfo() *ScienceInfo {
	if x != nil {
		return x.ScienceInfo
	}
	return nil
}

type UserBaseChangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NickName string `protobuf:"bytes,1,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Sex      uint32 `protobuf:"varint,2,opt,name=sex,proto3" json:"sex,omitempty"`
}

func (x *UserBaseChangeReq) Reset() {
	*x = UserBaseChangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBaseChangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBaseChangeReq) ProtoMessage() {}

func (x *UserBaseChangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBaseChangeReq.ProtoReflect.Descriptor instead.
func (*UserBaseChangeReq) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{27}
}

func (x *UserBaseChangeReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserBaseChangeReq) GetSex() uint32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

type C2SUserBaseOpera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId uint32 `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	// Types that are assignable to Opera:
	//
	//	*C2SUserBaseOpera_ChangeReq
	//	*C2SUserBaseOpera_HeadFrame
	Opera isC2SUserBaseOpera_Opera `protobuf_oneof:"Opera"`
}

func (x *C2SUserBaseOpera) Reset() {
	*x = C2SUserBaseOpera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SUserBaseOpera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SUserBaseOpera) ProtoMessage() {}

func (x *C2SUserBaseOpera) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SUserBaseOpera.ProtoReflect.Descriptor instead.
func (*C2SUserBaseOpera) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{28}
}

func (x *C2SUserBaseOpera) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (m *C2SUserBaseOpera) GetOpera() isC2SUserBaseOpera_Opera {
	if m != nil {
		return m.Opera
	}
	return nil
}

func (x *C2SUserBaseOpera) GetChangeReq() *UserBaseChangeReq {
	if x, ok := x.GetOpera().(*C2SUserBaseOpera_ChangeReq); ok {
		return x.ChangeReq
	}
	return nil
}

func (x *C2SUserBaseOpera) GetHeadFrame() int32 {
	if x, ok := x.GetOpera().(*C2SUserBaseOpera_HeadFrame); ok {
		return x.HeadFrame
	}
	return 0
}

type isC2SUserBaseOpera_Opera interface {
	isC2SUserBaseOpera_Opera()
}

type C2SUserBaseOpera_ChangeReq struct {
	ChangeReq *UserBaseChangeReq `protobuf:"bytes,2,opt,name=changeReq,proto3,oneof"`
}

type C2SUserBaseOpera_HeadFrame struct {
	HeadFrame int32 `protobuf:"varint,3,opt,name=headFrame,proto3,oneof"`
}

func (*C2SUserBaseOpera_ChangeReq) isC2SUserBaseOpera_Opera() {}

func (*C2SUserBaseOpera_HeadFrame) isC2SUserBaseOpera_Opera() {}

type UserBaseChangeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NickName       string `protobuf:"bytes,1,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Sex            uint32 `protobuf:"varint,2,opt,name=sex,proto3" json:"sex,omitempty"`
	LastChangeTime uint32 `protobuf:"varint,3,opt,name=lastChangeTime,proto3" json:"lastChangeTime,omitempty"`
}

func (x *UserBaseChangeRsp) Reset() {
	*x = UserBaseChangeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBaseChangeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBaseChangeRsp) ProtoMessage() {}

func (x *UserBaseChangeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBaseChangeRsp.ProtoReflect.Descriptor instead.
func (*UserBaseChangeRsp) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{29}
}

func (x *UserBaseChangeRsp) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserBaseChangeRsp) GetSex() uint32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *UserBaseChangeRsp) GetLastChangeTime() uint32 {
	if x != nil {
		return x.LastChangeTime
	}
	return 0
}

type S2CUserBaseOpera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode STATUS `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	UiId    uint32 `protobuf:"varint,2,opt,name=uiId,proto3" json:"uiId,omitempty"`
	// Types that are assignable to Opera:
	//
	//	*S2CUserBaseOpera_ChangeRsp
	//	*S2CUserBaseOpera_HeadFrame
	Opera isS2CUserBaseOpera_Opera `protobuf_oneof:"Opera"`
}

func (x *S2CUserBaseOpera) Reset() {
	*x = S2CUserBaseOpera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CUserBaseOpera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CUserBaseOpera) ProtoMessage() {}

func (x *S2CUserBaseOpera) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CUserBaseOpera.ProtoReflect.Descriptor instead.
func (*S2CUserBaseOpera) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{30}
}

func (x *S2CUserBaseOpera) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CUserBaseOpera) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (m *S2CUserBaseOpera) GetOpera() isS2CUserBaseOpera_Opera {
	if m != nil {
		return m.Opera
	}
	return nil
}

func (x *S2CUserBaseOpera) GetChangeRsp() *UserBaseChangeRsp {
	if x, ok := x.GetOpera().(*S2CUserBaseOpera_ChangeRsp); ok {
		return x.ChangeRsp
	}
	return nil
}

func (x *S2CUserBaseOpera) GetHeadFrame() int32 {
	if x, ok := x.GetOpera().(*S2CUserBaseOpera_HeadFrame); ok {
		return x.HeadFrame
	}
	return 0
}

type isS2CUserBaseOpera_Opera interface {
	isS2CUserBaseOpera_Opera()
}

type S2CUserBaseOpera_ChangeRsp struct {
	ChangeRsp *UserBaseChangeRsp `protobuf:"bytes,3,opt,name=changeRsp,proto3,oneof"`
}

type S2CUserBaseOpera_HeadFrame struct {
	HeadFrame int32 `protobuf:"varint,4,opt,name=headFrame,proto3,oneof"`
}

func (*S2CUserBaseOpera_ChangeRsp) isS2CUserBaseOpera_Opera() {}

func (*S2CUserBaseOpera_HeadFrame) isS2CUserBaseOpera_Opera() {}

type C2SShopOpera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId         uint32       `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	ShopType     EShopType    `protobuf:"varint,2,opt,name=shopType,proto3,enum=model.EShopType" json:"shopType,omitempty"`
	ShopOperaCmd ShopOperaCmd `protobuf:"varint,3,opt,name=shopOperaCmd,proto3,enum=msg.ShopOperaCmd" json:"shopOperaCmd,omitempty"`
	GlobalItemId uint32       `protobuf:"varint,4,opt,name=globalItemId,proto3" json:"globalItemId,omitempty"`
	Cnt          uint32       `protobuf:"varint,5,opt,name=cnt,proto3" json:"cnt,omitempty"`
}

func (x *C2SShopOpera) Reset() {
	*x = C2SShopOpera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SShopOpera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SShopOpera) ProtoMessage() {}

func (x *C2SShopOpera) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SShopOpera.ProtoReflect.Descriptor instead.
func (*C2SShopOpera) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{31}
}

func (x *C2SShopOpera) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SShopOpera) GetShopType() EShopType {
	if x != nil {
		return x.ShopType
	}
	return EShopType_EST_Invalid
}

func (x *C2SShopOpera) GetShopOperaCmd() ShopOperaCmd {
	if x != nil {
		return x.ShopOperaCmd
	}
	return ShopOperaCmd_SO_Get
}

func (x *C2SShopOpera) GetGlobalItemId() uint32 {
	if x != nil {
		return x.GlobalItemId
	}
	return 0
}

func (x *C2SShopOpera) GetCnt() uint32 {
	if x != nil {
		return x.Cnt
	}
	return 0
}

type S2CShopOpera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode      STATUS      `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	UiId         uint32      `protobuf:"varint,2,opt,name=uiId,proto3" json:"uiId,omitempty"`
	ShopItemList []*ShopItem `protobuf:"bytes,3,rep,name=shopItemList,proto3" json:"shopItemList,omitempty"`
}

func (x *S2CShopOpera) Reset() {
	*x = S2CShopOpera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CShopOpera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CShopOpera) ProtoMessage() {}

func (x *S2CShopOpera) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CShopOpera.ProtoReflect.Descriptor instead.
func (*S2CShopOpera) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{32}
}

func (x *S2CShopOpera) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CShopOpera) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2CShopOpera) GetShopItemList() []*ShopItem {
	if x != nil {
		return x.ShopItemList
	}
	return nil
}

type C2STask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId         uint32       `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	TaskOperaCmd TaskOperaCmd `protobuf:"varint,2,opt,name=taskOperaCmd,proto3,enum=msg.TaskOperaCmd" json:"taskOperaCmd,omitempty"`
	TaskList     []uint32     `protobuf:"varint,3,rep,packed,name=taskList,proto3" json:"taskList,omitempty"`
}

func (x *C2STask) Reset() {
	*x = C2STask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2STask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2STask) ProtoMessage() {}

func (x *C2STask) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2STask.ProtoReflect.Descriptor instead.
func (*C2STask) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{33}
}

func (x *C2STask) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2STask) GetTaskOperaCmd() TaskOperaCmd {
	if x != nil {
		return x.TaskOperaCmd
	}
	return TaskOperaCmd_TOC_Get
}

func (x *C2STask) GetTaskList() []uint32 {
	if x != nil {
		return x.TaskList
	}
	return nil
}

type S2CTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode      STATUS       `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	UiId         uint32       `protobuf:"varint,2,opt,name=uiId,proto3" json:"uiId,omitempty"`
	TaskOperaCmd TaskOperaCmd `protobuf:"varint,3,opt,name=taskOperaCmd,proto3,enum=msg.TaskOperaCmd" json:"taskOperaCmd,omitempty"`
	TaskItemList []*Task      `protobuf:"bytes,4,rep,name=taskItemList,proto3" json:"taskItemList,omitempty"`
}

func (x *S2CTask) Reset() {
	*x = S2CTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CTask) ProtoMessage() {}

func (x *S2CTask) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CTask.ProtoReflect.Descriptor instead.
func (*S2CTask) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{34}
}

func (x *S2CTask) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CTask) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2CTask) GetTaskOperaCmd() TaskOperaCmd {
	if x != nil {
		return x.TaskOperaCmd
	}
	return TaskOperaCmd_TOC_Get
}

func (x *S2CTask) GetTaskItemList() []*Task {
	if x != nil {
		return x.TaskItemList
	}
	return nil
}

type C2SWorldOpera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId       uint32      `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	RemoveList []*Building `protobuf:"bytes,2,rep,name=removeList,proto3" json:"removeList,omitempty"` //! 批量移除装饰建筑
	AddList    []*Building `protobuf:"bytes,3,rep,name=addList,proto3" json:"addList,omitempty"`       //! 批量增加装饰建筑
	ModList    []*Building `protobuf:"bytes,4,rep,name=modList,proto3" json:"modList,omitempty"`       //! 批量修改建筑的位置或坐标
}

func (x *C2SWorldOpera) Reset() {
	*x = C2SWorldOpera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SWorldOpera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SWorldOpera) ProtoMessage() {}

func (x *C2SWorldOpera) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SWorldOpera.ProtoReflect.Descriptor instead.
func (*C2SWorldOpera) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{35}
}

func (x *C2SWorldOpera) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SWorldOpera) GetRemoveList() []*Building {
	if x != nil {
		return x.RemoveList
	}
	return nil
}

func (x *C2SWorldOpera) GetAddList() []*Building {
	if x != nil {
		return x.AddList
	}
	return nil
}

func (x *C2SWorldOpera) GetModList() []*Building {
	if x != nil {
		return x.ModList
	}
	return nil
}

type S2CWorldOpera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode    STATUS      `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	UiId       uint32      `protobuf:"varint,2,opt,name=uiId,proto3" json:"uiId,omitempty"`
	RemoveList []*Building `protobuf:"bytes,3,rep,name=removeList,proto3" json:"removeList,omitempty"` //! 批量移除装饰建筑
	AddList    []*Building `protobuf:"bytes,4,rep,name=addList,proto3" json:"addList,omitempty"`       //! 批量增加装饰建筑
	ModList    []*Building `protobuf:"bytes,5,rep,name=modList,proto3" json:"modList,omitempty"`       //! 批量修改建筑的位置或坐标
}

func (x *S2CWorldOpera) Reset() {
	*x = S2CWorldOpera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CWorldOpera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CWorldOpera) ProtoMessage() {}

func (x *S2CWorldOpera) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CWorldOpera.ProtoReflect.Descriptor instead.
func (*S2CWorldOpera) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{36}
}

func (x *S2CWorldOpera) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CWorldOpera) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2CWorldOpera) GetRemoveList() []*Building {
	if x != nil {
		return x.RemoveList
	}
	return nil
}

func (x *S2CWorldOpera) GetAddList() []*Building {
	if x != nil {
		return x.AddList
	}
	return nil
}

func (x *S2CWorldOpera) GetModList() []*Building {
	if x != nil {
		return x.ModList
	}
	return nil
}

type Material struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         EMaterialType `protobuf:"varint,1,opt,name=type,proto3,enum=msg.EMaterialType" json:"type,omitempty"`
	GlobalItemID uint32        `protobuf:"varint,2,opt,name=globalItemID,proto3" json:"globalItemID,omitempty"`
	CostLv       uint32        `protobuf:"varint,3,opt,name=costLv,proto3" json:"costLv,omitempty"`
}

func (x *Material) Reset() {
	*x = Material{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Material) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Material) ProtoMessage() {}

func (x *Material) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Material.ProtoReflect.Descriptor instead.
func (*Material) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{37}
}

func (x *Material) GetType() EMaterialType {
	if x != nil {
		return x.Type
	}
	return EMaterialType_EMT_Invalid
}

func (x *Material) GetGlobalItemID() uint32 {
	if x != nil {
		return x.GlobalItemID
	}
	return 0
}

func (x *Material) GetCostLv() uint32 {
	if x != nil {
		return x.CostLv
	}
	return 0
}

type C2SFormula struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId     uint32      `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	Material []*Material `protobuf:"bytes,2,rep,name=material,proto3" json:"material,omitempty"`
}

func (x *C2SFormula) Reset() {
	*x = C2SFormula{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SFormula) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SFormula) ProtoMessage() {}

func (x *C2SFormula) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SFormula.ProtoReflect.Descriptor instead.
func (*C2SFormula) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{38}
}

func (x *C2SFormula) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SFormula) GetMaterial() []*Material {
	if x != nil {
		return x.Material
	}
	return nil
}

type S2CFormula struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode STATUS `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	UiId    uint32 `protobuf:"varint,2,opt,name=uiId,proto3" json:"uiId,omitempty"`
}

func (x *S2CFormula) Reset() {
	*x = S2CFormula{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CFormula) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CFormula) ProtoMessage() {}

func (x *S2CFormula) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CFormula.ProtoReflect.Descriptor instead.
func (*S2CFormula) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{39}
}

func (x *S2CFormula) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CFormula) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

type C2SDelivery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId           uint32         `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	BuildUid       string         `protobuf:"bytes,2,opt,name=buildUid,proto3" json:"buildUid,omitempty"`
	Opera          EDeliveryOpera `protobuf:"varint,3,opt,name=opera,proto3,enum=msg.EDeliveryOpera" json:"opera,omitempty"`
	CargoIndex     uint32         `protobuf:"varint,4,opt,name=cargoIndex,proto3" json:"cargoIndex,omitempty"`         //! 货车索引
	LoadIndex      uint32         `protobuf:"varint,5,opt,name=loadIndex,proto3" json:"loadIndex,omitempty"`           //! 装货索引999代表是一键装填 现在需求是要不装完，要不只有装一个
	FinRewardIndex uint32         `protobuf:"varint,6,opt,name=finRewardIndex,proto3" json:"finRewardIndex,omitempty"` //! 领取返程后的奖励索引  当索引为999代表是一键领取
}

func (x *C2SDelivery) Reset() {
	*x = C2SDelivery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SDelivery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SDelivery) ProtoMessage() {}

func (x *C2SDelivery) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SDelivery.ProtoReflect.Descriptor instead.
func (*C2SDelivery) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{40}
}

func (x *C2SDelivery) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SDelivery) GetBuildUid() string {
	if x != nil {
		return x.BuildUid
	}
	return ""
}

func (x *C2SDelivery) GetOpera() EDeliveryOpera {
	if x != nil {
		return x.Opera
	}
	return EDeliveryOpera_EDO_Get
}

func (x *C2SDelivery) GetCargoIndex() uint32 {
	if x != nil {
		return x.CargoIndex
	}
	return 0
}

func (x *C2SDelivery) GetLoadIndex() uint32 {
	if x != nil {
		return x.LoadIndex
	}
	return 0
}

func (x *C2SDelivery) GetFinRewardIndex() uint32 {
	if x != nil {
		return x.FinRewardIndex
	}
	return 0
}

type S2CDelivery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode   STATUS         `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	UiId      uint32         `protobuf:"varint,2,opt,name=uiId,proto3" json:"uiId,omitempty"`
	Opera     EDeliveryOpera `protobuf:"varint,3,opt,name=opera,proto3,enum=msg.EDeliveryOpera" json:"opera,omitempty"`
	CargoList []*Cargo       `protobuf:"bytes,4,rep,name=cargoList,proto3" json:"cargoList,omitempty"`
}

func (x *S2CDelivery) Reset() {
	*x = S2CDelivery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CDelivery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CDelivery) ProtoMessage() {}

func (x *S2CDelivery) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CDelivery.ProtoReflect.Descriptor instead.
func (*S2CDelivery) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{41}
}

func (x *S2CDelivery) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CDelivery) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2CDelivery) GetOpera() EDeliveryOpera {
	if x != nil {
		return x.Opera
	}
	return EDeliveryOpera_EDO_Get
}

func (x *S2CDelivery) GetCargoList() []*Cargo {
	if x != nil {
		return x.CargoList
	}
	return nil
}

type LianLianKanGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperaType ELLKGetOperaType `protobuf:"varint,1,opt,name=operaType,proto3,enum=msg.ELLKGetOperaType" json:"operaType,omitempty"`
}

func (x *LianLianKanGetReq) Reset() {
	*x = LianLianKanGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LianLianKanGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LianLianKanGetReq) ProtoMessage() {}

func (x *LianLianKanGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LianLianKanGetReq.ProtoReflect.Descriptor instead.
func (*LianLianKanGetReq) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{42}
}

func (x *LianLianKanGetReq) GetOperaType() ELLKGetOperaType {
	if x != nil {
		return x.OperaType
	}
	return ELLKGetOperaType_ELLKG_INVALID
}

type LianLianKanGetRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matched  *LLKMatched `protobuf:"bytes,1,opt,name=matched,proto3" json:"matched,omitempty"`
	RoomId   string      `protobuf:"bytes,2,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Gaming   *LLKRoom    `protobuf:"bytes,3,opt,name=gaming,proto3" json:"gaming,omitempty"`
	UserInfo *UserBase   `protobuf:"bytes,4,opt,name=userInfo,proto3" json:"userInfo,omitempty"` //! 注意：下发对方的时候需要脱敏  matched操作的时候会下发该数据
}

func (x *LianLianKanGetRsp) Reset() {
	*x = LianLianKanGetRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LianLianKanGetRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LianLianKanGetRsp) ProtoMessage() {}

func (x *LianLianKanGetRsp) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LianLianKanGetRsp.ProtoReflect.Descriptor instead.
func (*LianLianKanGetRsp) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{43}
}

func (x *LianLianKanGetRsp) GetMatched() *LLKMatched {
	if x != nil {
		return x.Matched
	}
	return nil
}

func (x *LianLianKanGetRsp) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *LianLianKanGetRsp) GetGaming() *LLKRoom {
	if x != nil {
		return x.Gaming
	}
	return nil
}

func (x *LianLianKanGetRsp) GetUserInfo() *UserBase {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type LLKMatchedOperaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId      string                   `protobuf:"bytes,1,opt,name=matchId,proto3" json:"matchId,omitempty"`
	MatchedOpera ELianLianKanMatchedOpera `protobuf:"varint,2,opt,name=matchedOpera,proto3,enum=msg.ELianLianKanMatchedOpera" json:"matchedOpera,omitempty"` //匹配成功后,确认匹配结果
}

func (x *LLKMatchedOperaInfo) Reset() {
	*x = LLKMatchedOperaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLKMatchedOperaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLKMatchedOperaInfo) ProtoMessage() {}

func (x *LLKMatchedOperaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLKMatchedOperaInfo.ProtoReflect.Descriptor instead.
func (*LLKMatchedOperaInfo) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{44}
}

func (x *LLKMatchedOperaInfo) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *LLKMatchedOperaInfo) GetMatchedOpera() ELianLianKanMatchedOpera {
	if x != nil {
		return x.MatchedOpera
	}
	return ELianLianKanMatchedOpera_ELLKMO_INVALID
}

type LLKMatchedInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          string                   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	MatchedOpera ELianLianKanMatchedOpera `protobuf:"varint,2,opt,name=matchedOpera,proto3,enum=msg.ELianLianKanMatchedOpera" json:"matchedOpera,omitempty"`
}

func (x *LLKMatchedInfo) Reset() {
	*x = LLKMatchedInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLKMatchedInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLKMatchedInfo) ProtoMessage() {}

func (x *LLKMatchedInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLKMatchedInfo.ProtoReflect.Descriptor instead.
func (*LLKMatchedInfo) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{45}
}

func (x *LLKMatchedInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *LLKMatchedInfo) GetMatchedOpera() ELianLianKanMatchedOpera {
	if x != nil {
		return x.MatchedOpera
	}
	return ELianLianKanMatchedOpera_ELLKMO_INVALID
}

type LLKMatched struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId     string            `protobuf:"bytes,1,opt,name=matchId,proto3" json:"matchId,omitempty"`
	Rank        uint32            `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`
	MatchedInfo []*LLKMatchedInfo `protobuf:"bytes,3,rep,name=matchedInfo,proto3" json:"matchedInfo,omitempty"`
	UserInfo    []*UserBase       `protobuf:"bytes,4,rep,name=userInfo,proto3" json:"userInfo,omitempty"` //! 注意：下发对方的时候需要脱敏
}

func (x *LLKMatched) Reset() {
	*x = LLKMatched{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLKMatched) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLKMatched) ProtoMessage() {}

func (x *LLKMatched) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLKMatched.ProtoReflect.Descriptor instead.
func (*LLKMatched) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{46}
}

func (x *LLKMatched) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *LLKMatched) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *LLKMatched) GetMatchedInfo() []*LLKMatchedInfo {
	if x != nil {
		return x.MatchedInfo
	}
	return nil
}

func (x *LLKMatched) GetUserInfo() []*UserBase {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type LLKGameOperaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string    `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Opera  *LLKOpera `protobuf:"bytes,2,opt,name=opera,proto3" json:"opera,omitempty"`
}

func (x *LLKGameOperaInfo) Reset() {
	*x = LLKGameOperaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLKGameOperaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLKGameOperaInfo) ProtoMessage() {}

func (x *LLKGameOperaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLKGameOperaInfo.ProtoReflect.Descriptor instead.
func (*LLKGameOperaInfo) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{47}
}

func (x *LLKGameOperaInfo) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *LLKGameOperaInfo) GetOpera() *LLKOpera {
	if x != nil {
		return x.Opera
	}
	return nil
}

type C2SLianLianKan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId      uint32            `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	OperaType ELianLianKanOpera `protobuf:"varint,2,opt,name=operaType,proto3,enum=msg.ELianLianKanOpera" json:"operaType,omitempty"`
	// Types that are assignable to OperaValue:
	//
	//	*C2SLianLianKan_GetReq
	//	*C2SLianLianKan_Matching
	//	*C2SLianLianKan_MatchedOperaInfo
	//	*C2SLianLianKan_GameOperaInfo
	OperaValue isC2SLianLianKan_OperaValue `protobuf_oneof:"OperaValue"`
}

func (x *C2SLianLianKan) Reset() {
	*x = C2SLianLianKan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SLianLianKan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SLianLianKan) ProtoMessage() {}

func (x *C2SLianLianKan) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SLianLianKan.ProtoReflect.Descriptor instead.
func (*C2SLianLianKan) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{48}
}

func (x *C2SLianLianKan) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SLianLianKan) GetOperaType() ELianLianKanOpera {
	if x != nil {
		return x.OperaType
	}
	return ELianLianKanOpera_ELLKO_GET
}

func (m *C2SLianLianKan) GetOperaValue() isC2SLianLianKan_OperaValue {
	if m != nil {
		return m.OperaValue
	}
	return nil
}

func (x *C2SLianLianKan) GetGetReq() *LianLianKanGetReq {
	if x, ok := x.GetOperaValue().(*C2SLianLianKan_GetReq); ok {
		return x.GetReq
	}
	return nil
}

func (x *C2SLianLianKan) GetMatching() ELianLianKanMatch {
	if x, ok := x.GetOperaValue().(*C2SLianLianKan_Matching); ok {
		return x.Matching
	}
	return ELianLianKanMatch_ELLKM_INVALID
}

func (x *C2SLianLianKan) GetMatchedOperaInfo() *LLKMatchedOperaInfo {
	if x, ok := x.GetOperaValue().(*C2SLianLianKan_MatchedOperaInfo); ok {
		return x.MatchedOperaInfo
	}
	return nil
}

func (x *C2SLianLianKan) GetGameOperaInfo() *LLKGameOperaInfo {
	if x, ok := x.GetOperaValue().(*C2SLianLianKan_GameOperaInfo); ok {
		return x.GameOperaInfo
	}
	return nil
}

type isC2SLianLianKan_OperaValue interface {
	isC2SLianLianKan_OperaValue()
}

type C2SLianLianKan_GetReq struct {
	GetReq *LianLianKanGetReq `protobuf:"bytes,3,opt,name=getReq,proto3,oneof"`
}

type C2SLianLianKan_Matching struct {
	Matching ELianLianKanMatch `protobuf:"varint,4,opt,name=matching,proto3,enum=msg.ELianLianKanMatch,oneof"` // 匹配操作
}

type C2SLianLianKan_MatchedOperaInfo struct {
	MatchedOperaInfo *LLKMatchedOperaInfo `protobuf:"bytes,5,opt,name=matchedOperaInfo,proto3,oneof"` //匹配成功后,确认匹配结果
}

type C2SLianLianKan_GameOperaInfo struct {
	GameOperaInfo *LLKGameOperaInfo `protobuf:"bytes,6,opt,name=gameOperaInfo,proto3,oneof"`
}

func (*C2SLianLianKan_GetReq) isC2SLianLianKan_OperaValue() {}

func (*C2SLianLianKan_Matching) isC2SLianLianKan_OperaValue() {}

func (*C2SLianLianKan_MatchedOperaInfo) isC2SLianLianKan_OperaValue() {}

func (*C2SLianLianKan_GameOperaInfo) isC2SLianLianKan_OperaValue() {}

type LLKReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin      string      `protobuf:"bytes,1,opt,name=uin,proto3" json:"uin,omitempty"`
	ItemList []*ItemInfo `protobuf:"bytes,2,rep,name=itemList,proto3" json:"itemList,omitempty"`
}

func (x *LLKReward) Reset() {
	*x = LLKReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLKReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLKReward) ProtoMessage() {}

func (x *LLKReward) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLKReward.ProtoReflect.Descriptor instead.
func (*LLKReward) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{49}
}

func (x *LLKReward) GetUin() string {
	if x != nil {
		return x.Uin
	}
	return ""
}

func (x *LLKReward) GetItemList() []*ItemInfo {
	if x != nil {
		return x.ItemList
	}
	return nil
}

type LLKGameEndEx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelGameEnd *LLKGameEnd  `protobuf:"bytes,1,opt,name=modelGameEnd,proto3" json:"modelGameEnd,omitempty"`
	LlkReward    []*LLKReward `protobuf:"bytes,2,rep,name=llkReward,proto3" json:"llkReward,omitempty"`
}

func (x *LLKGameEndEx) Reset() {
	*x = LLKGameEndEx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLKGameEndEx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLKGameEndEx) ProtoMessage() {}

func (x *LLKGameEndEx) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLKGameEndEx.ProtoReflect.Descriptor instead.
func (*LLKGameEndEx) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{50}
}

func (x *LLKGameEndEx) GetModelGameEnd() *LLKGameEnd {
	if x != nil {
		return x.ModelGameEnd
	}
	return nil
}

func (x *LLKGameEndEx) GetLlkReward() []*LLKReward {
	if x != nil {
		return x.LlkReward
	}
	return nil
}

// ! 分三个阶段
// ! 匹配中 可以操作的请求匹配 取消匹配 匹配超时
// ! 匹配成功 可以操作的是确认匹配和拒绝匹配
// ! 游戏中 道具使用和连线操作
type S2CLianLianKan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode   STATUS            `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	UiId      uint32            `protobuf:"varint,2,opt,name=uiId,proto3" json:"uiId,omitempty"`
	OperaType ELianLianKanOpera `protobuf:"varint,3,opt,name=operaType,proto3,enum=msg.ELianLianKanOpera" json:"operaType,omitempty"`
	// Types that are assignable to OperaValue:
	//
	//	*S2CLianLianKan_GetRsp
	//	*S2CLianLianKan_Matching
	//	*S2CLianLianKan_Matched
	//	*S2CLianLianKan_Gaming
	//	*S2CLianLianKan_GameEnd
	OperaValue isS2CLianLianKan_OperaValue `protobuf_oneof:"OperaValue"`
}

func (x *S2CLianLianKan) Reset() {
	*x = S2CLianLianKan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CLianLianKan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CLianLianKan) ProtoMessage() {}

func (x *S2CLianLianKan) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CLianLianKan.ProtoReflect.Descriptor instead.
func (*S2CLianLianKan) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{51}
}

func (x *S2CLianLianKan) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CLianLianKan) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2CLianLianKan) GetOperaType() ELianLianKanOpera {
	if x != nil {
		return x.OperaType
	}
	return ELianLianKanOpera_ELLKO_GET
}

func (m *S2CLianLianKan) GetOperaValue() isS2CLianLianKan_OperaValue {
	if m != nil {
		return m.OperaValue
	}
	return nil
}

func (x *S2CLianLianKan) GetGetRsp() *LianLianKanGetRsp {
	if x, ok := x.GetOperaValue().(*S2CLianLianKan_GetRsp); ok {
		return x.GetRsp
	}
	return nil
}

func (x *S2CLianLianKan) GetMatching() ELianLianKanMatch {
	if x, ok := x.GetOperaValue().(*S2CLianLianKan_Matching); ok {
		return x.Matching
	}
	return ELianLianKanMatch_ELLKM_INVALID
}

func (x *S2CLianLianKan) GetMatched() *LLKMatched {
	if x, ok := x.GetOperaValue().(*S2CLianLianKan_Matched); ok {
		return x.Matched
	}
	return nil
}

func (x *S2CLianLianKan) GetGaming() *LLKRoom {
	if x, ok := x.GetOperaValue().(*S2CLianLianKan_Gaming); ok {
		return x.Gaming
	}
	return nil
}

func (x *S2CLianLianKan) GetGameEnd() *LLKGameEndEx {
	if x, ok := x.GetOperaValue().(*S2CLianLianKan_GameEnd); ok {
		return x.GameEnd
	}
	return nil
}

type isS2CLianLianKan_OperaValue interface {
	isS2CLianLianKan_OperaValue()
}

type S2CLianLianKan_GetRsp struct {
	GetRsp *LianLianKanGetRsp `protobuf:"bytes,4,opt,name=getRsp,proto3,oneof"` // 如果断线进来，是返回玩家当前状态, 玩家点确认就直接用这个数据，点取消的话就按以前的发EXXL_FLEET
}

type S2CLianLianKan_Matching struct {
	Matching ELianLianKanMatch `protobuf:"varint,5,opt,name=matching,proto3,enum=msg.ELianLianKanMatch,oneof"`
}

type S2CLianLianKan_Matched struct {
	Matched *LLKMatched `protobuf:"bytes,6,opt,name=matched,proto3,oneof"`
}

type S2CLianLianKan_Gaming struct {
	Gaming *LLKRoom `protobuf:"bytes,7,opt,name=gaming,proto3,oneof"`
}

type S2CLianLianKan_GameEnd struct {
	GameEnd *LLKGameEndEx `protobuf:"bytes,8,opt,name=gameEnd,proto3,oneof"`
}

func (*S2CLianLianKan_GetRsp) isS2CLianLianKan_OperaValue() {}

func (*S2CLianLianKan_Matching) isS2CLianLianKan_OperaValue() {}

func (*S2CLianLianKan_Matched) isS2CLianLianKan_OperaValue() {}

func (*S2CLianLianKan_Gaming) isS2CLianLianKan_OperaValue() {}

func (*S2CLianLianKan_GameEnd) isS2CLianLianKan_OperaValue() {}

type C2SPetBuilding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId            uint32            `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	OperaType       EPetBuildingOpera `protobuf:"varint,2,opt,name=operaType,proto3,enum=msg.EPetBuildingOpera" json:"operaType,omitempty"`
	BuildUid        string            `protobuf:"bytes,3,opt,name=buildUid,proto3" json:"buildUid,omitempty"`
	Index           int32             `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`                     //! 操作的index
	RecruitType     uint32            `protobuf:"varint,5,opt,name=recruitType,proto3" json:"recruitType,omitempty"`         //! 增加一个招募时的类型
	AccelerateCount uint32            `protobuf:"varint,6,opt,name=accelerateCount,proto3" json:"accelerateCount,omitempty"` //! 加速次数
}

func (x *C2SPetBuilding) Reset() {
	*x = C2SPetBuilding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPetBuilding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPetBuilding) ProtoMessage() {}

func (x *C2SPetBuilding) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPetBuilding.ProtoReflect.Descriptor instead.
func (*C2SPetBuilding) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{52}
}

func (x *C2SPetBuilding) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SPetBuilding) GetOperaType() EPetBuildingOpera {
	if x != nil {
		return x.OperaType
	}
	return EPetBuildingOpera_EPBO_INVALID
}

func (x *C2SPetBuilding) GetBuildUid() string {
	if x != nil {
		return x.BuildUid
	}
	return ""
}

func (x *C2SPetBuilding) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *C2SPetBuilding) GetRecruitType() uint32 {
	if x != nil {
		return x.RecruitType
	}
	return 0
}

func (x *C2SPetBuilding) GetAccelerateCount() uint32 {
	if x != nil {
		return x.AccelerateCount
	}
	return 0
}

type S2CPetBuilding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode     STATUS            `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	UiId        uint32            `protobuf:"varint,2,opt,name=uiId,proto3" json:"uiId,omitempty"`
	OperaType   EPetBuildingOpera `protobuf:"varint,3,opt,name=operaType,proto3,enum=msg.EPetBuildingOpera" json:"operaType,omitempty"`
	PetBuilding *PetBuilding      `protobuf:"bytes,4,opt,name=petBuilding,proto3" json:"petBuilding,omitempty"` //! 全量的
	PetInfo     *PetInfo          `protobuf:"bytes,5,opt,name=petInfo,proto3" json:"petInfo,omitempty"`
}

func (x *S2CPetBuilding) Reset() {
	*x = S2CPetBuilding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPetBuilding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPetBuilding) ProtoMessage() {}

func (x *S2CPetBuilding) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPetBuilding.ProtoReflect.Descriptor instead.
func (*S2CPetBuilding) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{53}
}

func (x *S2CPetBuilding) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CPetBuilding) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2CPetBuilding) GetOperaType() EPetBuildingOpera {
	if x != nil {
		return x.OperaType
	}
	return EPetBuildingOpera_EPBO_INVALID
}

func (x *S2CPetBuilding) GetPetBuilding() *PetBuilding {
	if x != nil {
		return x.PetBuilding
	}
	return nil
}

func (x *S2CPetBuilding) GetPetInfo() *PetInfo {
	if x != nil {
		return x.PetInfo
	}
	return nil
}

type PetUpgrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropList []*ItemInfo `protobuf:"bytes,1,rep,name=propList,proto3" json:"propList,omitempty"`
}

func (x *PetUpgrade) Reset() {
	*x = PetUpgrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetUpgrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetUpgrade) ProtoMessage() {}

func (x *PetUpgrade) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetUpgrade.ProtoReflect.Descriptor instead.
func (*PetUpgrade) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{54}
}

func (x *PetUpgrade) GetPropList() []*ItemInfo {
	if x != nil {
		return x.PropList
	}
	return nil
}

type PetAssign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkBuildingUid string `protobuf:"bytes,1,opt,name=workBuildingUid,proto3" json:"workBuildingUid,omitempty"`
}

func (x *PetAssign) Reset() {
	*x = PetAssign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetAssign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetAssign) ProtoMessage() {}

func (x *PetAssign) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetAssign.ProtoReflect.Descriptor instead.
func (*PetAssign) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{55}
}

func (x *PetAssign) GetWorkBuildingUid() string {
	if x != nil {
		return x.WorkBuildingUid
	}
	return ""
}

type PetUnAssign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkBuildingUid string `protobuf:"bytes,1,opt,name=workBuildingUid,proto3" json:"workBuildingUid,omitempty"`
}

func (x *PetUnAssign) Reset() {
	*x = PetUnAssign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetUnAssign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetUnAssign) ProtoMessage() {}

func (x *PetUnAssign) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetUnAssign.ProtoReflect.Descriptor instead.
func (*PetUnAssign) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{56}
}

func (x *PetUnAssign) GetWorkBuildingUid() string {
	if x != nil {
		return x.WorkBuildingUid
	}
	return ""
}

// 变异
type PetVariation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalItemId      uint32 `protobuf:"varint,1,opt,name=globalItemId,proto3" json:"globalItemId,omitempty"`
	SkillGlobalItemId uint32 `protobuf:"varint,2,opt,name=skillGlobalItemId,proto3" json:"skillGlobalItemId,omitempty"`
}

func (x *PetVariation) Reset() {
	*x = PetVariation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetVariation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetVariation) ProtoMessage() {}

func (x *PetVariation) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetVariation.ProtoReflect.Descriptor instead.
func (*PetVariation) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{57}
}

func (x *PetVariation) GetGlobalItemId() uint32 {
	if x != nil {
		return x.GlobalItemId
	}
	return 0
}

func (x *PetVariation) GetSkillGlobalItemId() uint32 {
	if x != nil {
		return x.SkillGlobalItemId
	}
	return 0
}

// 技能升级
type PetSkillUpgrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillIndex uint32 `protobuf:"varint,1,opt,name=skillIndex,proto3" json:"skillIndex,omitempty"`
}

func (x *PetSkillUpgrade) Reset() {
	*x = PetSkillUpgrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetSkillUpgrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetSkillUpgrade) ProtoMessage() {}

func (x *PetSkillUpgrade) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetSkillUpgrade.ProtoReflect.Descriptor instead.
func (*PetSkillUpgrade) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{58}
}

func (x *PetSkillUpgrade) GetSkillIndex() uint32 {
	if x != nil {
		return x.SkillIndex
	}
	return 0
}

// 技能重置
type PetSkillChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillIndex        uint32 `protobuf:"varint,1,opt,name=skillIndex,proto3" json:"skillIndex,omitempty"`
	SkillGlobalItemId uint32 `protobuf:"varint,2,opt,name=skillGlobalItemId,proto3" json:"skillGlobalItemId,omitempty"`
}

func (x *PetSkillChange) Reset() {
	*x = PetSkillChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetSkillChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetSkillChange) ProtoMessage() {}

func (x *PetSkillChange) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetSkillChange.ProtoReflect.Descriptor instead.
func (*PetSkillChange) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{59}
}

func (x *PetSkillChange) GetSkillIndex() uint32 {
	if x != nil {
		return x.SkillIndex
	}
	return 0
}

func (x *PetSkillChange) GetSkillGlobalItemId() uint32 {
	if x != nil {
		return x.SkillGlobalItemId
	}
	return 0
}

// 确定技能重置
type PetSkillChangeConfirm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillIndex        uint32 `protobuf:"varint,1,opt,name=skillIndex,proto3" json:"skillIndex,omitempty"`
	SkillGlobalItemId uint32 `protobuf:"varint,2,opt,name=skillGlobalItemId,proto3" json:"skillGlobalItemId,omitempty"`
}

func (x *PetSkillChangeConfirm) Reset() {
	*x = PetSkillChangeConfirm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetSkillChangeConfirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetSkillChangeConfirm) ProtoMessage() {}

func (x *PetSkillChangeConfirm) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetSkillChangeConfirm.ProtoReflect.Descriptor instead.
func (*PetSkillChangeConfirm) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{60}
}

func (x *PetSkillChangeConfirm) GetSkillIndex() uint32 {
	if x != nil {
		return x.SkillIndex
	}
	return 0
}

func (x *PetSkillChangeConfirm) GetSkillGlobalItemId() uint32 {
	if x != nil {
		return x.SkillGlobalItemId
	}
	return 0
}

// 重命名
type PetRename struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PetRename) Reset() {
	*x = PetRename{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetRename) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetRename) ProtoMessage() {}

func (x *PetRename) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetRename.ProtoReflect.Descriptor instead.
func (*PetRename) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{61}
}

func (x *PetRename) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 重命名
type PetRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PetUid string `protobuf:"bytes,1,opt,name=petUid,proto3" json:"petUid,omitempty"`
}

func (x *PetRelease) Reset() {
	*x = PetRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetRelease) ProtoMessage() {}

func (x *PetRelease) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetRelease.ProtoReflect.Descriptor instead.
func (*PetRelease) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{62}
}

func (x *PetRelease) GetPetUid() string {
	if x != nil {
		return x.PetUid
	}
	return ""
}

type C2SPet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId      uint32    `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	PetUid    string    `protobuf:"bytes,2,opt,name=petUid,proto3" json:"petUid,omitempty"`
	OperaType EPetOpera `protobuf:"varint,3,opt,name=operaType,proto3,enum=msg.EPetOpera" json:"operaType,omitempty"`
	// Types that are assignable to OperaValue:
	//
	//	*C2SPet_PetUpgrade
	//	*C2SPet_PetAssign
	//	*C2SPet_PetUnAssign
	//	*C2SPet_PetSkillUpgrade
	//	*C2SPet_PetSkillChange
	//	*C2SPet_PetSkillChangeConfirm
	//	*C2SPet_PetRename
	//	*C2SPet_PetRelease
	OperaValue isC2SPet_OperaValue `protobuf_oneof:"OperaValue"`
}

func (x *C2SPet) Reset() {
	*x = C2SPet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPet) ProtoMessage() {}

func (x *C2SPet) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPet.ProtoReflect.Descriptor instead.
func (*C2SPet) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{63}
}

func (x *C2SPet) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SPet) GetPetUid() string {
	if x != nil {
		return x.PetUid
	}
	return ""
}

func (x *C2SPet) GetOperaType() EPetOpera {
	if x != nil {
		return x.OperaType
	}
	return EPetOpera_EPO_INVALID
}

func (m *C2SPet) GetOperaValue() isC2SPet_OperaValue {
	if m != nil {
		return m.OperaValue
	}
	return nil
}

func (x *C2SPet) GetPetUpgrade() *PetUpgrade {
	if x, ok := x.GetOperaValue().(*C2SPet_PetUpgrade); ok {
		return x.PetUpgrade
	}
	return nil
}

func (x *C2SPet) GetPetAssign() *PetAssign {
	if x, ok := x.GetOperaValue().(*C2SPet_PetAssign); ok {
		return x.PetAssign
	}
	return nil
}

func (x *C2SPet) GetPetUnAssign() *PetUnAssign {
	if x, ok := x.GetOperaValue().(*C2SPet_PetUnAssign); ok {
		return x.PetUnAssign
	}
	return nil
}

func (x *C2SPet) GetPetSkillUpgrade() *PetSkillUpgrade {
	if x, ok := x.GetOperaValue().(*C2SPet_PetSkillUpgrade); ok {
		return x.PetSkillUpgrade
	}
	return nil
}

func (x *C2SPet) GetPetSkillChange() *PetSkillChange {
	if x, ok := x.GetOperaValue().(*C2SPet_PetSkillChange); ok {
		return x.PetSkillChange
	}
	return nil
}

func (x *C2SPet) GetPetSkillChangeConfirm() *PetSkillChangeConfirm {
	if x, ok := x.GetOperaValue().(*C2SPet_PetSkillChangeConfirm); ok {
		return x.PetSkillChangeConfirm
	}
	return nil
}

func (x *C2SPet) GetPetRename() *PetRename {
	if x, ok := x.GetOperaValue().(*C2SPet_PetRename); ok {
		return x.PetRename
	}
	return nil
}

func (x *C2SPet) GetPetRelease() *PetRelease {
	if x, ok := x.GetOperaValue().(*C2SPet_PetRelease); ok {
		return x.PetRelease
	}
	return nil
}

type isC2SPet_OperaValue interface {
	isC2SPet_OperaValue()
}

type C2SPet_PetUpgrade struct {
	PetUpgrade *PetUpgrade `protobuf:"bytes,4,opt,name=petUpgrade,proto3,oneof"`
}

type C2SPet_PetAssign struct {
	PetAssign *PetAssign `protobuf:"bytes,5,opt,name=petAssign,proto3,oneof"`
}

type C2SPet_PetUnAssign struct {
	PetUnAssign *PetUnAssign `protobuf:"bytes,6,opt,name=petUnAssign,proto3,oneof"`
}

type C2SPet_PetSkillUpgrade struct {
	PetSkillUpgrade *PetSkillUpgrade `protobuf:"bytes,7,opt,name=petSkillUpgrade,proto3,oneof"` //技能升级
}

type C2SPet_PetSkillChange struct {
	PetSkillChange *PetSkillChange `protobuf:"bytes,8,opt,name=petSkillChange,proto3,oneof"` //技能重置
}

type C2SPet_PetSkillChangeConfirm struct {
	PetSkillChangeConfirm *PetSkillChangeConfirm `protobuf:"bytes,9,opt,name=petSkillChangeConfirm,proto3,oneof"` //确认技能重置
}

type C2SPet_PetRename struct {
	PetRename *PetRename `protobuf:"bytes,10,opt,name=petRename,proto3,oneof"`
}

type C2SPet_PetRelease struct {
	PetRelease *PetRelease `protobuf:"bytes,11,opt,name=petRelease,proto3,oneof"`
}

func (*C2SPet_PetUpgrade) isC2SPet_OperaValue() {}

func (*C2SPet_PetAssign) isC2SPet_OperaValue() {}

func (*C2SPet_PetUnAssign) isC2SPet_OperaValue() {}

func (*C2SPet_PetSkillUpgrade) isC2SPet_OperaValue() {}

func (*C2SPet_PetSkillChange) isC2SPet_OperaValue() {}

func (*C2SPet_PetSkillChangeConfirm) isC2SPet_OperaValue() {}

func (*C2SPet_PetRename) isC2SPet_OperaValue() {}

func (*C2SPet_PetRelease) isC2SPet_OperaValue() {}

type S2CPet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode   STATUS    `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	UiId      uint32    `protobuf:"varint,2,opt,name=uiId,proto3" json:"uiId,omitempty"`
	OperaType EPetOpera `protobuf:"varint,3,opt,name=operaType,proto3,enum=msg.EPetOpera" json:"operaType,omitempty"`
	Pet       *Pet      `protobuf:"bytes,11,opt,name=pet,proto3" json:"pet,omitempty"` //! 全量的
	// Types that are assignable to OperaValue:
	//
	//	*S2CPet_PetUpgrade
	//	*S2CPet_PetAssign
	//	*S2CPet_PetVariation
	//	*S2CPet_PetSkillUpgrade
	//	*S2CPet_PetSkillChange
	//	*S2CPet_PetSkillChangeConfirm
	//	*S2CPet_PetRename
	//	*S2CPet_PetRelease
	OperaValue isS2CPet_OperaValue `protobuf_oneof:"OperaValue"`
}

func (x *S2CPet) Reset() {
	*x = S2CPet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPet) ProtoMessage() {}

func (x *S2CPet) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPet.ProtoReflect.Descriptor instead.
func (*S2CPet) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{64}
}

func (x *S2CPet) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CPet) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2CPet) GetOperaType() EPetOpera {
	if x != nil {
		return x.OperaType
	}
	return EPetOpera_EPO_INVALID
}

func (x *S2CPet) GetPet() *Pet {
	if x != nil {
		return x.Pet
	}
	return nil
}

func (m *S2CPet) GetOperaValue() isS2CPet_OperaValue {
	if m != nil {
		return m.OperaValue
	}
	return nil
}

func (x *S2CPet) GetPetUpgrade() *PetUpgrade {
	if x, ok := x.GetOperaValue().(*S2CPet_PetUpgrade); ok {
		return x.PetUpgrade
	}
	return nil
}

func (x *S2CPet) GetPetAssign() *PetAssign {
	if x, ok := x.GetOperaValue().(*S2CPet_PetAssign); ok {
		return x.PetAssign
	}
	return nil
}

func (x *S2CPet) GetPetVariation() *PetVariation {
	if x, ok := x.GetOperaValue().(*S2CPet_PetVariation); ok {
		return x.PetVariation
	}
	return nil
}

func (x *S2CPet) GetPetSkillUpgrade() *PetSkillUpgrade {
	if x, ok := x.GetOperaValue().(*S2CPet_PetSkillUpgrade); ok {
		return x.PetSkillUpgrade
	}
	return nil
}

func (x *S2CPet) GetPetSkillChange() *PetSkillChange {
	if x, ok := x.GetOperaValue().(*S2CPet_PetSkillChange); ok {
		return x.PetSkillChange
	}
	return nil
}

func (x *S2CPet) GetPetSkillChangeConfirm() *PetSkillChangeConfirm {
	if x, ok := x.GetOperaValue().(*S2CPet_PetSkillChangeConfirm); ok {
		return x.PetSkillChangeConfirm
	}
	return nil
}

func (x *S2CPet) GetPetRename() *PetRename {
	if x, ok := x.GetOperaValue().(*S2CPet_PetRename); ok {
		return x.PetRename
	}
	return nil
}

func (x *S2CPet) GetPetRelease() *PetRelease {
	if x, ok := x.GetOperaValue().(*S2CPet_PetRelease); ok {
		return x.PetRelease
	}
	return nil
}

type isS2CPet_OperaValue interface {
	isS2CPet_OperaValue()
}

type S2CPet_PetUpgrade struct {
	PetUpgrade *PetUpgrade `protobuf:"bytes,4,opt,name=petUpgrade,proto3,oneof"`
}

type S2CPet_PetAssign struct {
	PetAssign *PetAssign `protobuf:"bytes,5,opt,name=PetAssign,proto3,oneof"`
}

type S2CPet_PetVariation struct {
	PetVariation *PetVariation `protobuf:"bytes,6,opt,name=petVariation,proto3,oneof"` //变异
}

type S2CPet_PetSkillUpgrade struct {
	PetSkillUpgrade *PetSkillUpgrade `protobuf:"bytes,7,opt,name=petSkillUpgrade,proto3,oneof"` //技能升级
}

type S2CPet_PetSkillChange struct {
	PetSkillChange *PetSkillChange `protobuf:"bytes,8,opt,name=petSkillChange,proto3,oneof"` //技能重置
}

type S2CPet_PetSkillChangeConfirm struct {
	PetSkillChangeConfirm *PetSkillChangeConfirm `protobuf:"bytes,9,opt,name=petSkillChangeConfirm,proto3,oneof"` //确认技能重置
}

type S2CPet_PetRename struct {
	PetRename *PetRename `protobuf:"bytes,10,opt,name=petRename,proto3,oneof"`
}

type S2CPet_PetRelease struct {
	PetRelease *PetRelease `protobuf:"bytes,12,opt,name=petRelease,proto3,oneof"`
}

func (*S2CPet_PetUpgrade) isS2CPet_OperaValue() {}

func (*S2CPet_PetAssign) isS2CPet_OperaValue() {}

func (*S2CPet_PetVariation) isS2CPet_OperaValue() {}

func (*S2CPet_PetSkillUpgrade) isS2CPet_OperaValue() {}

func (*S2CPet_PetSkillChange) isS2CPet_OperaValue() {}

func (*S2CPet_PetSkillChangeConfirm) isS2CPet_OperaValue() {}

func (*S2CPet_PetRename) isS2CPet_OperaValue() {}

func (*S2CPet_PetRelease) isS2CPet_OperaValue() {}

type C2SPetAssign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId     uint32 `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	PetUid   string `protobuf:"bytes,2,opt,name=petUid,proto3" json:"petUid,omitempty"`
	BuildUid string `protobuf:"bytes,3,opt,name=buildUid,proto3" json:"buildUid,omitempty"`
}

func (x *C2SPetAssign) Reset() {
	*x = C2SPetAssign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPetAssign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPetAssign) ProtoMessage() {}

func (x *C2SPetAssign) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPetAssign.ProtoReflect.Descriptor instead.
func (*C2SPetAssign) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{65}
}

func (x *C2SPetAssign) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SPetAssign) GetPetUid() string {
	if x != nil {
		return x.PetUid
	}
	return ""
}

func (x *C2SPetAssign) GetBuildUid() string {
	if x != nil {
		return x.BuildUid
	}
	return ""
}

type S2CPetAssign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode       STATUS         `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	UiId          uint32         `protobuf:"varint,2,opt,name=uiId,proto3" json:"uiId,omitempty"`
	BuildUid      string         `protobuf:"bytes,3,opt,name=buildUid,proto3" json:"buildUid,omitempty"`
	PetAssignInfo *PetAssignInfo `protobuf:"bytes,4,opt,name=petAssignInfo,proto3" json:"petAssignInfo,omitempty"`
}

func (x *S2CPetAssign) Reset() {
	*x = S2CPetAssign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPetAssign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPetAssign) ProtoMessage() {}

func (x *S2CPetAssign) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPetAssign.ProtoReflect.Descriptor instead.
func (*S2CPetAssign) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{66}
}

func (x *S2CPetAssign) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CPetAssign) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2CPetAssign) GetBuildUid() string {
	if x != nil {
		return x.BuildUid
	}
	return ""
}

func (x *S2CPetAssign) GetPetAssignInfo() *PetAssignInfo {
	if x != nil {
		return x.PetAssignInfo
	}
	return nil
}

type S2CCommonReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemList []*ItemInfo `protobuf:"bytes,1,rep,name=itemList,proto3" json:"itemList,omitempty"`
	UiId     uint32      `protobuf:"varint,2,opt,name=uiId,proto3" json:"uiId,omitempty"`
}

func (x *S2CCommonReward) Reset() {
	*x = S2CCommonReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CCommonReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CCommonReward) ProtoMessage() {}

func (x *S2CCommonReward) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CCommonReward.ProtoReflect.Descriptor instead.
func (*S2CCommonReward) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{67}
}

func (x *S2CCommonReward) GetItemList() []*ItemInfo {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *S2CCommonReward) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

// ! 拉取npc信息
type GetNPCInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNPCInfo) Reset() {
	*x = GetNPCInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNPCInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNPCInfo) ProtoMessage() {}

func (x *GetNPCInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNPCInfo.ProtoReflect.Descriptor instead.
func (*GetNPCInfo) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{68}
}

// ! 邀请npc
type InviteNPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NpcId uint32 `protobuf:"varint,1,opt,name=npcId,proto3" json:"npcId,omitempty"`
}

func (x *InviteNPC) Reset() {
	*x = InviteNPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteNPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteNPC) ProtoMessage() {}

func (x *InviteNPC) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteNPC.ProtoReflect.Descriptor instead.
func (*InviteNPC) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{69}
}

func (x *InviteNPC) GetNpcId() uint32 {
	if x != nil {
		return x.NpcId
	}
	return 0
}

// ! 投喂NPC喜好礼物
type FeedNPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NpcId    uint32    `protobuf:"varint,1,opt,name=npcId,proto3" json:"npcId,omitempty"`
	ItemInfo *ItemInfo `protobuf:"bytes,2,opt,name=itemInfo,proto3" json:"itemInfo,omitempty"`
}

func (x *FeedNPC) Reset() {
	*x = FeedNPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedNPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedNPC) ProtoMessage() {}

func (x *FeedNPC) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedNPC.ProtoReflect.Descriptor instead.
func (*FeedNPC) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{70}
}

func (x *FeedNPC) GetNpcId() uint32 {
	if x != nil {
		return x.NpcId
	}
	return 0
}

func (x *FeedNPC) GetItemInfo() *ItemInfo {
	if x != nil {
		return x.ItemInfo
	}
	return nil
}

// 谈天说地
type TalkNPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NpcId uint32 `protobuf:"varint,1,opt,name=npcId,proto3" json:"npcId,omitempty"`
}

func (x *TalkNPC) Reset() {
	*x = TalkNPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalkNPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkNPC) ProtoMessage() {}

func (x *TalkNPC) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkNPC.ProtoReflect.Descriptor instead.
func (*TalkNPC) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{71}
}

func (x *TalkNPC) GetNpcId() uint32 {
	if x != nil {
		return x.NpcId
	}
	return 0
}

// ! 领取手信
type TakeReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NpcId     uint32 `protobuf:"varint,1,opt,name=npcId,proto3" json:"npcId,omitempty"`
	ItemIndex int32  `protobuf:"varint,2,opt,name=itemIndex,proto3" json:"itemIndex,omitempty"` // 领取物品的索引 默认从0开始
}

func (x *TakeReward) Reset() {
	*x = TakeReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeReward) ProtoMessage() {}

func (x *TakeReward) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeReward.ProtoReflect.Descriptor instead.
func (*TakeReward) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{72}
}

func (x *TakeReward) GetNpcId() uint32 {
	if x != nil {
		return x.NpcId
	}
	return 0
}

func (x *TakeReward) GetItemIndex() int32 {
	if x != nil {
		return x.ItemIndex
	}
	return 0
}

// ! 进行初见任务
type FirstTalk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NpcId uint32 `protobuf:"varint,1,opt,name=npcId,proto3" json:"npcId,omitempty"`
}

func (x *FirstTalk) Reset() {
	*x = FirstTalk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstTalk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstTalk) ProtoMessage() {}

func (x *FirstTalk) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstTalk.ProtoReflect.Descriptor instead.
func (*FirstTalk) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{73}
}

func (x *FirstTalk) GetNpcId() uint32 {
	if x != nil {
		return x.NpcId
	}
	return 0
}

type C2SNPCInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId uint32 `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	// Types that are assignable to OperaValue:
	//
	//	*C2SNPCInfo_GetNPCInfo
	//	*C2SNPCInfo_InviteNPC
	//	*C2SNPCInfo_FeedNPC
	//	*C2SNPCInfo_TalkNPC
	//	*C2SNPCInfo_TakeReward
	//	*C2SNPCInfo_FirstTalk
	OperaValue isC2SNPCInfo_OperaValue `protobuf_oneof:"OperaValue"`
}

func (x *C2SNPCInfo) Reset() {
	*x = C2SNPCInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SNPCInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SNPCInfo) ProtoMessage() {}

func (x *C2SNPCInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SNPCInfo.ProtoReflect.Descriptor instead.
func (*C2SNPCInfo) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{74}
}

func (x *C2SNPCInfo) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (m *C2SNPCInfo) GetOperaValue() isC2SNPCInfo_OperaValue {
	if m != nil {
		return m.OperaValue
	}
	return nil
}

func (x *C2SNPCInfo) GetGetNPCInfo() *GetNPCInfo {
	if x, ok := x.GetOperaValue().(*C2SNPCInfo_GetNPCInfo); ok {
		return x.GetNPCInfo
	}
	return nil
}

func (x *C2SNPCInfo) GetInviteNPC() *InviteNPC {
	if x, ok := x.GetOperaValue().(*C2SNPCInfo_InviteNPC); ok {
		return x.InviteNPC
	}
	return nil
}

func (x *C2SNPCInfo) GetFeedNPC() *FeedNPC {
	if x, ok := x.GetOperaValue().(*C2SNPCInfo_FeedNPC); ok {
		return x.FeedNPC
	}
	return nil
}

func (x *C2SNPCInfo) GetTalkNPC() *TalkNPC {
	if x, ok := x.GetOperaValue().(*C2SNPCInfo_TalkNPC); ok {
		return x.TalkNPC
	}
	return nil
}

func (x *C2SNPCInfo) GetTakeReward() *TakeReward {
	if x, ok := x.GetOperaValue().(*C2SNPCInfo_TakeReward); ok {
		return x.TakeReward
	}
	return nil
}

func (x *C2SNPCInfo) GetFirstTalk() *FirstTalk {
	if x, ok := x.GetOperaValue().(*C2SNPCInfo_FirstTalk); ok {
		return x.FirstTalk
	}
	return nil
}

type isC2SNPCInfo_OperaValue interface {
	isC2SNPCInfo_OperaValue()
}

type C2SNPCInfo_GetNPCInfo struct {
	GetNPCInfo *GetNPCInfo `protobuf:"bytes,2,opt,name=getNPCInfo,proto3,oneof"`
}

type C2SNPCInfo_InviteNPC struct {
	InviteNPC *InviteNPC `protobuf:"bytes,3,opt,name=inviteNPC,proto3,oneof"`
}

type C2SNPCInfo_FeedNPC struct {
	FeedNPC *FeedNPC `protobuf:"bytes,4,opt,name=feedNPC,proto3,oneof"`
}

type C2SNPCInfo_TalkNPC struct {
	TalkNPC *TalkNPC `protobuf:"bytes,5,opt,name=talkNPC,proto3,oneof"`
}

type C2SNPCInfo_TakeReward struct {
	TakeReward *TakeReward `protobuf:"bytes,6,opt,name=takeReward,proto3,oneof"`
}

type C2SNPCInfo_FirstTalk struct {
	FirstTalk *FirstTalk `protobuf:"bytes,7,opt,name=firstTalk,proto3,oneof"`
}

func (*C2SNPCInfo_GetNPCInfo) isC2SNPCInfo_OperaValue() {}

func (*C2SNPCInfo_InviteNPC) isC2SNPCInfo_OperaValue() {}

func (*C2SNPCInfo_FeedNPC) isC2SNPCInfo_OperaValue() {}

func (*C2SNPCInfo_TalkNPC) isC2SNPCInfo_OperaValue() {}

func (*C2SNPCInfo_TakeReward) isC2SNPCInfo_OperaValue() {}

func (*C2SNPCInfo_FirstTalk) isC2SNPCInfo_OperaValue() {}

type S2CNPCInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode STATUS `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	UiId    uint32 `protobuf:"varint,2,opt,name=uiId,proto3" json:"uiId,omitempty"`
	Npc     *Npc   `protobuf:"bytes,3,opt,name=npc,proto3" json:"npc,omitempty"`        //已解锁npc列表
	TalkId  uint32 `protobuf:"varint,4,opt,name=talkId,proto3" json:"talkId,omitempty"` //谈天说地返回的id
}

func (x *S2CNPCInfo) Reset() {
	*x = S2CNPCInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CNPCInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CNPCInfo) ProtoMessage() {}

func (x *S2CNPCInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CNPCInfo.ProtoReflect.Descriptor instead.
func (*S2CNPCInfo) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{75}
}

func (x *S2CNPCInfo) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CNPCInfo) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2CNPCInfo) GetNpc() *Npc {
	if x != nil {
		return x.Npc
	}
	return nil
}

func (x *S2CNPCInfo) GetTalkId() uint32 {
	if x != nil {
		return x.TalkId
	}
	return 0
}

// 直购
type C2SBuyGoods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId        uint32 `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	DirectBuyId uint32 `protobuf:"varint,2,opt,name=directBuyId,proto3" json:"directBuyId,omitempty"` // 直购id
	Count       uint32 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Openid      string `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`
	OpenKey     string `protobuf:"bytes,5,opt,name=openKey,proto3" json:"openKey,omitempty"`
	Pf          string `protobuf:"bytes,6,opt,name=pf,proto3" json:"pf,omitempty"`
	PfKey       string `protobuf:"bytes,7,opt,name=pfKey,proto3" json:"pfKey,omitempty"`
}

func (x *C2SBuyGoods) Reset() {
	*x = C2SBuyGoods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SBuyGoods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SBuyGoods) ProtoMessage() {}

func (x *C2SBuyGoods) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SBuyGoods.ProtoReflect.Descriptor instead.
func (*C2SBuyGoods) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{76}
}

func (x *C2SBuyGoods) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SBuyGoods) GetDirectBuyId() uint32 {
	if x != nil {
		return x.DirectBuyId
	}
	return 0
}

func (x *C2SBuyGoods) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *C2SBuyGoods) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *C2SBuyGoods) GetOpenKey() string {
	if x != nil {
		return x.OpenKey
	}
	return ""
}

func (x *C2SBuyGoods) GetPf() string {
	if x != nil {
		return x.Pf
	}
	return ""
}

func (x *C2SBuyGoods) GetPfKey() string {
	if x != nil {
		return x.PfKey
	}
	return ""
}

type S2CBuyGoods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode   STATUS `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	UiId      uint32 `protobuf:"varint,2,opt,name=uiId,proto3" json:"uiId,omitempty"`
	Token     string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	UrlParams string `protobuf:"bytes,4,opt,name=url_params,json=urlParams,proto3" json:"url_params,omitempty"`
}

func (x *S2CBuyGoods) Reset() {
	*x = S2CBuyGoods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CBuyGoods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CBuyGoods) ProtoMessage() {}

func (x *S2CBuyGoods) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CBuyGoods.ProtoReflect.Descriptor instead.
func (*S2CBuyGoods) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{77}
}

func (x *S2CBuyGoods) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CBuyGoods) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2CBuyGoods) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *S2CBuyGoods) GetUrlParams() string {
	if x != nil {
		return x.UrlParams
	}
	return ""
}

type NotifyDeliverGoods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId        uint32 `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	DirectBuyId uint32 `protobuf:"varint,2,opt,name=directBuyId,proto3" json:"directBuyId,omitempty"` // 直购id
}

func (x *NotifyDeliverGoods) Reset() {
	*x = NotifyDeliverGoods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyDeliverGoods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyDeliverGoods) ProtoMessage() {}

func (x *NotifyDeliverGoods) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyDeliverGoods.ProtoReflect.Descriptor instead.
func (*NotifyDeliverGoods) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{78}
}

func (x *NotifyDeliverGoods) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *NotifyDeliverGoods) GetDirectBuyId() uint32 {
	if x != nil {
		return x.DirectBuyId
	}
	return 0
}

// 道具/装饰商城
type BuyMerchandise struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchandiseId uint32 `protobuf:"varint,1,opt,name=merchandiseId,proto3" json:"merchandiseId,omitempty"`
	Cnt           uint32 `protobuf:"varint,2,opt,name=cnt,proto3" json:"cnt,omitempty"`
}

func (x *BuyMerchandise) Reset() {
	*x = BuyMerchandise{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyMerchandise) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyMerchandise) ProtoMessage() {}

func (x *BuyMerchandise) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyMerchandise.ProtoReflect.Descriptor instead.
func (*BuyMerchandise) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{79}
}

func (x *BuyMerchandise) GetMerchandiseId() uint32 {
	if x != nil {
		return x.MerchandiseId
	}
	return 0
}

func (x *BuyMerchandise) GetCnt() uint32 {
	if x != nil {
		return x.Cnt
	}
	return 0
}

type C2SMallOpera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId            uint32            `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	OperType        EMallOperType     `protobuf:"varint,2,opt,name=operType,proto3,enum=msg.EMallOperType" json:"operType,omitempty"`
	MerchandiseList []*BuyMerchandise `protobuf:"bytes,3,rep,name=merchandiseList,proto3" json:"merchandiseList,omitempty"`
	GroupId         uint32            `protobuf:"varint,4,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *C2SMallOpera) Reset() {
	*x = C2SMallOpera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SMallOpera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SMallOpera) ProtoMessage() {}

func (x *C2SMallOpera) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SMallOpera.ProtoReflect.Descriptor instead.
func (*C2SMallOpera) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{80}
}

func (x *C2SMallOpera) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SMallOpera) GetOperType() EMallOperType {
	if x != nil {
		return x.OperType
	}
	return EMallOperType_MOT_Get
}

func (x *C2SMallOpera) GetMerchandiseList() []*BuyMerchandise {
	if x != nil {
		return x.MerchandiseList
	}
	return nil
}

func (x *C2SMallOpera) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type S2CMallOpera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode      STATUS      `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	UiId         uint32      `protobuf:"varint,2,opt,name=uiId,proto3" json:"uiId,omitempty"`
	MallItemList []*MallItem `protobuf:"bytes,3,rep,name=mallItemList,proto3" json:"mallItemList,omitempty"` // 已购买信息
}

func (x *S2CMallOpera) Reset() {
	*x = S2CMallOpera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CMallOpera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CMallOpera) ProtoMessage() {}

func (x *S2CMallOpera) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CMallOpera.ProtoReflect.Descriptor instead.
func (*S2CMallOpera) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{81}
}

func (x *S2CMallOpera) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CMallOpera) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2CMallOpera) GetMallItemList() []*MallItem {
	if x != nil {
		return x.MallItemList
	}
	return nil
}

type C2SDailySign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId      uint32             `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	OperType  EDailySignOperType `protobuf:"varint,2,opt,name=operType,proto3,enum=msg.EDailySignOperType" json:"operType,omitempty"`
	TargetDay uint32             `protobuf:"varint,3,opt,name=targetDay,proto3" json:"targetDay,omitempty"`
}

func (x *C2SDailySign) Reset() {
	*x = C2SDailySign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SDailySign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SDailySign) ProtoMessage() {}

func (x *C2SDailySign) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SDailySign.ProtoReflect.Descriptor instead.
func (*C2SDailySign) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{82}
}

func (x *C2SDailySign) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SDailySign) GetOperType() EDailySignOperType {
	if x != nil {
		return x.OperType
	}
	return EDailySignOperType_DSOT_Get
}

func (x *C2SDailySign) GetTargetDay() uint32 {
	if x != nil {
		return x.TargetDay
	}
	return 0
}

type S2CDailySign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode       STATUS            `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	UiId          uint32            `protobuf:"varint,2,opt,name=uiId,proto3" json:"uiId,omitempty"`
	Month         uint32            `protobuf:"varint,3,opt,name=month,proto3" json:"month,omitempty"`
	Day           uint32            `protobuf:"varint,4,opt,name=day,proto3" json:"day,omitempty"`
	DailySignList []EDailySignState `protobuf:"varint,5,rep,packed,name=dailySignList,proto3,enum=model.EDailySignState" json:"dailySignList,omitempty"` // 签到信息
}

func (x *S2CDailySign) Reset() {
	*x = S2CDailySign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CDailySign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CDailySign) ProtoMessage() {}

func (x *S2CDailySign) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CDailySign.ProtoReflect.Descriptor instead.
func (*S2CDailySign) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{83}
}

func (x *S2CDailySign) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CDailySign) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2CDailySign) GetMonth() uint32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *S2CDailySign) GetDay() uint32 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *S2CDailySign) GetDailySignList() []EDailySignState {
	if x != nil {
		return x.DailySignList
	}
	return nil
}

// 拉取宠物派遣信息
type PetDispatchGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PetDispatchGet) Reset() {
	*x = PetDispatchGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetDispatchGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetDispatchGet) ProtoMessage() {}

func (x *PetDispatchGet) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetDispatchGet.ProtoReflect.Descriptor instead.
func (*PetDispatchGet) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{84}
}

type PetDispatchDo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PointId    uint32   `protobuf:"varint,1,opt,name=pointId,proto3" json:"pointId,omitempty"`
	PetUidList []string `protobuf:"bytes,2,rep,name=petUidList,proto3" json:"petUidList,omitempty"`
}

func (x *PetDispatchDo) Reset() {
	*x = PetDispatchDo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetDispatchDo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetDispatchDo) ProtoMessage() {}

func (x *PetDispatchDo) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetDispatchDo.ProtoReflect.Descriptor instead.
func (*PetDispatchDo) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{85}
}

func (x *PetDispatchDo) GetPointId() uint32 {
	if x != nil {
		return x.PointId
	}
	return 0
}

func (x *PetDispatchDo) GetPetUidList() []string {
	if x != nil {
		return x.PetUidList
	}
	return nil
}

type PetDispatchAward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PointId uint32 `protobuf:"varint,1,opt,name=pointId,proto3" json:"pointId,omitempty"`
}

func (x *PetDispatchAward) Reset() {
	*x = PetDispatchAward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetDispatchAward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetDispatchAward) ProtoMessage() {}

func (x *PetDispatchAward) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetDispatchAward.ProtoReflect.Descriptor instead.
func (*PetDispatchAward) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{86}
}

func (x *PetDispatchAward) GetPointId() uint32 {
	if x != nil {
		return x.PointId
	}
	return 0
}

type C2SPetDispatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId uint32 `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	// Types that are assignable to OperaValue:
	//
	//	*C2SPetDispatch_PetDispatchGet
	//	*C2SPetDispatch_PetDispatchDo
	//	*C2SPetDispatch_PetDispatchAward
	OperaValue isC2SPetDispatch_OperaValue `protobuf_oneof:"OperaValue"`
}

func (x *C2SPetDispatch) Reset() {
	*x = C2SPetDispatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SPetDispatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SPetDispatch) ProtoMessage() {}

func (x *C2SPetDispatch) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SPetDispatch.ProtoReflect.Descriptor instead.
func (*C2SPetDispatch) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{87}
}

func (x *C2SPetDispatch) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (m *C2SPetDispatch) GetOperaValue() isC2SPetDispatch_OperaValue {
	if m != nil {
		return m.OperaValue
	}
	return nil
}

func (x *C2SPetDispatch) GetPetDispatchGet() *PetDispatchGet {
	if x, ok := x.GetOperaValue().(*C2SPetDispatch_PetDispatchGet); ok {
		return x.PetDispatchGet
	}
	return nil
}

func (x *C2SPetDispatch) GetPetDispatchDo() *PetDispatchDo {
	if x, ok := x.GetOperaValue().(*C2SPetDispatch_PetDispatchDo); ok {
		return x.PetDispatchDo
	}
	return nil
}

func (x *C2SPetDispatch) GetPetDispatchAward() *PetDispatchAward {
	if x, ok := x.GetOperaValue().(*C2SPetDispatch_PetDispatchAward); ok {
		return x.PetDispatchAward
	}
	return nil
}

type isC2SPetDispatch_OperaValue interface {
	isC2SPetDispatch_OperaValue()
}

type C2SPetDispatch_PetDispatchGet struct {
	PetDispatchGet *PetDispatchGet `protobuf:"bytes,2,opt,name=petDispatchGet,proto3,oneof"`
}

type C2SPetDispatch_PetDispatchDo struct {
	PetDispatchDo *PetDispatchDo `protobuf:"bytes,3,opt,name=petDispatchDo,proto3,oneof"`
}

type C2SPetDispatch_PetDispatchAward struct {
	PetDispatchAward *PetDispatchAward `protobuf:"bytes,4,opt,name=petDispatchAward,proto3,oneof"`
}

func (*C2SPetDispatch_PetDispatchGet) isC2SPetDispatch_OperaValue() {}

func (*C2SPetDispatch_PetDispatchDo) isC2SPetDispatch_OperaValue() {}

func (*C2SPetDispatch_PetDispatchAward) isC2SPetDispatch_OperaValue() {}

type PetDispatchAwardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemList    []*ItemInfo `protobuf:"bytes,1,rep,name=itemList,proto3" json:"itemList,omitempty"`
	AddExpList  []uint32    `protobuf:"varint,2,rep,packed,name=AddExpList,proto3" json:"AddExpList,omitempty"`
	PetInfoList []*PetInfo  `protobuf:"bytes,3,rep,name=petInfoList,proto3" json:"petInfoList,omitempty"`
}

func (x *PetDispatchAwardInfo) Reset() {
	*x = PetDispatchAwardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetDispatchAwardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetDispatchAwardInfo) ProtoMessage() {}

func (x *PetDispatchAwardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetDispatchAwardInfo.ProtoReflect.Descriptor instead.
func (*PetDispatchAwardInfo) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{88}
}

func (x *PetDispatchAwardInfo) GetItemList() []*ItemInfo {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *PetDispatchAwardInfo) GetAddExpList() []uint32 {
	if x != nil {
		return x.AddExpList
	}
	return nil
}

func (x *PetDispatchAwardInfo) GetPetInfoList() []*PetInfo {
	if x != nil {
		return x.PetInfoList
	}
	return nil
}

type S2CPetDispatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode          STATUS             `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	UiId             uint32             `protobuf:"varint,2,opt,name=uiId,proto3" json:"uiId,omitempty"`
	PetDispatchInfos []*PetDispatchInfo `protobuf:"bytes,3,rep,name=petDispatchInfos,proto3" json:"petDispatchInfos,omitempty"`
	// Types that are assignable to OperaValue:
	//
	//	*S2CPetDispatch_PetDispatchAwardInfo
	OperaValue isS2CPetDispatch_OperaValue `protobuf_oneof:"OperaValue"`
}

func (x *S2CPetDispatch) Reset() {
	*x = S2CPetDispatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CPetDispatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CPetDispatch) ProtoMessage() {}

func (x *S2CPetDispatch) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CPetDispatch.ProtoReflect.Descriptor instead.
func (*S2CPetDispatch) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{89}
}

func (x *S2CPetDispatch) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CPetDispatch) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2CPetDispatch) GetPetDispatchInfos() []*PetDispatchInfo {
	if x != nil {
		return x.PetDispatchInfos
	}
	return nil
}

func (m *S2CPetDispatch) GetOperaValue() isS2CPetDispatch_OperaValue {
	if m != nil {
		return m.OperaValue
	}
	return nil
}

func (x *S2CPetDispatch) GetPetDispatchAwardInfo() *PetDispatchAwardInfo {
	if x, ok := x.GetOperaValue().(*S2CPetDispatch_PetDispatchAwardInfo); ok {
		return x.PetDispatchAwardInfo
	}
	return nil
}

type isS2CPetDispatch_OperaValue interface {
	isS2CPetDispatch_OperaValue()
}

type S2CPetDispatch_PetDispatchAwardInfo struct {
	PetDispatchAwardInfo *PetDispatchAwardInfo `protobuf:"bytes,4,opt,name=petDispatchAwardInfo,proto3,oneof"`
}

func (*S2CPetDispatch_PetDispatchAwardInfo) isS2CPetDispatch_OperaValue() {}

// 个人累充
type ActReqPersonalCharge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperType uint32 `protobuf:"varint,1,opt,name=operType,proto3" json:"operType,omitempty"` // 1 拉取, 2 领奖, 3 一键领取
	TagretId uint32 `protobuf:"varint,2,opt,name=tagretId,proto3" json:"tagretId,omitempty"` // 领奖配置id
}

func (x *ActReqPersonalCharge) Reset() {
	*x = ActReqPersonalCharge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActReqPersonalCharge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActReqPersonalCharge) ProtoMessage() {}

func (x *ActReqPersonalCharge) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActReqPersonalCharge.ProtoReflect.Descriptor instead.
func (*ActReqPersonalCharge) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{90}
}

func (x *ActReqPersonalCharge) GetOperType() uint32 {
	if x != nil {
		return x.OperType
	}
	return 0
}

func (x *ActReqPersonalCharge) GetTagretId() uint32 {
	if x != nil {
		return x.TagretId
	}
	return 0
}

type ActRspPersonalCharge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperType       uint32 `protobuf:"varint,1,opt,name=operType,proto3" json:"operType,omitempty"`              // 1拉取, 2领奖
	TotalChargeNum uint32 `protobuf:"varint,2,opt,name=totalChargeNum,proto3" json:"totalChargeNum,omitempty"`  // 总充值
	TotalChargeDay uint32 `protobuf:"varint,3,opt,name=totalChargeDay,proto3" json:"totalChargeDay,omitempty"`  // 总充值
	AwardStatus    []bool `protobuf:"varint,4,rep,packed,name=awardStatus,proto3" json:"awardStatus,omitempty"` // 领奖状态(0未领取 1已领取)
}

func (x *ActRspPersonalCharge) Reset() {
	*x = ActRspPersonalCharge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActRspPersonalCharge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActRspPersonalCharge) ProtoMessage() {}

func (x *ActRspPersonalCharge) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActRspPersonalCharge.ProtoReflect.Descriptor instead.
func (*ActRspPersonalCharge) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{91}
}

func (x *ActRspPersonalCharge) GetOperType() uint32 {
	if x != nil {
		return x.OperType
	}
	return 0
}

func (x *ActRspPersonalCharge) GetTotalChargeNum() uint32 {
	if x != nil {
		return x.TotalChargeNum
	}
	return 0
}

func (x *ActRspPersonalCharge) GetTotalChargeDay() uint32 {
	if x != nil {
		return x.TotalChargeDay
	}
	return 0
}

func (x *ActRspPersonalCharge) GetAwardStatus() []bool {
	if x != nil {
		return x.AwardStatus
	}
	return nil
}

// 全服累充
type ActReqGlobalCharge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperType uint32 `protobuf:"varint,1,opt,name=operType,proto3" json:"operType,omitempty"` // 1 拉取, 2 领奖, 3 一键领取
	TagretId uint32 `protobuf:"varint,2,opt,name=tagretId,proto3" json:"tagretId,omitempty"` // 领奖配置id
}

func (x *ActReqGlobalCharge) Reset() {
	*x = ActReqGlobalCharge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActReqGlobalCharge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActReqGlobalCharge) ProtoMessage() {}

func (x *ActReqGlobalCharge) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActReqGlobalCharge.ProtoReflect.Descriptor instead.
func (*ActReqGlobalCharge) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{92}
}

func (x *ActReqGlobalCharge) GetOperType() uint32 {
	if x != nil {
		return x.OperType
	}
	return 0
}

func (x *ActReqGlobalCharge) GetTagretId() uint32 {
	if x != nil {
		return x.TagretId
	}
	return 0
}

type ActRspGlobalCharge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperType       uint32 `protobuf:"varint,1,opt,name=operType,proto3" json:"operType,omitempty"`              // 1拉取, 2领奖
	TotalChargeNum uint32 `protobuf:"varint,2,opt,name=totalChargeNum,proto3" json:"totalChargeNum,omitempty"`  // 总充值金额
	TotalPlayerNum uint32 `protobuf:"varint,3,opt,name=totalPlayerNum,proto3" json:"totalPlayerNum,omitempty"`  // 总充值超过X的认输
	AwardStatus    []bool `protobuf:"varint,4,rep,packed,name=awardStatus,proto3" json:"awardStatus,omitempty"` // 领奖状态(0未领取 1已领取)
}

func (x *ActRspGlobalCharge) Reset() {
	*x = ActRspGlobalCharge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActRspGlobalCharge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActRspGlobalCharge) ProtoMessage() {}

func (x *ActRspGlobalCharge) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActRspGlobalCharge.ProtoReflect.Descriptor instead.
func (*ActRspGlobalCharge) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{93}
}

func (x *ActRspGlobalCharge) GetOperType() uint32 {
	if x != nil {
		return x.OperType
	}
	return 0
}

func (x *ActRspGlobalCharge) GetTotalChargeNum() uint32 {
	if x != nil {
		return x.TotalChargeNum
	}
	return 0
}

func (x *ActRspGlobalCharge) GetTotalPlayerNum() uint32 {
	if x != nil {
		return x.TotalPlayerNum
	}
	return 0
}

func (x *ActRspGlobalCharge) GetAwardStatus() []bool {
	if x != nil {
		return x.AwardStatus
	}
	return nil
}

// 冲级活动
type ActReqLevelUpgrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperType uint32 `protobuf:"varint,1,opt,name=operType,proto3" json:"operType,omitempty"` // 1 拉取, 2 领奖, 3 一键领取
	TagretId uint32 `protobuf:"varint,2,opt,name=tagretId,proto3" json:"tagretId,omitempty"` // 领奖配置id
}

func (x *ActReqLevelUpgrade) Reset() {
	*x = ActReqLevelUpgrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActReqLevelUpgrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActReqLevelUpgrade) ProtoMessage() {}

func (x *ActReqLevelUpgrade) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActReqLevelUpgrade.ProtoReflect.Descriptor instead.
func (*ActReqLevelUpgrade) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{94}
}

func (x *ActReqLevelUpgrade) GetOperType() uint32 {
	if x != nil {
		return x.OperType
	}
	return 0
}

func (x *ActReqLevelUpgrade) GetTagretId() uint32 {
	if x != nil {
		return x.TagretId
	}
	return 0
}

type ActRspLevelUpgrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperType    uint32 `protobuf:"varint,1,opt,name=operType,proto3" json:"operType,omitempty"`              // 1拉取, 2领奖, 3 一键领取
	ExtraUnlock bool   `protobuf:"varint,2,opt,name=extraUnlock,proto3" json:"extraUnlock,omitempty"`        // 额外奖励是否解锁
	AwardStatus []bool `protobuf:"varint,3,rep,packed,name=awardStatus,proto3" json:"awardStatus,omitempty"` // 领奖状态(0未领取 1已领取)
	ExtraStatus []bool `protobuf:"varint,4,rep,packed,name=extraStatus,proto3" json:"extraStatus,omitempty"` // 额外奖励领奖状态(0未领取 1已领取)
}

func (x *ActRspLevelUpgrade) Reset() {
	*x = ActRspLevelUpgrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActRspLevelUpgrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActRspLevelUpgrade) ProtoMessage() {}

func (x *ActRspLevelUpgrade) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActRspLevelUpgrade.ProtoReflect.Descriptor instead.
func (*ActRspLevelUpgrade) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{95}
}

func (x *ActRspLevelUpgrade) GetOperType() uint32 {
	if x != nil {
		return x.OperType
	}
	return 0
}

func (x *ActRspLevelUpgrade) GetExtraUnlock() bool {
	if x != nil {
		return x.ExtraUnlock
	}
	return false
}

func (x *ActRspLevelUpgrade) GetAwardStatus() []bool {
	if x != nil {
		return x.AwardStatus
	}
	return nil
}

func (x *ActRspLevelUpgrade) GetExtraStatus() []bool {
	if x != nil {
		return x.ExtraStatus
	}
	return nil
}

// 战令
type ActTaskPlanQuest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CfgId    uint32 `protobuf:"varint,1,opt,name=cfgId,proto3" json:"cfgId,omitempty"`
	Progress uint32 `protobuf:"varint,3,opt,name=progress,proto3" json:"progress,omitempty"` // 进度
	HasGot   bool   `protobuf:"varint,2,opt,name=hasGot,proto3" json:"hasGot,omitempty"`
}

func (x *ActTaskPlanQuest) Reset() {
	*x = ActTaskPlanQuest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActTaskPlanQuest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActTaskPlanQuest) ProtoMessage() {}

func (x *ActTaskPlanQuest) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActTaskPlanQuest.ProtoReflect.Descriptor instead.
func (*ActTaskPlanQuest) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{96}
}

func (x *ActTaskPlanQuest) GetCfgId() uint32 {
	if x != nil {
		return x.CfgId
	}
	return 0
}

func (x *ActTaskPlanQuest) GetProgress() uint32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *ActTaskPlanQuest) GetHasGot() bool {
	if x != nil {
		return x.HasGot
	}
	return false
}

type ActReqTaskPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperType uint32 `protobuf:"varint,1,opt,name=operType,proto3" json:"operType,omitempty"` // 1 拉取, 2 完成任务, 3领取奖励 , 4 一键完成任务 , 5 一键领取奖励
	TagretId uint32 `protobuf:"varint,2,opt,name=tagretId,proto3" json:"tagretId,omitempty"` // 完成任务/领取奖励配置id
}

func (x *ActReqTaskPlan) Reset() {
	*x = ActReqTaskPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActReqTaskPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActReqTaskPlan) ProtoMessage() {}

func (x *ActReqTaskPlan) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActReqTaskPlan.ProtoReflect.Descriptor instead.
func (*ActReqTaskPlan) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{97}
}

func (x *ActReqTaskPlan) GetOperType() uint32 {
	if x != nil {
		return x.OperType
	}
	return 0
}

func (x *ActReqTaskPlan) GetTagretId() uint32 {
	if x != nil {
		return x.TagretId
	}
	return 0
}

type ActRspTaskPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperType    uint32                      `protobuf:"varint,1,opt,name=operType,proto3" json:"operType,omitempty"` // 1 拉取, 2 完成任务, 3领取奖励 , 4 一键完成任务 , 5 一键领取奖励
	Exp         uint32                      `protobuf:"varint,2,opt,name=exp,proto3" json:"exp,omitempty"`
	ExtraUnlock bool                        `protobuf:"varint,3,opt,name=extraUnlock,proto3" json:"extraUnlock,omitempty"`
	AwardInfo   []*ActDataTaskPlanAwardItem `protobuf:"bytes,4,rep,name=awardInfo,proto3" json:"awardInfo,omitempty"` // 奖励领取数据
	QuestInfo   []*ActTaskPlanQuest         `protobuf:"bytes,5,rep,name=questInfo,proto3" json:"questInfo,omitempty"` // 任务数据
}

func (x *ActRspTaskPlan) Reset() {
	*x = ActRspTaskPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActRspTaskPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActRspTaskPlan) ProtoMessage() {}

func (x *ActRspTaskPlan) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActRspTaskPlan.ProtoReflect.Descriptor instead.
func (*ActRspTaskPlan) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{98}
}

func (x *ActRspTaskPlan) GetOperType() uint32 {
	if x != nil {
		return x.OperType
	}
	return 0
}

func (x *ActRspTaskPlan) GetExp() uint32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *ActRspTaskPlan) GetExtraUnlock() bool {
	if x != nil {
		return x.ExtraUnlock
	}
	return false
}

func (x *ActRspTaskPlan) GetAwardInfo() []*ActDataTaskPlanAwardItem {
	if x != nil {
		return x.AwardInfo
	}
	return nil
}

func (x *ActRspTaskPlan) GetQuestInfo() []*ActTaskPlanQuest {
	if x != nil {
		return x.QuestInfo
	}
	return nil
}

type ActReqSevenDaySign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd SevenDaySignReqType `protobuf:"varint,1,opt,name=cmd,proto3,enum=msg.SevenDaySignReqType" json:"cmd,omitempty"`
}

func (x *ActReqSevenDaySign) Reset() {
	*x = ActReqSevenDaySign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActReqSevenDaySign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActReqSevenDaySign) ProtoMessage() {}

func (x *ActReqSevenDaySign) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActReqSevenDaySign.ProtoReflect.Descriptor instead.
func (*ActReqSevenDaySign) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{99}
}

func (x *ActReqSevenDaySign) GetCmd() SevenDaySignReqType {
	if x != nil {
		return x.Cmd
	}
	return SevenDaySignReqType_SDSR_GET_INFO
}

type ActRspSevenDaySign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ActDataSevenDaySign `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ActRspSevenDaySign) Reset() {
	*x = ActRspSevenDaySign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActRspSevenDaySign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActRspSevenDaySign) ProtoMessage() {}

func (x *ActRspSevenDaySign) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActRspSevenDaySign.ProtoReflect.Descriptor instead.
func (*ActRspSevenDaySign) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{100}
}

func (x *ActRspSevenDaySign) GetData() *ActDataSevenDaySign {
	if x != nil {
		return x.Data
	}
	return nil
}

type ActReqSuperRechargeGift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ActReqSuperRechargeGift) Reset() {
	*x = ActReqSuperRechargeGift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActReqSuperRechargeGift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActReqSuperRechargeGift) ProtoMessage() {}

func (x *ActReqSuperRechargeGift) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActReqSuperRechargeGift.ProtoReflect.Descriptor instead.
func (*ActReqSuperRechargeGift) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{101}
}

type ActRspSuperRechargeGift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ActDataSuperRechargeGift `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ActRspSuperRechargeGift) Reset() {
	*x = ActRspSuperRechargeGift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActRspSuperRechargeGift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActRspSuperRechargeGift) ProtoMessage() {}

func (x *ActRspSuperRechargeGift) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActRspSuperRechargeGift.ProtoReflect.Descriptor instead.
func (*ActRspSuperRechargeGift) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{102}
}

func (x *ActRspSuperRechargeGift) GetData() *ActDataSuperRechargeGift {
	if x != nil {
		return x.Data
	}
	return nil
}

type ActReqTimeLimitedTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperaType ETimeLimitedTaskOperaType `protobuf:"varint,1,opt,name=operaType,proto3,enum=msg.ETimeLimitedTaskOperaType" json:"operaType,omitempty"`
	CfgId     uint32                    `protobuf:"varint,2,opt,name=cfgId,proto3" json:"cfgId,omitempty"` // 领取奖励的id 不用从0开始
}

func (x *ActReqTimeLimitedTask) Reset() {
	*x = ActReqTimeLimitedTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActReqTimeLimitedTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActReqTimeLimitedTask) ProtoMessage() {}

func (x *ActReqTimeLimitedTask) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActReqTimeLimitedTask.ProtoReflect.Descriptor instead.
func (*ActReqTimeLimitedTask) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{103}
}

func (x *ActReqTimeLimitedTask) GetOperaType() ETimeLimitedTaskOperaType {
	if x != nil {
		return x.OperaType
	}
	return ETimeLimitedTaskOperaType_ETLTOY_Invalid
}

func (x *ActReqTimeLimitedTask) GetCfgId() uint32 {
	if x != nil {
		return x.CfgId
	}
	return 0
}

type TimeLimitedTaskItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CfgId  uint32 `protobuf:"varint,1,opt,name=cfgId,proto3" json:"cfgId,omitempty"` // 对应ActTimeLimitTaskQuest中的ID
	Num    uint32 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`     // 该任务进度
	HasGot bool   `protobuf:"varint,3,opt,name=hasGot,proto3" json:"hasGot,omitempty"`
}

func (x *TimeLimitedTaskItemInfo) Reset() {
	*x = TimeLimitedTaskItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeLimitedTaskItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeLimitedTaskItemInfo) ProtoMessage() {}

func (x *TimeLimitedTaskItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeLimitedTaskItemInfo.ProtoReflect.Descriptor instead.
func (*TimeLimitedTaskItemInfo) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{104}
}

func (x *TimeLimitedTaskItemInfo) GetCfgId() uint32 {
	if x != nil {
		return x.CfgId
	}
	return 0
}

func (x *TimeLimitedTaskItemInfo) GetNum() uint32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *TimeLimitedTaskItemInfo) GetHasGot() bool {
	if x != nil {
		return x.HasGot
	}
	return false
}

type ActRspTimeLimitedTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*TimeLimitedTaskItemInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"` // 奖励领取情况
	Score uint32                     `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *ActRspTimeLimitedTask) Reset() {
	*x = ActRspTimeLimitedTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActRspTimeLimitedTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActRspTimeLimitedTask) ProtoMessage() {}

func (x *ActRspTimeLimitedTask) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActRspTimeLimitedTask.ProtoReflect.Descriptor instead.
func (*ActRspTimeLimitedTask) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{105}
}

func (x *ActRspTimeLimitedTask) GetData() []*TimeLimitedTaskItemInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ActRspTimeLimitedTask) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type TaskItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`         // 任务id
	Num    uint64 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`       // 任务进度
	HasGot bool   `protobuf:"varint,3,opt,name=hasGot,proto3" json:"hasGot,omitempty"` // 是否领奖
}

func (x *TaskItemInfo) Reset() {
	*x = TaskItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskItemInfo) ProtoMessage() {}

func (x *TaskItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskItemInfo.ProtoReflect.Descriptor instead.
func (*TaskItemInfo) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{106}
}

func (x *TaskItemInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TaskItemInfo) GetNum() uint64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *TaskItemInfo) GetHasGot() bool {
	if x != nil {
		return x.HasGot
	}
	return false
}

type ActReqDailyTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    DailyTaskReqType `protobuf:"varint,1,opt,name=cmd,proto3,enum=msg.DailyTaskReqType" json:"cmd,omitempty"`
	TaskId uint32           `protobuf:"varint,2,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *ActReqDailyTask) Reset() {
	*x = ActReqDailyTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActReqDailyTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActReqDailyTask) ProtoMessage() {}

func (x *ActReqDailyTask) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActReqDailyTask.ProtoReflect.Descriptor instead.
func (*ActReqDailyTask) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{107}
}

func (x *ActReqDailyTask) GetCmd() DailyTaskReqType {
	if x != nil {
		return x.Cmd
	}
	return DailyTaskReqType_DTRT_Info
}

func (x *ActReqDailyTask) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type ActRspDailyTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*TaskItemInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"` // 任务信息
}

func (x *ActRspDailyTask) Reset() {
	*x = ActRspDailyTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActRspDailyTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActRspDailyTask) ProtoMessage() {}

func (x *ActRspDailyTask) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActRspDailyTask.ProtoReflect.Descriptor instead.
func (*ActRspDailyTask) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{108}
}

func (x *ActRspDailyTask) GetData() []*TaskItemInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ActReqGlobalRebate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    GlobalRebateReqType `protobuf:"varint,1,opt,name=cmd,proto3,enum=msg.GlobalRebateReqType" json:"cmd,omitempty"`
	TaskId uint32              `protobuf:"varint,2,opt,name=taskId,proto3" json:"taskId,omitempty"` // 领取的任务id
}

func (x *ActReqGlobalRebate) Reset() {
	*x = ActReqGlobalRebate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActReqGlobalRebate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActReqGlobalRebate) ProtoMessage() {}

func (x *ActReqGlobalRebate) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActReqGlobalRebate.ProtoReflect.Descriptor instead.
func (*ActReqGlobalRebate) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{109}
}

func (x *ActReqGlobalRebate) GetCmd() GlobalRebateReqType {
	if x != nil {
		return x.Cmd
	}
	return GlobalRebateReqType_GRRT_Info
}

func (x *ActReqGlobalRebate) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type ActRspGlobalRebate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data          *ActDataGlobalRebate `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	GlobalNumCond map[uint32]uint64    `protobuf:"bytes,2,rep,name=globalNumCond,proto3" json:"globalNumCond,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //全服充值人数 <day, num>
	PersonNumCond map[uint32]uint32    `protobuf:"bytes,3,rep,name=personNumCond,proto3" json:"personNumCond,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //个人充值笔数 <day, num>
	CurDay        uint32               `protobuf:"varint,4,opt,name=curDay,proto3" json:"curDay,omitempty"`                                                                                                        //当前天数
}

func (x *ActRspGlobalRebate) Reset() {
	*x = ActRspGlobalRebate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActRspGlobalRebate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActRspGlobalRebate) ProtoMessage() {}

func (x *ActRspGlobalRebate) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActRspGlobalRebate.ProtoReflect.Descriptor instead.
func (*ActRspGlobalRebate) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{110}
}

func (x *ActRspGlobalRebate) GetData() *ActDataGlobalRebate {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ActRspGlobalRebate) GetGlobalNumCond() map[uint32]uint64 {
	if x != nil {
		return x.GlobalNumCond
	}
	return nil
}

func (x *ActRspGlobalRebate) GetPersonNumCond() map[uint32]uint32 {
	if x != nil {
		return x.PersonNumCond
	}
	return nil
}

func (x *ActRspGlobalRebate) GetCurDay() uint32 {
	if x != nil {
		return x.CurDay
	}
	return 0
}

type ActReqTriggerGift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    TriggerGiftReqType `protobuf:"varint,1,opt,name=cmd,proto3,enum=msg.TriggerGiftReqType" json:"cmd,omitempty"`
	GiftId uint32             `protobuf:"varint,2,opt,name=giftId,proto3" json:"giftId,omitempty"` // 触发的礼包id
}

func (x *ActReqTriggerGift) Reset() {
	*x = ActReqTriggerGift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActReqTriggerGift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActReqTriggerGift) ProtoMessage() {}

func (x *ActReqTriggerGift) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActReqTriggerGift.ProtoReflect.Descriptor instead.
func (*ActReqTriggerGift) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{111}
}

func (x *ActReqTriggerGift) GetCmd() TriggerGiftReqType {
	if x != nil {
		return x.Cmd
	}
	return TriggerGiftReqType_TGRT_Info
}

func (x *ActReqTriggerGift) GetGiftId() uint32 {
	if x != nil {
		return x.GiftId
	}
	return 0
}

type ActRspTriggerGift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      *ActDataTriggerGift `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Triggered bool                `protobuf:"varint,2,opt,name=triggered,proto3" json:"triggered,omitempty"` // 是否触发成功（不满足触发条件时，返回false，柔性处理，避免提示错误）
}

func (x *ActRspTriggerGift) Reset() {
	*x = ActRspTriggerGift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActRspTriggerGift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActRspTriggerGift) ProtoMessage() {}

func (x *ActRspTriggerGift) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActRspTriggerGift.ProtoReflect.Descriptor instead.
func (*ActRspTriggerGift) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{112}
}

func (x *ActRspTriggerGift) GetData() *ActDataTriggerGift {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ActRspTriggerGift) GetTriggered() bool {
	if x != nil {
		return x.Triggered
	}
	return false
}

type ActReqFoundationInvest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    FoundationInvestReqType `protobuf:"varint,1,opt,name=cmd,proto3,enum=msg.FoundationInvestReqType" json:"cmd,omitempty"`
	TaskId uint32                  `protobuf:"varint,2,opt,name=taskId,proto3" json:"taskId,omitempty"` // 领取的任务id
}

func (x *ActReqFoundationInvest) Reset() {
	*x = ActReqFoundationInvest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActReqFoundationInvest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActReqFoundationInvest) ProtoMessage() {}

func (x *ActReqFoundationInvest) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActReqFoundationInvest.ProtoReflect.Descriptor instead.
func (*ActReqFoundationInvest) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{113}
}

func (x *ActReqFoundationInvest) GetCmd() FoundationInvestReqType {
	if x != nil {
		return x.Cmd
	}
	return FoundationInvestReqType_FGRT_Info
}

func (x *ActReqFoundationInvest) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type ActRspFoundationInvest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ActDataFoundationInvest `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ActRspFoundationInvest) Reset() {
	*x = ActRspFoundationInvest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActRspFoundationInvest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActRspFoundationInvest) ProtoMessage() {}

func (x *ActRspFoundationInvest) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActRspFoundationInvest.ProtoReflect.Descriptor instead.
func (*ActRspFoundationInvest) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{114}
}

func (x *ActRspFoundationInvest) GetData() *ActDataFoundationInvest {
	if x != nil {
		return x.Data
	}
	return nil
}

// 兑换码礼包
type ActReqExchangeCodeGift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *ActReqExchangeCodeGift) Reset() {
	*x = ActReqExchangeCodeGift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActReqExchangeCodeGift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActReqExchangeCodeGift) ProtoMessage() {}

func (x *ActReqExchangeCodeGift) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActReqExchangeCodeGift.ProtoReflect.Descriptor instead.
func (*ActReqExchangeCodeGift) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{115}
}

func (x *ActReqExchangeCodeGift) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ActRspExchangeCodeGift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ActRspExchangeCodeGift) Reset() {
	*x = ActRspExchangeCodeGift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActRspExchangeCodeGift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActRspExchangeCodeGift) ProtoMessage() {}

func (x *ActRspExchangeCodeGift) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActRspExchangeCodeGift.ProtoReflect.Descriptor instead.
func (*ActRspExchangeCodeGift) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{116}
}

type C2SActivityOpera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId    uint32        `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	ActType EActivityType `protobuf:"varint,2,opt,name=actType,proto3,enum=model.EActivityType" json:"actType,omitempty"` // 活动类型
	// Types that are assignable to ActReq:
	//
	//	*C2SActivityOpera_ReqPersonalCharge
	//	*C2SActivityOpera_ReqGlobalCharge
	//	*C2SActivityOpera_ReqLevelUpgrade
	//	*C2SActivityOpera_ReqTaskPlan
	//	*C2SActivityOpera_ReqSevenDaySign
	//	*C2SActivityOpera_ReqSuperRechargeGift
	//	*C2SActivityOpera_ReqTimeLimitedTask
	//	*C2SActivityOpera_ReqDailyTask
	//	*C2SActivityOpera_ReqGlobalRebate
	//	*C2SActivityOpera_ReqTriggerGift
	//	*C2SActivityOpera_ReqFoundationInvest
	//	*C2SActivityOpera_ReqExchangeCodeGift
	ActReq isC2SActivityOpera_ActReq `protobuf_oneof:"ActReq"`
}

func (x *C2SActivityOpera) Reset() {
	*x = C2SActivityOpera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SActivityOpera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SActivityOpera) ProtoMessage() {}

func (x *C2SActivityOpera) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SActivityOpera.ProtoReflect.Descriptor instead.
func (*C2SActivityOpera) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{117}
}

func (x *C2SActivityOpera) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SActivityOpera) GetActType() EActivityType {
	if x != nil {
		return x.ActType
	}
	return EActivityType_EAT_Invalid
}

func (m *C2SActivityOpera) GetActReq() isC2SActivityOpera_ActReq {
	if m != nil {
		return m.ActReq
	}
	return nil
}

func (x *C2SActivityOpera) GetReqPersonalCharge() *ActReqPersonalCharge {
	if x, ok := x.GetActReq().(*C2SActivityOpera_ReqPersonalCharge); ok {
		return x.ReqPersonalCharge
	}
	return nil
}

func (x *C2SActivityOpera) GetReqGlobalCharge() *ActReqGlobalCharge {
	if x, ok := x.GetActReq().(*C2SActivityOpera_ReqGlobalCharge); ok {
		return x.ReqGlobalCharge
	}
	return nil
}

func (x *C2SActivityOpera) GetReqLevelUpgrade() *ActReqLevelUpgrade {
	if x, ok := x.GetActReq().(*C2SActivityOpera_ReqLevelUpgrade); ok {
		return x.ReqLevelUpgrade
	}
	return nil
}

func (x *C2SActivityOpera) GetReqTaskPlan() *ActReqTaskPlan {
	if x, ok := x.GetActReq().(*C2SActivityOpera_ReqTaskPlan); ok {
		return x.ReqTaskPlan
	}
	return nil
}

func (x *C2SActivityOpera) GetReqSevenDaySign() *ActReqSevenDaySign {
	if x, ok := x.GetActReq().(*C2SActivityOpera_ReqSevenDaySign); ok {
		return x.ReqSevenDaySign
	}
	return nil
}

func (x *C2SActivityOpera) GetReqSuperRechargeGift() *ActReqSuperRechargeGift {
	if x, ok := x.GetActReq().(*C2SActivityOpera_ReqSuperRechargeGift); ok {
		return x.ReqSuperRechargeGift
	}
	return nil
}

func (x *C2SActivityOpera) GetReqTimeLimitedTask() *ActReqTimeLimitedTask {
	if x, ok := x.GetActReq().(*C2SActivityOpera_ReqTimeLimitedTask); ok {
		return x.ReqTimeLimitedTask
	}
	return nil
}

func (x *C2SActivityOpera) GetReqDailyTask() *ActReqDailyTask {
	if x, ok := x.GetActReq().(*C2SActivityOpera_ReqDailyTask); ok {
		return x.ReqDailyTask
	}
	return nil
}

func (x *C2SActivityOpera) GetReqGlobalRebate() *ActReqGlobalRebate {
	if x, ok := x.GetActReq().(*C2SActivityOpera_ReqGlobalRebate); ok {
		return x.ReqGlobalRebate
	}
	return nil
}

func (x *C2SActivityOpera) GetReqTriggerGift() *ActReqTriggerGift {
	if x, ok := x.GetActReq().(*C2SActivityOpera_ReqTriggerGift); ok {
		return x.ReqTriggerGift
	}
	return nil
}

func (x *C2SActivityOpera) GetReqFoundationInvest() *ActReqFoundationInvest {
	if x, ok := x.GetActReq().(*C2SActivityOpera_ReqFoundationInvest); ok {
		return x.ReqFoundationInvest
	}
	return nil
}

func (x *C2SActivityOpera) GetReqExchangeCodeGift() *ActReqExchangeCodeGift {
	if x, ok := x.GetActReq().(*C2SActivityOpera_ReqExchangeCodeGift); ok {
		return x.ReqExchangeCodeGift
	}
	return nil
}

type isC2SActivityOpera_ActReq interface {
	isC2SActivityOpera_ActReq()
}

type C2SActivityOpera_ReqPersonalCharge struct {
	ReqPersonalCharge *ActReqPersonalCharge `protobuf:"bytes,11,opt,name=reqPersonalCharge,proto3,oneof"` // 个人累充
}

type C2SActivityOpera_ReqGlobalCharge struct {
	ReqGlobalCharge *ActReqGlobalCharge `protobuf:"bytes,12,opt,name=reqGlobalCharge,proto3,oneof"` // 全服累充
}

type C2SActivityOpera_ReqLevelUpgrade struct {
	ReqLevelUpgrade *ActReqLevelUpgrade `protobuf:"bytes,13,opt,name=reqLevelUpgrade,proto3,oneof"` // 冲级活动
}

type C2SActivityOpera_ReqTaskPlan struct {
	ReqTaskPlan *ActReqTaskPlan `protobuf:"bytes,14,opt,name=reqTaskPlan,proto3,oneof"` // 战令
}

type C2SActivityOpera_ReqSevenDaySign struct {
	ReqSevenDaySign *ActReqSevenDaySign `protobuf:"bytes,15,opt,name=reqSevenDaySign,proto3,oneof"` //七日签到
}

type C2SActivityOpera_ReqSuperRechargeGift struct {
	ReqSuperRechargeGift *ActReqSuperRechargeGift `protobuf:"bytes,16,opt,name=reqSuperRechargeGift,proto3,oneof"` //超值充值礼包
}

type C2SActivityOpera_ReqTimeLimitedTask struct {
	ReqTimeLimitedTask *ActReqTimeLimitedTask `protobuf:"bytes,17,opt,name=reqTimeLimitedTask,proto3,oneof"` //限时任务
}

type C2SActivityOpera_ReqDailyTask struct {
	ReqDailyTask *ActReqDailyTask `protobuf:"bytes,18,opt,name=reqDailyTask,proto3,oneof"` //每日签到
}

type C2SActivityOpera_ReqGlobalRebate struct {
	ReqGlobalRebate *ActReqGlobalRebate `protobuf:"bytes,19,opt,name=reqGlobalRebate,proto3,oneof"` //全民返利
}

type C2SActivityOpera_ReqTriggerGift struct {
	ReqTriggerGift *ActReqTriggerGift `protobuf:"bytes,20,opt,name=reqTriggerGift,proto3,oneof"` //触发礼包
}

type C2SActivityOpera_ReqFoundationInvest struct {
	ReqFoundationInvest *ActReqFoundationInvest `protobuf:"bytes,21,opt,name=reqFoundationInvest,proto3,oneof"` //基金投资
}

type C2SActivityOpera_ReqExchangeCodeGift struct {
	ReqExchangeCodeGift *ActReqExchangeCodeGift `protobuf:"bytes,22,opt,name=reqExchangeCodeGift,proto3,oneof"` //兑换码礼包
}

func (*C2SActivityOpera_ReqPersonalCharge) isC2SActivityOpera_ActReq() {}

func (*C2SActivityOpera_ReqGlobalCharge) isC2SActivityOpera_ActReq() {}

func (*C2SActivityOpera_ReqLevelUpgrade) isC2SActivityOpera_ActReq() {}

func (*C2SActivityOpera_ReqTaskPlan) isC2SActivityOpera_ActReq() {}

func (*C2SActivityOpera_ReqSevenDaySign) isC2SActivityOpera_ActReq() {}

func (*C2SActivityOpera_ReqSuperRechargeGift) isC2SActivityOpera_ActReq() {}

func (*C2SActivityOpera_ReqTimeLimitedTask) isC2SActivityOpera_ActReq() {}

func (*C2SActivityOpera_ReqDailyTask) isC2SActivityOpera_ActReq() {}

func (*C2SActivityOpera_ReqGlobalRebate) isC2SActivityOpera_ActReq() {}

func (*C2SActivityOpera_ReqTriggerGift) isC2SActivityOpera_ActReq() {}

func (*C2SActivityOpera_ReqFoundationInvest) isC2SActivityOpera_ActReq() {}

func (*C2SActivityOpera_ReqExchangeCodeGift) isC2SActivityOpera_ActReq() {}

type S2CActivityOpera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode STATUS        `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	UiId    uint32        `protobuf:"varint,2,opt,name=uiId,proto3" json:"uiId,omitempty"`
	ActType EActivityType `protobuf:"varint,3,opt,name=actType,proto3,enum=model.EActivityType" json:"actType,omitempty"` // 活动类型
	// Types that are assignable to ActRsp:
	//
	//	*S2CActivityOpera_RspPersonalCharge
	//	*S2CActivityOpera_RspGlobalCharge
	//	*S2CActivityOpera_RspLevelUpgrade
	//	*S2CActivityOpera_RspTaskPlan
	//	*S2CActivityOpera_RspSevenDaySign
	//	*S2CActivityOpera_RspSuperRechargeGift
	//	*S2CActivityOpera_RspTimeLimitedTask
	//	*S2CActivityOpera_RspDailyTask
	//	*S2CActivityOpera_RspGlobalRebate
	//	*S2CActivityOpera_RspTriggerGift
	//	*S2CActivityOpera_RspFoundationInvest
	//	*S2CActivityOpera_RspExchangeCodeGift
	ActRsp isS2CActivityOpera_ActRsp `protobuf_oneof:"ActRsp"`
}

func (x *S2CActivityOpera) Reset() {
	*x = S2CActivityOpera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CActivityOpera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CActivityOpera) ProtoMessage() {}

func (x *S2CActivityOpera) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CActivityOpera.ProtoReflect.Descriptor instead.
func (*S2CActivityOpera) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{118}
}

func (x *S2CActivityOpera) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CActivityOpera) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2CActivityOpera) GetActType() EActivityType {
	if x != nil {
		return x.ActType
	}
	return EActivityType_EAT_Invalid
}

func (m *S2CActivityOpera) GetActRsp() isS2CActivityOpera_ActRsp {
	if m != nil {
		return m.ActRsp
	}
	return nil
}

func (x *S2CActivityOpera) GetRspPersonalCharge() *ActRspPersonalCharge {
	if x, ok := x.GetActRsp().(*S2CActivityOpera_RspPersonalCharge); ok {
		return x.RspPersonalCharge
	}
	return nil
}

func (x *S2CActivityOpera) GetRspGlobalCharge() *ActRspGlobalCharge {
	if x, ok := x.GetActRsp().(*S2CActivityOpera_RspGlobalCharge); ok {
		return x.RspGlobalCharge
	}
	return nil
}

func (x *S2CActivityOpera) GetRspLevelUpgrade() *ActRspLevelUpgrade {
	if x, ok := x.GetActRsp().(*S2CActivityOpera_RspLevelUpgrade); ok {
		return x.RspLevelUpgrade
	}
	return nil
}

func (x *S2CActivityOpera) GetRspTaskPlan() *ActRspTaskPlan {
	if x, ok := x.GetActRsp().(*S2CActivityOpera_RspTaskPlan); ok {
		return x.RspTaskPlan
	}
	return nil
}

func (x *S2CActivityOpera) GetRspSevenDaySign() *ActRspSevenDaySign {
	if x, ok := x.GetActRsp().(*S2CActivityOpera_RspSevenDaySign); ok {
		return x.RspSevenDaySign
	}
	return nil
}

func (x *S2CActivityOpera) GetRspSuperRechargeGift() *ActRspSuperRechargeGift {
	if x, ok := x.GetActRsp().(*S2CActivityOpera_RspSuperRechargeGift); ok {
		return x.RspSuperRechargeGift
	}
	return nil
}

func (x *S2CActivityOpera) GetRspTimeLimitedTask() *ActRspTimeLimitedTask {
	if x, ok := x.GetActRsp().(*S2CActivityOpera_RspTimeLimitedTask); ok {
		return x.RspTimeLimitedTask
	}
	return nil
}

func (x *S2CActivityOpera) GetRspDailyTask() *ActRspDailyTask {
	if x, ok := x.GetActRsp().(*S2CActivityOpera_RspDailyTask); ok {
		return x.RspDailyTask
	}
	return nil
}

func (x *S2CActivityOpera) GetRspGlobalRebate() *ActRspGlobalRebate {
	if x, ok := x.GetActRsp().(*S2CActivityOpera_RspGlobalRebate); ok {
		return x.RspGlobalRebate
	}
	return nil
}

func (x *S2CActivityOpera) GetRspTriggerGift() *ActRspTriggerGift {
	if x, ok := x.GetActRsp().(*S2CActivityOpera_RspTriggerGift); ok {
		return x.RspTriggerGift
	}
	return nil
}

func (x *S2CActivityOpera) GetRspFoundationInvest() *ActRspFoundationInvest {
	if x, ok := x.GetActRsp().(*S2CActivityOpera_RspFoundationInvest); ok {
		return x.RspFoundationInvest
	}
	return nil
}

func (x *S2CActivityOpera) GetRspExchangeCodeGift() *ActRspExchangeCodeGift {
	if x, ok := x.GetActRsp().(*S2CActivityOpera_RspExchangeCodeGift); ok {
		return x.RspExchangeCodeGift
	}
	return nil
}

type isS2CActivityOpera_ActRsp interface {
	isS2CActivityOpera_ActRsp()
}

type S2CActivityOpera_RspPersonalCharge struct {
	RspPersonalCharge *ActRspPersonalCharge `protobuf:"bytes,11,opt,name=rspPersonalCharge,proto3,oneof"` // 个人累充
}

type S2CActivityOpera_RspGlobalCharge struct {
	RspGlobalCharge *ActRspGlobalCharge `protobuf:"bytes,12,opt,name=rspGlobalCharge,proto3,oneof"` // 全服累充
}

type S2CActivityOpera_RspLevelUpgrade struct {
	RspLevelUpgrade *ActRspLevelUpgrade `protobuf:"bytes,13,opt,name=rspLevelUpgrade,proto3,oneof"` // 冲级活动
}

type S2CActivityOpera_RspTaskPlan struct {
	RspTaskPlan *ActRspTaskPlan `protobuf:"bytes,14,opt,name=rspTaskPlan,proto3,oneof"` // 战令
}

type S2CActivityOpera_RspSevenDaySign struct {
	RspSevenDaySign *ActRspSevenDaySign `protobuf:"bytes,15,opt,name=rspSevenDaySign,proto3,oneof"` //七日签到
}

type S2CActivityOpera_RspSuperRechargeGift struct {
	RspSuperRechargeGift *ActRspSuperRechargeGift `protobuf:"bytes,16,opt,name=rspSuperRechargeGift,proto3,oneof"` //超值充值礼包
}

type S2CActivityOpera_RspTimeLimitedTask struct {
	RspTimeLimitedTask *ActRspTimeLimitedTask `protobuf:"bytes,17,opt,name=rspTimeLimitedTask,proto3,oneof"` // 限时任务
}

type S2CActivityOpera_RspDailyTask struct {
	RspDailyTask *ActRspDailyTask `protobuf:"bytes,18,opt,name=rspDailyTask,proto3,oneof"` //每日签到
}

type S2CActivityOpera_RspGlobalRebate struct {
	RspGlobalRebate *ActRspGlobalRebate `protobuf:"bytes,19,opt,name=rspGlobalRebate,proto3,oneof"` //全民返利
}

type S2CActivityOpera_RspTriggerGift struct {
	RspTriggerGift *ActRspTriggerGift `protobuf:"bytes,20,opt,name=rspTriggerGift,proto3,oneof"` //触发礼包
}

type S2CActivityOpera_RspFoundationInvest struct {
	RspFoundationInvest *ActRspFoundationInvest `protobuf:"bytes,21,opt,name=rspFoundationInvest,proto3,oneof"` //基金投资
}

type S2CActivityOpera_RspExchangeCodeGift struct {
	RspExchangeCodeGift *ActRspExchangeCodeGift `protobuf:"bytes,22,opt,name=rspExchangeCodeGift,proto3,oneof"` //兑换码礼包
}

func (*S2CActivityOpera_RspPersonalCharge) isS2CActivityOpera_ActRsp() {}

func (*S2CActivityOpera_RspGlobalCharge) isS2CActivityOpera_ActRsp() {}

func (*S2CActivityOpera_RspLevelUpgrade) isS2CActivityOpera_ActRsp() {}

func (*S2CActivityOpera_RspTaskPlan) isS2CActivityOpera_ActRsp() {}

func (*S2CActivityOpera_RspSevenDaySign) isS2CActivityOpera_ActRsp() {}

func (*S2CActivityOpera_RspSuperRechargeGift) isS2CActivityOpera_ActRsp() {}

func (*S2CActivityOpera_RspTimeLimitedTask) isS2CActivityOpera_ActRsp() {}

func (*S2CActivityOpera_RspDailyTask) isS2CActivityOpera_ActRsp() {}

func (*S2CActivityOpera_RspGlobalRebate) isS2CActivityOpera_ActRsp() {}

func (*S2CActivityOpera_RspTriggerGift) isS2CActivityOpera_ActRsp() {}

func (*S2CActivityOpera_RspFoundationInvest) isS2CActivityOpera_ActRsp() {}

func (*S2CActivityOpera_RspExchangeCodeGift) isS2CActivityOpera_ActRsp() {}

type TaskActivityGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskActivityGetReq) Reset() {
	*x = TaskActivityGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskActivityGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskActivityGetReq) ProtoMessage() {}

func (x *TaskActivityGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskActivityGetReq.ProtoReflect.Descriptor instead.
func (*TaskActivityGetReq) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{119}
}

type TaskActivityRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId uint32 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"` // taskId为0的时候代表是一键领取
}

func (x *TaskActivityRewardReq) Reset() {
	*x = TaskActivityRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskActivityRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskActivityRewardReq) ProtoMessage() {}

func (x *TaskActivityRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskActivityRewardReq.ProtoReflect.Descriptor instead.
func (*TaskActivityRewardReq) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{120}
}

func (x *TaskActivityRewardReq) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type C2STaskActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId uint32 `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	// Types that are assignable to OperaValue:
	//
	//	*C2STaskActivity_TaskActivityGetReq
	//	*C2STaskActivity_TaskActivityRewardReq
	OperaValue isC2STaskActivity_OperaValue `protobuf_oneof:"OperaValue"`
}

func (x *C2STaskActivity) Reset() {
	*x = C2STaskActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2STaskActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2STaskActivity) ProtoMessage() {}

func (x *C2STaskActivity) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2STaskActivity.ProtoReflect.Descriptor instead.
func (*C2STaskActivity) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{121}
}

func (x *C2STaskActivity) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (m *C2STaskActivity) GetOperaValue() isC2STaskActivity_OperaValue {
	if m != nil {
		return m.OperaValue
	}
	return nil
}

func (x *C2STaskActivity) GetTaskActivityGetReq() *TaskActivityGetReq {
	if x, ok := x.GetOperaValue().(*C2STaskActivity_TaskActivityGetReq); ok {
		return x.TaskActivityGetReq
	}
	return nil
}

func (x *C2STaskActivity) GetTaskActivityRewardReq() *TaskActivityRewardReq {
	if x, ok := x.GetOperaValue().(*C2STaskActivity_TaskActivityRewardReq); ok {
		return x.TaskActivityRewardReq
	}
	return nil
}

type isC2STaskActivity_OperaValue interface {
	isC2STaskActivity_OperaValue()
}

type C2STaskActivity_TaskActivityGetReq struct {
	TaskActivityGetReq *TaskActivityGetReq `protobuf:"bytes,2,opt,name=taskActivityGetReq,proto3,oneof"`
}

type C2STaskActivity_TaskActivityRewardReq struct {
	TaskActivityRewardReq *TaskActivityRewardReq `protobuf:"bytes,3,opt,name=taskActivityRewardReq,proto3,oneof"`
}

func (*C2STaskActivity_TaskActivityGetReq) isC2STaskActivity_OperaValue() {}

func (*C2STaskActivity_TaskActivityRewardReq) isC2STaskActivity_OperaValue() {}

type TaskActivityGetRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskActivityGetRsp) Reset() {
	*x = TaskActivityGetRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskActivityGetRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskActivityGetRsp) ProtoMessage() {}

func (x *TaskActivityGetRsp) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskActivityGetRsp.ProtoReflect.Descriptor instead.
func (*TaskActivityGetRsp) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{122}
}

type TaskActivityRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId uint32 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"` // taskId为0的时候代表是一键领取
}

func (x *TaskActivityRewardRsp) Reset() {
	*x = TaskActivityRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskActivityRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskActivityRewardRsp) ProtoMessage() {}

func (x *TaskActivityRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskActivityRewardRsp.ProtoReflect.Descriptor instead.
func (*TaskActivityRewardRsp) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{123}
}

func (x *TaskActivityRewardRsp) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type S2CTaskActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId uint32 `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	// Types that are assignable to OperaValue:
	//
	//	*S2CTaskActivity_TaskActivityGetRsp
	//	*S2CTaskActivity_TaskActivityRewardRsp
	OperaValue isS2CTaskActivity_OperaValue `protobuf_oneof:"OperaValue"`
}

func (x *S2CTaskActivity) Reset() {
	*x = S2CTaskActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CTaskActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CTaskActivity) ProtoMessage() {}

func (x *S2CTaskActivity) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CTaskActivity.ProtoReflect.Descriptor instead.
func (*S2CTaskActivity) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{124}
}

func (x *S2CTaskActivity) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (m *S2CTaskActivity) GetOperaValue() isS2CTaskActivity_OperaValue {
	if m != nil {
		return m.OperaValue
	}
	return nil
}

func (x *S2CTaskActivity) GetTaskActivityGetRsp() *TaskActivityGetRsp {
	if x, ok := x.GetOperaValue().(*S2CTaskActivity_TaskActivityGetRsp); ok {
		return x.TaskActivityGetRsp
	}
	return nil
}

func (x *S2CTaskActivity) GetTaskActivityRewardRsp() *TaskActivityRewardRsp {
	if x, ok := x.GetOperaValue().(*S2CTaskActivity_TaskActivityRewardRsp); ok {
		return x.TaskActivityRewardRsp
	}
	return nil
}

type isS2CTaskActivity_OperaValue interface {
	isS2CTaskActivity_OperaValue()
}

type S2CTaskActivity_TaskActivityGetRsp struct {
	TaskActivityGetRsp *TaskActivityGetRsp `protobuf:"bytes,2,opt,name=taskActivityGetRsp,proto3,oneof"`
}

type S2CTaskActivity_TaskActivityRewardRsp struct {
	TaskActivityRewardRsp *TaskActivityRewardRsp `protobuf:"bytes,3,opt,name=taskActivityRewardRsp,proto3,oneof"`
}

func (*S2CTaskActivity_TaskActivityGetRsp) isS2CTaskActivity_OperaValue() {}

func (*S2CTaskActivity_TaskActivityRewardRsp) isS2CTaskActivity_OperaValue() {}

// 月卡领奖
type C2SMonthSupply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId     uint32 `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	OperType uint32 `protobuf:"varint,2,opt,name=operType,proto3" json:"operType,omitempty"` // 1 当日领奖
}

func (x *C2SMonthSupply) Reset() {
	*x = C2SMonthSupply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SMonthSupply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SMonthSupply) ProtoMessage() {}

func (x *C2SMonthSupply) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SMonthSupply.ProtoReflect.Descriptor instead.
func (*C2SMonthSupply) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{125}
}

func (x *C2SMonthSupply) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SMonthSupply) GetOperType() uint32 {
	if x != nil {
		return x.OperType
	}
	return 0
}

type S2CMonthSupply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode             STATUS `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	UiId                uint32 `protobuf:"varint,2,opt,name=uiId,proto3" json:"uiId,omitempty"`
	SupplyGetRewardTime uint32 `protobuf:"varint,3,opt,name=supplyGetRewardTime,proto3" json:"supplyGetRewardTime,omitempty"` // 领奖时间
}

func (x *S2CMonthSupply) Reset() {
	*x = S2CMonthSupply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CMonthSupply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CMonthSupply) ProtoMessage() {}

func (x *S2CMonthSupply) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CMonthSupply.ProtoReflect.Descriptor instead.
func (*S2CMonthSupply) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{126}
}

func (x *S2CMonthSupply) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CMonthSupply) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2CMonthSupply) GetSupplyGetRewardTime() uint32 {
	if x != nil {
		return x.SupplyGetRewardTime
	}
	return 0
}

// 拉取活动配置
type C2SFetchActCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId uint32 `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
}

func (x *C2SFetchActCfg) Reset() {
	*x = C2SFetchActCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SFetchActCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SFetchActCfg) ProtoMessage() {}

func (x *C2SFetchActCfg) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SFetchActCfg.ProtoReflect.Descriptor instead.
func (*C2SFetchActCfg) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{127}
}

func (x *C2SFetchActCfg) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

type S2CFetchActCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode     STATUS            `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	UiId        uint32            `protobuf:"varint,2,opt,name=uiId,proto3" json:"uiId,omitempty"`
	ActCfgList  []*ActivityCfg    `protobuf:"bytes,3,rep,name=actCfgList,proto3" json:"actCfgList,omitempty"`
	ActTimeList []*ActTimeSection `protobuf:"bytes,4,rep,name=actTimeList,proto3" json:"actTimeList,omitempty"`
}

func (x *S2CFetchActCfg) Reset() {
	*x = S2CFetchActCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CFetchActCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CFetchActCfg) ProtoMessage() {}

func (x *S2CFetchActCfg) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CFetchActCfg.ProtoReflect.Descriptor instead.
func (*S2CFetchActCfg) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{128}
}

func (x *S2CFetchActCfg) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CFetchActCfg) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2CFetchActCfg) GetActCfgList() []*ActivityCfg {
	if x != nil {
		return x.ActCfgList
	}
	return nil
}

func (x *S2CFetchActCfg) GetActTimeList() []*ActTimeSection {
	if x != nil {
		return x.ActTimeList
	}
	return nil
}

type RankInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank  uint32 `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`   // 排名
	Uid   string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`      // 玩家uid
	Score uint32 `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"` // 值
}

func (x *RankInfo) Reset() {
	*x = RankInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankInfo) ProtoMessage() {}

func (x *RankInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankInfo.ProtoReflect.Descriptor instead.
func (*RankInfo) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{129}
}

func (x *RankInfo) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *RankInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *RankInfo) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type C2SRankOpera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId      uint32   `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	RankType  RankType `protobuf:"varint,2,opt,name=rankType,proto3,enum=msg.RankType" json:"rankType,omitempty"`
	RankStart uint32   `protobuf:"varint,3,opt,name=rankStart,proto3" json:"rankStart,omitempty"` // 排名开始
	RankEnd   uint32   `protobuf:"varint,4,opt,name=rankEnd,proto3" json:"rankEnd,omitempty"`     // 排名结束
	LastRank  bool     `protobuf:"varint,5,opt,name=lastRank,proto3" json:"lastRank,omitempty"`   // 上一周期榜单
}

func (x *C2SRankOpera) Reset() {
	*x = C2SRankOpera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SRankOpera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SRankOpera) ProtoMessage() {}

func (x *C2SRankOpera) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SRankOpera.ProtoReflect.Descriptor instead.
func (*C2SRankOpera) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{130}
}

func (x *C2SRankOpera) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SRankOpera) GetRankType() RankType {
	if x != nil {
		return x.RankType
	}
	return RankType_RankTypeInvalid
}

func (x *C2SRankOpera) GetRankStart() uint32 {
	if x != nil {
		return x.RankStart
	}
	return 0
}

func (x *C2SRankOpera) GetRankEnd() uint32 {
	if x != nil {
		return x.RankEnd
	}
	return 0
}

func (x *C2SRankOpera) GetLastRank() bool {
	if x != nil {
		return x.LastRank
	}
	return false
}

type S2CRankOpera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode      STATUS      `protobuf:"varint,1,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	UiId         uint32      `protobuf:"varint,2,opt,name=uiId,proto3" json:"uiId,omitempty"`
	RankType     RankType    `protobuf:"varint,3,opt,name=rankType,proto3,enum=msg.RankType" json:"rankType,omitempty"`
	RankInfoList []*RankInfo `protobuf:"bytes,4,rep,name=rankInfoList,proto3" json:"rankInfoList,omitempty"`
	SelfRankInfo *RankInfo   `protobuf:"bytes,5,opt,name=selfRankInfo,proto3" json:"selfRankInfo,omitempty"` // 自己排名信息
	TotalCount   uint32      `protobuf:"varint,6,opt,name=totalCount,proto3" json:"totalCount,omitempty"`    //榜单总数量
}

func (x *S2CRankOpera) Reset() {
	*x = S2CRankOpera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CRankOpera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CRankOpera) ProtoMessage() {}

func (x *S2CRankOpera) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CRankOpera.ProtoReflect.Descriptor instead.
func (*S2CRankOpera) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{131}
}

func (x *S2CRankOpera) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CRankOpera) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2CRankOpera) GetRankType() RankType {
	if x != nil {
		return x.RankType
	}
	return RankType_RankTypeInvalid
}

func (x *S2CRankOpera) GetRankInfoList() []*RankInfo {
	if x != nil {
		return x.RankInfoList
	}
	return nil
}

func (x *S2CRankOpera) GetSelfRankInfo() *RankInfo {
	if x != nil {
		return x.SelfRankInfo
	}
	return nil
}

func (x *S2CRankOpera) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type NotifyUserDataChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        string          `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"` // 玩家uid
	NotifyType ENotifyDataType `protobuf:"varint,2,opt,name=notifyType,proto3,enum=msg.ENotifyDataType" json:"notifyType,omitempty"`
	Value1     int64           `protobuf:"varint,3,opt,name=value1,proto3" json:"value1,omitempty"`
	Value2     int64           `protobuf:"varint,4,opt,name=value2,proto3" json:"value2,omitempty"`
}

func (x *NotifyUserDataChange) Reset() {
	*x = NotifyUserDataChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyUserDataChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyUserDataChange) ProtoMessage() {}

func (x *NotifyUserDataChange) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyUserDataChange.ProtoReflect.Descriptor instead.
func (*NotifyUserDataChange) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{132}
}

func (x *NotifyUserDataChange) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *NotifyUserDataChange) GetNotifyType() ENotifyDataType {
	if x != nil {
		return x.NotifyType
	}
	return ENotifyDataType_ENDT_FirstChargeTime
}

func (x *NotifyUserDataChange) GetValue1() int64 {
	if x != nil {
		return x.Value1
	}
	return 0
}

func (x *NotifyUserDataChange) GetValue2() int64 {
	if x != nil {
		return x.Value2
	}
	return 0
}

type OpenOperaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemInfo []*ItemInfo `protobuf:"bytes,1,rep,name=itemInfo,proto3" json:"itemInfo,omitempty"`
}

func (x *OpenOperaReq) Reset() {
	*x = OpenOperaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenOperaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenOperaReq) ProtoMessage() {}

func (x *OpenOperaReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenOperaReq.ProtoReflect.Descriptor instead.
func (*OpenOperaReq) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{133}
}

func (x *OpenOperaReq) GetItemInfo() []*ItemInfo {
	if x != nil {
		return x.ItemInfo
	}
	return nil
}

type C2SOpenBoxReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// Types that are assignable to Opera:
	//
	//	*C2SOpenBoxReq_OpenOperaReq
	Opera isC2SOpenBoxReq_Opera `protobuf_oneof:"Opera"`
}

func (x *C2SOpenBoxReq) Reset() {
	*x = C2SOpenBoxReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SOpenBoxReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SOpenBoxReq) ProtoMessage() {}

func (x *C2SOpenBoxReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SOpenBoxReq.ProtoReflect.Descriptor instead.
func (*C2SOpenBoxReq) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{134}
}

func (x *C2SOpenBoxReq) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (m *C2SOpenBoxReq) GetOpera() isC2SOpenBoxReq_Opera {
	if m != nil {
		return m.Opera
	}
	return nil
}

func (x *C2SOpenBoxReq) GetOpenOperaReq() *OpenOperaReq {
	if x, ok := x.GetOpera().(*C2SOpenBoxReq_OpenOperaReq); ok {
		return x.OpenOperaReq
	}
	return nil
}

type isC2SOpenBoxReq_Opera interface {
	isC2SOpenBoxReq_Opera()
}

type C2SOpenBoxReq_OpenOperaReq struct {
	OpenOperaReq *OpenOperaReq `protobuf:"bytes,2,opt,name=openOperaReq,proto3,oneof"`
}

func (*C2SOpenBoxReq_OpenOperaReq) isC2SOpenBoxReq_Opera() {}

type OpenOperaRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemChangeInfo []*ItemChangeInfo `protobuf:"bytes,3,rep,name=itemChangeInfo,proto3" json:"itemChangeInfo,omitempty"`
	ItemList       []*ItemInfo       `protobuf:"bytes,4,rep,name=itemList,proto3" json:"itemList,omitempty"`       // 用于组装common reward
	PetInfoList    []*PetInfo        `protobuf:"bytes,5,rep,name=petInfoList,proto3" json:"petInfoList,omitempty"` // 用于组装common reward
}

func (x *OpenOperaRsp) Reset() {
	*x = OpenOperaRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenOperaRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenOperaRsp) ProtoMessage() {}

func (x *OpenOperaRsp) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenOperaRsp.ProtoReflect.Descriptor instead.
func (*OpenOperaRsp) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{135}
}

func (x *OpenOperaRsp) GetItemChangeInfo() []*ItemChangeInfo {
	if x != nil {
		return x.ItemChangeInfo
	}
	return nil
}

func (x *OpenOperaRsp) GetItemList() []*ItemInfo {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *OpenOperaRsp) GetPetInfoList() []*PetInfo {
	if x != nil {
		return x.PetInfoList
	}
	return nil
}

type S2COpenBoxRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId    uint32 `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	ErrCode STATUS `protobuf:"varint,2,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	// Types that are assignable to Opera:
	//
	//	*S2COpenBoxRsp_OpenOperaRsp
	Opera isS2COpenBoxRsp_Opera `protobuf_oneof:"Opera"`
}

func (x *S2COpenBoxRsp) Reset() {
	*x = S2COpenBoxRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2COpenBoxRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2COpenBoxRsp) ProtoMessage() {}

func (x *S2COpenBoxRsp) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2COpenBoxRsp.ProtoReflect.Descriptor instead.
func (*S2COpenBoxRsp) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{136}
}

func (x *S2COpenBoxRsp) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2COpenBoxRsp) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (m *S2COpenBoxRsp) GetOpera() isS2COpenBoxRsp_Opera {
	if m != nil {
		return m.Opera
	}
	return nil
}

func (x *S2COpenBoxRsp) GetOpenOperaRsp() *OpenOperaRsp {
	if x, ok := x.GetOpera().(*S2COpenBoxRsp_OpenOperaRsp); ok {
		return x.OpenOperaRsp
	}
	return nil
}

type isS2COpenBoxRsp_Opera interface {
	isS2COpenBoxRsp_Opera()
}

type S2COpenBoxRsp_OpenOperaRsp struct {
	OpenOperaRsp *OpenOperaRsp `protobuf:"bytes,3,opt,name=openOperaRsp,proto3,oneof"`
}

func (*S2COpenBoxRsp_OpenOperaRsp) isS2COpenBoxRsp_Opera() {}

type BlueVipGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BlueVipGetReq) Reset() {
	*x = BlueVipGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlueVipGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlueVipGetReq) ProtoMessage() {}

func (x *BlueVipGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlueVipGetReq.ProtoReflect.Descriptor instead.
func (*BlueVipGetReq) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{137}
}

type BlueVipGetRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlueVip *BlueVip `protobuf:"bytes,1,opt,name=blueVip,proto3" json:"blueVip,omitempty"`
}

func (x *BlueVipGetRsp) Reset() {
	*x = BlueVipGetRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlueVipGetRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlueVipGetRsp) ProtoMessage() {}

func (x *BlueVipGetRsp) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlueVipGetRsp.ProtoReflect.Descriptor instead.
func (*BlueVipGetRsp) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{138}
}

func (x *BlueVipGetRsp) GetBlueVip() *BlueVip {
	if x != nil {
		return x.BlueVip
	}
	return nil
}

type BlueVipRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardId  uint32 `protobuf:"varint,1,opt,name=rewardId,proto3" json:"rewardId,omitempty"`   // 配置里的id
	RewardAll uint32 `protobuf:"varint,2,opt,name=rewardAll,proto3" json:"rewardAll,omitempty"` // 一键领取每日奖励
}

func (x *BlueVipRewardReq) Reset() {
	*x = BlueVipRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlueVipRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlueVipRewardReq) ProtoMessage() {}

func (x *BlueVipRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlueVipRewardReq.ProtoReflect.Descriptor instead.
func (*BlueVipRewardReq) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{139}
}

func (x *BlueVipRewardReq) GetRewardId() uint32 {
	if x != nil {
		return x.RewardId
	}
	return 0
}

func (x *BlueVipRewardReq) GetRewardAll() uint32 {
	if x != nil {
		return x.RewardAll
	}
	return 0
}

type C2SBlueVipReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// Types that are assignable to Opera:
	//
	//	*C2SBlueVipReq_BlueVipGetReq
	//	*C2SBlueVipReq_BlueVipRewardReq
	Opera isC2SBlueVipReq_Opera `protobuf_oneof:"Opera"`
}

func (x *C2SBlueVipReq) Reset() {
	*x = C2SBlueVipReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SBlueVipReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SBlueVipReq) ProtoMessage() {}

func (x *C2SBlueVipReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SBlueVipReq.ProtoReflect.Descriptor instead.
func (*C2SBlueVipReq) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{140}
}

func (x *C2SBlueVipReq) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (m *C2SBlueVipReq) GetOpera() isC2SBlueVipReq_Opera {
	if m != nil {
		return m.Opera
	}
	return nil
}

func (x *C2SBlueVipReq) GetBlueVipGetReq() *BlueVipGetReq {
	if x, ok := x.GetOpera().(*C2SBlueVipReq_BlueVipGetReq); ok {
		return x.BlueVipGetReq
	}
	return nil
}

func (x *C2SBlueVipReq) GetBlueVipRewardReq() *BlueVipRewardReq {
	if x, ok := x.GetOpera().(*C2SBlueVipReq_BlueVipRewardReq); ok {
		return x.BlueVipRewardReq
	}
	return nil
}

type isC2SBlueVipReq_Opera interface {
	isC2SBlueVipReq_Opera()
}

type C2SBlueVipReq_BlueVipGetReq struct {
	BlueVipGetReq *BlueVipGetReq `protobuf:"bytes,2,opt,name=blueVipGetReq,proto3,oneof"`
}

type C2SBlueVipReq_BlueVipRewardReq struct {
	BlueVipRewardReq *BlueVipRewardReq `protobuf:"bytes,3,opt,name=blueVipRewardReq,proto3,oneof"`
}

func (*C2SBlueVipReq_BlueVipGetReq) isC2SBlueVipReq_Opera() {}

func (*C2SBlueVipReq_BlueVipRewardReq) isC2SBlueVipReq_Opera() {}

type S2CBlueVipRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId    uint32 `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	ErrCode STATUS `protobuf:"varint,2,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	// Types that are assignable to Opera:
	//
	//	*S2CBlueVipRsp_BlueVipGetRsp
	Opera isS2CBlueVipRsp_Opera `protobuf_oneof:"Opera"`
}

func (x *S2CBlueVipRsp) Reset() {
	*x = S2CBlueVipRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CBlueVipRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CBlueVipRsp) ProtoMessage() {}

func (x *S2CBlueVipRsp) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CBlueVipRsp.ProtoReflect.Descriptor instead.
func (*S2CBlueVipRsp) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{141}
}

func (x *S2CBlueVipRsp) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2CBlueVipRsp) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (m *S2CBlueVipRsp) GetOpera() isS2CBlueVipRsp_Opera {
	if m != nil {
		return m.Opera
	}
	return nil
}

func (x *S2CBlueVipRsp) GetBlueVipGetRsp() *BlueVipGetRsp {
	if x, ok := x.GetOpera().(*S2CBlueVipRsp_BlueVipGetRsp); ok {
		return x.BlueVipGetRsp
	}
	return nil
}

type isS2CBlueVipRsp_Opera interface {
	isS2CBlueVipRsp_Opera()
}

type S2CBlueVipRsp_BlueVipGetRsp struct {
	BlueVipGetRsp *BlueVipGetRsp `protobuf:"bytes,3,opt,name=blueVipGetRsp,proto3,oneof"`
}

func (*S2CBlueVipRsp_BlueVipGetRsp) isS2CBlueVipRsp_Opera() {}

type QQHallGiftGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QQHallGiftGetReq) Reset() {
	*x = QQHallGiftGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QQHallGiftGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QQHallGiftGetReq) ProtoMessage() {}

func (x *QQHallGiftGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QQHallGiftGetReq.ProtoReflect.Descriptor instead.
func (*QQHallGiftGetReq) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{142}
}

type QQHallGiftGetRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GiftData *QQHallGift `protobuf:"bytes,1,opt,name=giftData,proto3" json:"giftData,omitempty"`
}

func (x *QQHallGiftGetRsp) Reset() {
	*x = QQHallGiftGetRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QQHallGiftGetRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QQHallGiftGetRsp) ProtoMessage() {}

func (x *QQHallGiftGetRsp) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QQHallGiftGetRsp.ProtoReflect.Descriptor instead.
func (*QQHallGiftGetRsp) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{143}
}

func (x *QQHallGiftGetRsp) GetGiftData() *QQHallGift {
	if x != nil {
		return x.GiftData
	}
	return nil
}

type QQHallGiftRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardId uint32 `protobuf:"varint,1,opt,name=rewardId,proto3" json:"rewardId,omitempty"` // 配置里的id
}

func (x *QQHallGiftRewardReq) Reset() {
	*x = QQHallGiftRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QQHallGiftRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QQHallGiftRewardReq) ProtoMessage() {}

func (x *QQHallGiftRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QQHallGiftRewardReq.ProtoReflect.Descriptor instead.
func (*QQHallGiftRewardReq) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{144}
}

func (x *QQHallGiftRewardReq) GetRewardId() uint32 {
	if x != nil {
		return x.RewardId
	}
	return 0
}

type C2SQQHallGiftReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// Types that are assignable to Opera:
	//
	//	*C2SQQHallGiftReq_GetReq
	//	*C2SQQHallGiftReq_RewardReq
	Opera isC2SQQHallGiftReq_Opera `protobuf_oneof:"Opera"`
}

func (x *C2SQQHallGiftReq) Reset() {
	*x = C2SQQHallGiftReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SQQHallGiftReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SQQHallGiftReq) ProtoMessage() {}

func (x *C2SQQHallGiftReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SQQHallGiftReq.ProtoReflect.Descriptor instead.
func (*C2SQQHallGiftReq) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{145}
}

func (x *C2SQQHallGiftReq) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (m *C2SQQHallGiftReq) GetOpera() isC2SQQHallGiftReq_Opera {
	if m != nil {
		return m.Opera
	}
	return nil
}

func (x *C2SQQHallGiftReq) GetGetReq() *QQHallGiftGetReq {
	if x, ok := x.GetOpera().(*C2SQQHallGiftReq_GetReq); ok {
		return x.GetReq
	}
	return nil
}

func (x *C2SQQHallGiftReq) GetRewardReq() *QQHallGiftRewardReq {
	if x, ok := x.GetOpera().(*C2SQQHallGiftReq_RewardReq); ok {
		return x.RewardReq
	}
	return nil
}

type isC2SQQHallGiftReq_Opera interface {
	isC2SQQHallGiftReq_Opera()
}

type C2SQQHallGiftReq_GetReq struct {
	GetReq *QQHallGiftGetReq `protobuf:"bytes,2,opt,name=getReq,proto3,oneof"`
}

type C2SQQHallGiftReq_RewardReq struct {
	RewardReq *QQHallGiftRewardReq `protobuf:"bytes,3,opt,name=rewardReq,proto3,oneof"`
}

func (*C2SQQHallGiftReq_GetReq) isC2SQQHallGiftReq_Opera() {}

func (*C2SQQHallGiftReq_RewardReq) isC2SQQHallGiftReq_Opera() {}

type S2CQQHallGiftRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId    uint32 `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	ErrCode STATUS `protobuf:"varint,2,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	// Types that are assignable to Opera:
	//
	//	*S2CQQHallGiftRsp_GetRsp
	Opera isS2CQQHallGiftRsp_Opera `protobuf_oneof:"Opera"`
}

func (x *S2CQQHallGiftRsp) Reset() {
	*x = S2CQQHallGiftRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CQQHallGiftRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CQQHallGiftRsp) ProtoMessage() {}

func (x *S2CQQHallGiftRsp) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CQQHallGiftRsp.ProtoReflect.Descriptor instead.
func (*S2CQQHallGiftRsp) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{146}
}

func (x *S2CQQHallGiftRsp) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2CQQHallGiftRsp) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (m *S2CQQHallGiftRsp) GetOpera() isS2CQQHallGiftRsp_Opera {
	if m != nil {
		return m.Opera
	}
	return nil
}

func (x *S2CQQHallGiftRsp) GetGetRsp() *QQHallGiftGetRsp {
	if x, ok := x.GetOpera().(*S2CQQHallGiftRsp_GetRsp); ok {
		return x.GetRsp
	}
	return nil
}

type isS2CQQHallGiftRsp_Opera interface {
	isS2CQQHallGiftRsp_Opera()
}

type S2CQQHallGiftRsp_GetRsp struct {
	GetRsp *QQHallGiftGetRsp `protobuf:"bytes,3,opt,name=GetRsp,proto3,oneof"`
}

func (*S2CQQHallGiftRsp_GetRsp) isS2CQQHallGiftRsp_Opera() {}

type C2SEmailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId   uint32       `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	Type   EmailReqType `protobuf:"varint,2,opt,name=type,proto3,enum=msg.EmailReqType" json:"type,omitempty"`
	MailId uint64       `protobuf:"varint,3,opt,name=mailId,proto3" json:"mailId,omitempty"` //传0是一键（拉数据除外）
}

func (x *C2SEmailReq) Reset() {
	*x = C2SEmailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SEmailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SEmailReq) ProtoMessage() {}

func (x *C2SEmailReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SEmailReq.ProtoReflect.Descriptor instead.
func (*C2SEmailReq) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{147}
}

func (x *C2SEmailReq) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SEmailReq) GetType() EmailReqType {
	if x != nil {
		return x.Type
	}
	return EmailReqType_EMAIL_GET_INFO
}

func (x *C2SEmailReq) GetMailId() uint64 {
	if x != nil {
		return x.MailId
	}
	return 0
}

type S2CEmailRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId      uint32       `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	ErrCode   STATUS       `protobuf:"varint,2,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	EmailList []*EmailInfo `protobuf:"bytes,3,rep,name=emailList,proto3" json:"emailList,omitempty"`
}

func (x *S2CEmailRsp) Reset() {
	*x = S2CEmailRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CEmailRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CEmailRsp) ProtoMessage() {}

func (x *S2CEmailRsp) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CEmailRsp.ProtoReflect.Descriptor instead.
func (*S2CEmailRsp) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{148}
}

func (x *S2CEmailRsp) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2CEmailRsp) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CEmailRsp) GetEmailList() []*EmailInfo {
	if x != nil {
		return x.EmailList
	}
	return nil
}

type NotifyNewEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserLvl uint32 `protobuf:"varint,1,opt,name=UserLvl,proto3" json:"UserLvl,omitempty"` //玩家等级条件(大于等于，0不限制)
}

func (x *NotifyNewEmail) Reset() {
	*x = NotifyNewEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyNewEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyNewEmail) ProtoMessage() {}

func (x *NotifyNewEmail) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyNewEmail.ProtoReflect.Descriptor instead.
func (*NotifyNewEmail) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{149}
}

func (x *NotifyNewEmail) GetUserLvl() uint32 {
	if x != nil {
		return x.UserLvl
	}
	return 0
}

type C2SUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId uint32   `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	Uids []string `protobuf:"bytes,2,rep,name=uids,proto3" json:"uids,omitempty"`
}

func (x *C2SUserInfoReq) Reset() {
	*x = C2SUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2SUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2SUserInfoReq) ProtoMessage() {}

func (x *C2SUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2SUserInfoReq.ProtoReflect.Descriptor instead.
func (*C2SUserInfoReq) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{150}
}

func (x *C2SUserInfoReq) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *C2SUserInfoReq) GetUids() []string {
	if x != nil {
		return x.Uids
	}
	return nil
}

type UserBriefInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	NickName  string `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Sex       uint32 `protobuf:"varint,3,opt,name=sex,proto3" json:"sex,omitempty"`
	HeadFrame uint32 `protobuf:"varint,4,opt,name=headFrame,proto3" json:"headFrame,omitempty"`
}

func (x *UserBriefInfo) Reset() {
	*x = UserBriefInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBriefInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBriefInfo) ProtoMessage() {}

func (x *UserBriefInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBriefInfo.ProtoReflect.Descriptor instead.
func (*UserBriefInfo) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{151}
}

func (x *UserBriefInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UserBriefInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserBriefInfo) GetSex() uint32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *UserBriefInfo) GetHeadFrame() uint32 {
	if x != nil {
		return x.HeadFrame
	}
	return 0
}

type S2CUserInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiId       uint32           `protobuf:"varint,1,opt,name=uiId,proto3" json:"uiId,omitempty"`
	ErrCode    STATUS           `protobuf:"varint,2,opt,name=errCode,proto3,enum=msg.STATUS" json:"errCode,omitempty"`
	BriefInfos []*UserBriefInfo `protobuf:"bytes,3,rep,name=briefInfos,proto3" json:"briefInfos,omitempty"`
}

func (x *S2CUserInfoRsp) Reset() {
	*x = S2CUserInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CUserInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CUserInfoRsp) ProtoMessage() {}

func (x *S2CUserInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CUserInfoRsp.ProtoReflect.Descriptor instead.
func (*S2CUserInfoRsp) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{152}
}

func (x *S2CUserInfoRsp) GetUiId() uint32 {
	if x != nil {
		return x.UiId
	}
	return 0
}

func (x *S2CUserInfoRsp) GetErrCode() STATUS {
	if x != nil {
		return x.ErrCode
	}
	return STATUS_OK
}

func (x *S2CUserInfoRsp) GetBriefInfos() []*UserBriefInfo {
	if x != nil {
		return x.BriefInfos
	}
	return nil
}

type Extra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S2CItemInfo       *S2CItemInfo       `protobuf:"bytes,1,opt,name=S2CItemInfo,proto3" json:"S2CItemInfo,omitempty"`
	S2CCommonReward   *S2CCommonReward   `protobuf:"bytes,2,opt,name=S2CCommonReward,proto3" json:"S2CCommonReward,omitempty"`
	UserClientContext *UserClientContext `protobuf:"bytes,3,opt,name=UserClientContext,proto3" json:"UserClientContext,omitempty"`
	S2CTask           *S2CTask           `protobuf:"bytes,4,opt,name=S2CTask,proto3" json:"S2CTask,omitempty"`
	S2CPetAssign      *S2CPetAssign      `protobuf:"bytes,5,opt,name=S2CPetAssign,proto3" json:"S2CPetAssign,omitempty"`
}

func (x *Extra) Reset() {
	*x = Extra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Extra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Extra) ProtoMessage() {}

func (x *Extra) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Extra.ProtoReflect.Descriptor instead.
func (*Extra) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{153}
}

func (x *Extra) GetS2CItemInfo() *S2CItemInfo {
	if x != nil {
		return x.S2CItemInfo
	}
	return nil
}

func (x *Extra) GetS2CCommonReward() *S2CCommonReward {
	if x != nil {
		return x.S2CCommonReward
	}
	return nil
}

func (x *Extra) GetUserClientContext() *UserClientContext {
	if x != nil {
		return x.UserClientContext
	}
	return nil
}

func (x *Extra) GetS2CTask() *S2CTask {
	if x != nil {
		return x.S2CTask
	}
	return nil
}

func (x *Extra) GetS2CPetAssign() *S2CPetAssign {
	if x != nil {
		return x.S2CPetAssign
	}
	return nil
}

type S2CEventStatsChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatsIdList []uint32        `protobuf:"varint,1,rep,packed,name=statsIdList,proto3" json:"statsIdList,omitempty"`
	ActChgList  []EActivityType `protobuf:"varint,2,rep,packed,name=actChgList,proto3,enum=model.EActivityType" json:"actChgList,omitempty"`
}

func (x *S2CEventStatsChange) Reset() {
	*x = S2CEventStatsChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_msg_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CEventStatsChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CEventStatsChange) ProtoMessage() {}

func (x *S2CEventStatsChange) ProtoReflect() protoreflect.Message {
	mi := &file_game_msg_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CEventStatsChange.ProtoReflect.Descriptor instead.
func (*S2CEventStatsChange) Descriptor() ([]byte, []int) {
	return file_game_msg_proto_rawDescGZIP(), []int{154}
}

func (x *S2CEventStatsChange) GetStatsIdList() []uint32 {
	if x != nil {
		return x.StatsIdList
	}
	return nil
}

func (x *S2CEventStatsChange) GetActChgList() []EActivityType {
	if x != nil {
		return x.ActChgList
	}
	return nil
}

var File_game_msg_proto protoreflect.FileDescriptor

var file_game_msg_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x6d, 0x73, 0x67, 0x1a, 0x09, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0b, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0b, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x70,
	0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x09, 0x70, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x09, 0x6e, 0x70, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x70, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70, 0x61,
	0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x43, 0x66, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x62, 0x6c,
	0x75, 0x65, 0x76, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x71, 0x71, 0x68,
	0x61, 0x6c, 0x6c, 0x67, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6c, 0x69,
	0x61, 0x6e, 0x6c, 0x69, 0x61, 0x6e, 0x6b, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x25, 0x0a, 0x09, 0x43, 0x32, 0x53, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x09, 0x53, 0x32, 0x43, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xdc, 0x01, 0x0a, 0x08, 0x43,
	0x32, 0x53, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x52, 0x65,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x4b,
	0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x4b, 0x65,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x66, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70,
	0x66, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xfe, 0x01, 0x0a, 0x08, 0x53, 0x32,
	0x43, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x12, 0x2e,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x53, 0x76, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x53, 0x76, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x76, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6c, 0x76, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0xef, 0x01, 0x0a, 0x11, 0x43,
	0x32, 0x53, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x75, 0x69, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x52, 0x13, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x12, 0x2c, 0x0a, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x75, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x62, 0x75, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x55, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x70, 0x49, 0x64, 0x22, 0xca, 0x01, 0x0a,
	0x11, 0x53, 0x32, 0x43, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x4a, 0x0a, 0x13, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x52, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x69,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x76, 0x0a, 0x0f, 0x43, 0x32, 0x53,
	0x4d, 0x6f, 0x76, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03,
	0x70, 0x6f, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x38, 0x0a, 0x0f, 0x53, 0x32, 0x43, 0x4d, 0x6f, 0x76, 0x65, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x10,
	0x43, 0x32, 0x53, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x75, 0x69, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x52,
	0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72,
	0x6f, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x70,
	0x49, 0x64, 0x22, 0xe5, 0x01, 0x0a, 0x10, 0x53, 0x32, 0x43, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x38,
	0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x52, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x2c, 0x0a, 0x0a, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x0a, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x55,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x55,
	0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xeb, 0x01, 0x0a, 0x0d, 0x43,
	0x32, 0x53, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10,
	0x70, 0x72, 0x6f, 0x70, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65,
	0x6c, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x0d, 0x53, 0x32, 0x43,
	0x50, 0x6c, 0x61, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x6c, 0x61,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x70, 0x72, 0x6f,
	0x70, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x8f, 0x01,
	0x0a, 0x0d, 0x43, 0x32, 0x53, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75,
	0x69, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x69, 0x64, 0x12,
	0x2e, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x43, 0x6d, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x43, 0x6d, 0x64, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x43, 0x6d, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0x96, 0x01, 0x0a, 0x0d, 0x53, 0x32, 0x43, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52,
	0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x43, 0x6d, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x43, 0x6d, 0x64, 0x52, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x43, 0x6d, 0x64, 0x12, 0x2e, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x11, 0x0a, 0x0f, 0x57, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x22, 0x4b, 0x0a, 0x12, 0x57,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x35, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x43, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x57, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x43, 0x6d, 0x64, 0x52, 0x09, 0x65,
	0x78, 0x70, 0x61, 0x6e, 0x64, 0x43, 0x6d, 0x64, 0x22, 0x3c, 0x0a, 0x10, 0x57, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0xc7, 0x01, 0x0a, 0x0c, 0x43, 0x32, 0x53, 0x57, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x67,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x48, 0x00, 0x52, 0x06, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x37, 0x0a, 0x09, 0x65,
	0x78, 0x70, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x45, 0x78,
	0x70, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x09, 0x65, 0x78, 0x70, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x57, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x07,
	0x73, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x42, 0x07, 0x0a, 0x05, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x22, 0x5d, 0x0a, 0x0f, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x47, 0x65, 0x74,
	0x52, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x09, 0x57, 0x61, 0x72, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x57,
	0x61, 0x72, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x09, 0x57, 0x61, 0x72, 0x65, 0x48, 0x6f,
	0x75, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x22,
	0x60, 0x0a, 0x12, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x45, 0x78, 0x70, 0x61,
	0x6e, 0x64, 0x52, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x09, 0x57, 0x61, 0x72, 0x65, 0x48, 0x6f, 0x75,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x57, 0x61, 0x72, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x09, 0x57, 0x61, 0x72, 0x65,
	0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x22, 0x12, 0x0a, 0x10, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x53, 0x65,
	0x6c, 0x6c, 0x52, 0x73, 0x70, 0x22, 0xee, 0x01, 0x0a, 0x0c, 0x53, 0x32, 0x43, 0x57, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49,
	0x64, 0x12, 0x2e, 0x0a, 0x06, 0x67, 0x65, 0x74, 0x52, 0x73, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x47, 0x65, 0x74, 0x52, 0x73, 0x70, 0x48, 0x00, 0x52, 0x06, 0x67, 0x65, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x37, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x57, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x48, 0x00, 0x52,
	0x09, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x65,
	0x6c, 0x6c, 0x52, 0x73, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x53, 0x65, 0x6c, 0x6c, 0x52,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x6c, 0x6c, 0x52, 0x73, 0x70, 0x42, 0x07, 0x0a,
	0x05, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x22, 0x3e, 0x0a, 0x0b, 0x43, 0x32, 0x53, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x6e, 0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0a, 0x49,
	0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x69, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x0b, 0x53, 0x32, 0x43, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3b, 0x0a,
	0x0e, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x22, 0x84,
	0x02, 0x0a, 0x0f, 0x43, 0x32, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x43,
	0x6d, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x43, 0x6d, 0x64, 0x52, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x43, 0x6d, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x55, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x0c, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x00, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x20, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x00, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x70, 0x49, 0x64, 0x42, 0x07, 0x0a, 0x05,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x22, 0xd6, 0x01, 0x0a, 0x0f, 0x53, 0x32, 0x43, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x30, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x43, 0x6d, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x43, 0x6d, 0x64, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x43,
	0x6d, 0x64, 0x12, 0x34, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x0b, 0x73, 0x63, 0x69, 0x65,
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0b, 0x73, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x41,
	0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65,
	0x78, 0x22, 0x87, 0x01, 0x0a, 0x10, 0x43, 0x32, 0x53, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73,
	0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x1e, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x09, 0x68, 0x65, 0x61, 0x64, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x22, 0x69, 0x0a, 0x11, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x73, 0x70,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x26,
	0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x10, 0x53, 0x32, 0x43, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x25, 0x0a, 0x07, 0x65,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x73, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x73, 0x70, 0x12, 0x1e,
	0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x09, 0x68, 0x65, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x42, 0x07,
	0x0a, 0x05, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x22, 0xbd, 0x01, 0x0a, 0x0c, 0x43, 0x32, 0x53, 0x53,
	0x68, 0x6f, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x08,
	0x73, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x53, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x73, 0x68,
	0x6f, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x43, 0x6d, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x43, 0x6d, 0x64, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x43, 0x6d,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x63, 0x6e, 0x74, 0x22, 0x7e, 0x0a, 0x0c, 0x53, 0x32, 0x43, 0x53, 0x68,
	0x6f, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69,
	0x49, 0x64, 0x12, 0x33, 0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x70, 0x49,
	0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x70, 0x0a, 0x07, 0x43, 0x32, 0x53, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x43, 0x6d, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x43, 0x6d, 0x64, 0x52,
	0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x43, 0x6d, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x08, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x07, 0x53, 0x32,
	0x43, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x69, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64,
	0x12, 0x35, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x43, 0x6d, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x43, 0x6d, 0x64, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x43, 0x6d, 0x64, 0x12, 0x2f, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x0d, 0x43, 0x32, 0x53,
	0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x2f,
	0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x29, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x07, 0x61, 0x64, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x6d, 0x6f,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x6d, 0x6f,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xd1, 0x01, 0x0a, 0x0d, 0x53, 0x32, 0x43, 0x57, 0x6f, 0x72,
	0x6c, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x61, 0x64, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x07, 0x6d, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6e, 0x0a, 0x08, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x73, 0x74, 0x4c, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x63, 0x6f, 0x73, 0x74, 0x4c, 0x76, 0x22, 0x4b, 0x0a, 0x0a, 0x43, 0x32, 0x53,
	0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x6d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x08, 0x6d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x22, 0x47, 0x0a, 0x0a, 0x53, 0x32, 0x43, 0x46, 0x6f, 0x72,
	0x6d, 0x75, 0x6c, 0x61, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x69, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x22,
	0xce, 0x01, 0x0a, 0x0b, 0x43, 0x32, 0x53, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75,
	0x69, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x69, 0x64, 0x12,
	0x29, 0x0a, 0x05, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x52, 0x05, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61,
	0x72, 0x67, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x63, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f,
	0x61, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c,
	0x6f, 0x61, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x66, 0x69, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x9f, 0x01, 0x0a, 0x0b, 0x53, 0x32, 0x43, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x07,
	0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x45, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x52,
	0x05, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x2a, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x09, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x48, 0x0a, 0x11, 0x4c, 0x69, 0x61, 0x6e, 0x4c, 0x69, 0x61, 0x6e, 0x4b, 0x61,
	0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x45, 0x4c, 0x4c, 0x4b, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x54, 0x79, 0x70, 0x65, 0x22, 0xab, 0x01, 0x0a,
	0x11, 0x4c, 0x69, 0x61, 0x6e, 0x4c, 0x69, 0x61, 0x6e, 0x4b, 0x61, 0x6e, 0x47, 0x65, 0x74, 0x52,
	0x73, 0x70, 0x12, 0x29, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4c, 0x4c, 0x4b, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x64, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4c, 0x4c,
	0x4b, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x2b, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x72, 0x0a, 0x13, 0x4c, 0x4c,
	0x4b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0c, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x4c, 0x69, 0x61, 0x6e, 0x4c, 0x69, 0x61,
	0x6e, 0x4b, 0x61, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x52, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x22, 0x65,
	0x0a, 0x0e, 0x4c, 0x4c, 0x4b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x41, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45,
	0x4c, 0x69, 0x61, 0x6e, 0x4c, 0x69, 0x61, 0x6e, 0x4b, 0x61, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x22, 0x9e, 0x01, 0x0a, 0x0a, 0x4c, 0x4c, 0x4b, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x12, 0x35, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4c, 0x4c,
	0x4b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x51, 0x0a, 0x10, 0x4c, 0x4c, 0x4b, 0x47, 0x61, 0x6d,
	0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4c, 0x4c, 0x4b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x52, 0x05, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x22, 0xd7, 0x02, 0x0a, 0x0e, 0x43, 0x32,
	0x53, 0x4c, 0x69, 0x61, 0x6e, 0x4c, 0x69, 0x61, 0x6e, 0x4b, 0x61, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64,
	0x12, 0x34, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x4c, 0x69, 0x61, 0x6e, 0x4c,
	0x69, 0x61, 0x6e, 0x4b, 0x61, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x52, 0x09, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4c, 0x69, 0x61,
	0x6e, 0x4c, 0x69, 0x61, 0x6e, 0x4b, 0x61, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x06, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x45, 0x4c, 0x69, 0x61, 0x6e, 0x4c, 0x69, 0x61, 0x6e, 0x4b, 0x61, 0x6e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x46,
	0x0a, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4c,
	0x4c, 0x4b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x4c, 0x4c, 0x4b, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x4a, 0x0a, 0x09, 0x4c, 0x4c, 0x4b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x6e, 0x12, 0x2b, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x73, 0x0a, 0x0c, 0x4c, 0x4c, 0x4b, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x45, 0x78, 0x12,
	0x35, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4c, 0x4c,
	0x4b, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x47,
	0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x09, 0x6c, 0x6c, 0x6b, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x4c, 0x4c, 0x4b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x09, 0x6c, 0x6c, 0x6b, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x22, 0xfd, 0x02, 0x0a, 0x0e, 0x53, 0x32, 0x43, 0x4c, 0x69, 0x61, 0x6e,
	0x4c, 0x69, 0x61, 0x6e, 0x4b, 0x61, 0x6e, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x4c, 0x69, 0x61,
	0x6e, 0x4c, 0x69, 0x61, 0x6e, 0x4b, 0x61, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x52, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x67, 0x65, 0x74, 0x52,
	0x73, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4c,
	0x69, 0x61, 0x6e, 0x4c, 0x69, 0x61, 0x6e, 0x4b, 0x61, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x73, 0x70,
	0x48, 0x00, 0x52, 0x06, 0x67, 0x65, 0x74, 0x52, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x08, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x45, 0x4c, 0x69, 0x61, 0x6e, 0x4c, 0x69, 0x61, 0x6e, 0x4b, 0x61, 0x6e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x12, 0x2b, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4c, 0x4c, 0x4b, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x12, 0x28, 0x0a,
	0x06, 0x67, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4c, 0x4c, 0x4b, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x00, 0x52,
	0x06, 0x67, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x2d, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x45,
	0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4c,
	0x4c, 0x4b, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x45, 0x78, 0x48, 0x00, 0x52, 0x07, 0x67,
	0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x0e, 0x43, 0x32, 0x53, 0x50, 0x65, 0x74, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x50, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x72, 0x75, 0x69, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x72, 0x75, 0x69,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xe1, 0x01, 0x0a, 0x0e, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x34, 0x0a,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x50, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x70, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x50, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x70, 0x65,
	0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x07, 0x70, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x50, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x70, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x39, 0x0a, 0x0a, 0x50, 0x65, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x35,
	0x0a, 0x09, 0x50, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x77,
	0x6f, 0x72, 0x6b, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x55, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x0b, 0x50, 0x65, 0x74, 0x55, 0x6e, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x77,
	0x6f, 0x72, 0x6b, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x69, 0x64, 0x22, 0x60,
	0x0a, 0x0c, 0x50, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x22, 0x31, 0x0a, 0x0f, 0x50, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0x5e, 0x0a, 0x0e, 0x50, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x11, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x15, 0x50, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2c, 0x0a, 0x11,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x1f, 0x0a, 0x09, 0x50, 0x65,
	0x74, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x0a, 0x50,
	0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x74,
	0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x74, 0x55, 0x69,
	0x64, 0x22, 0xc1, 0x04, 0x0a, 0x06, 0x43, 0x32, 0x53, 0x50, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x74, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x45, 0x50, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x52, 0x09, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x70, 0x65, 0x74, 0x55, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x50, 0x65, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x70,
	0x65, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x65, 0x74,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x50, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x48, 0x00, 0x52, 0x09,
	0x70, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x34, 0x0a, 0x0b, 0x70, 0x65, 0x74,
	0x55, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x74, 0x55, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x48, 0x00, 0x52, 0x0b, 0x70, 0x65, 0x74, 0x55, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x12,
	0x40, 0x0a, 0x0f, 0x70, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50,
	0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x48, 0x00,
	0x52, 0x0f, 0x70, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x70, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x50, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x0e, 0x70, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x52, 0x0a, 0x15, 0x70, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x48, 0x00, 0x52, 0x15, 0x70,
	0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x65,
	0x74, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x09, 0x70, 0x65, 0x74, 0x52, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x70, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50,
	0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x65, 0x74,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf1, 0x04, 0x0a, 0x06, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74,
	0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x07,
	0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x50, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x52, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x03, 0x70, 0x65, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50,
	0x65, 0x74, 0x52, 0x03, 0x70, 0x65, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x70, 0x65, 0x74, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x50, 0x65, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x48, 0x00, 0x52, 0x0a,
	0x70, 0x65, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x50, 0x65,
	0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x48, 0x00, 0x52,
	0x09, 0x50, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x37, 0x0a, 0x0c, 0x70, 0x65,
	0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0f, 0x70, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x55,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x50, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x70, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x52, 0x0a, 0x15, 0x70, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x74, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x48,
	0x00, 0x52, 0x15, 0x70, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x65, 0x74, 0x52,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x50, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x09, 0x70,
	0x65, 0x74, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x70, 0x65, 0x74, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x50, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x0a, 0x70, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x56, 0x0a, 0x0c, 0x43, 0x32, 0x53,
	0x50, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x65, 0x74, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x69,
	0x64, 0x22, 0xa1, 0x01, 0x0a, 0x0c, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x0d, 0x70, 0x65, 0x74,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x70, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x52, 0x0a, 0x0f, 0x53, 0x32, 0x43, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x2b, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x22, 0x0c, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x4e, 0x50, 0x43, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x21, 0x0a, 0x09, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x4e, 0x50, 0x43, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x70, 0x63, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x70, 0x63, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x07, 0x46, 0x65,
	0x65, 0x64, 0x4e, 0x50, 0x43, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x70, 0x63, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x70, 0x63, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x08, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x1f, 0x0a, 0x07, 0x54, 0x61, 0x6c, 0x6b,
	0x4e, 0x50, 0x43, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x70, 0x63, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6e, 0x70, 0x63, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x0a, 0x54, 0x61, 0x6b,
	0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x70, 0x63, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x70, 0x63, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x21, 0x0a, 0x09, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x70, 0x63, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x70, 0x63, 0x49, 0x64, 0x22, 0xc8,
	0x02, 0x0a, 0x0a, 0x43, 0x32, 0x53, 0x4e, 0x50, 0x43, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49,
	0x64, 0x12, 0x31, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x4e, 0x50, 0x43, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4e,
	0x50, 0x43, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x65, 0x74, 0x4e, 0x50, 0x43,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4e, 0x50,
	0x43, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x4e, 0x50, 0x43, 0x48, 0x00, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x4e, 0x50, 0x43, 0x12, 0x28, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x64, 0x4e, 0x50, 0x43, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x46, 0x65, 0x65, 0x64,
	0x4e, 0x50, 0x43, 0x48, 0x00, 0x52, 0x07, 0x66, 0x65, 0x65, 0x64, 0x4e, 0x50, 0x43, 0x12, 0x28,
	0x0a, 0x07, 0x74, 0x61, 0x6c, 0x6b, 0x4e, 0x50, 0x43, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x54, 0x61, 0x6c, 0x6b, 0x4e, 0x50, 0x43, 0x48, 0x00, 0x52,
	0x07, 0x74, 0x61, 0x6c, 0x6b, 0x4e, 0x50, 0x43, 0x12, 0x31, 0x0a, 0x0a, 0x74, 0x61, 0x6b, 0x65,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x54, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52,
	0x0a, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x2e, 0x0a, 0x09, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x46, 0x69, 0x72, 0x73, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x48, 0x00,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x42, 0x0c, 0x0a, 0x0a, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7d, 0x0a, 0x0a, 0x53, 0x32, 0x43,
	0x4e, 0x50, 0x43, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x03, 0x6e, 0x70, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4e, 0x70, 0x63, 0x52, 0x03, 0x6e, 0x70, 0x63,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x6c, 0x6b, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x74, 0x61, 0x6c, 0x6b, 0x49, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x0b, 0x43, 0x32, 0x53,
	0x42, 0x75, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x75, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x75, 0x79, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x70, 0x65, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x70, 0x65, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x66, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x70, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x66, 0x4b, 0x65, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x66, 0x4b, 0x65, 0x79, 0x22, 0x7d, 0x0a, 0x0b,
	0x53, 0x32, 0x43, 0x42, 0x75, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x07, 0x65,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x72, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x72, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x4a, 0x0a, 0x12, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42,
	0x75, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x42, 0x75, 0x79, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x0e, 0x42, 0x75, 0x79, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x6e,
	0x74, 0x22, 0xab, 0x01, 0x0a, 0x0c, 0x43, 0x32, 0x53, 0x4d, 0x61, 0x6c, 0x6c, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45,
	0x4d, 0x61, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6f, 0x70,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x0f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x64, 0x69, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x75, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x64, 0x69, 0x73, 0x65, 0x52, 0x0f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22,
	0x7e, 0x0a, 0x0c, 0x53, 0x32, 0x43, 0x4d, 0x61, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12,
	0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x07, 0x65,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0c, 0x6d, 0x61,
	0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x61, 0x6c, 0x6c, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x0c, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x75, 0x0a, 0x0c, 0x43, 0x32, 0x53, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75,
	0x69, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x44, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x44, 0x61, 0x79, 0x22, 0xaf, 0x01, 0x0a, 0x0c, 0x53, 0x32, 0x43, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x3c, 0x0a, 0x0d, 0x64, 0x61,
	0x69, 0x6c, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x44, 0x61, 0x69, 0x6c, 0x79,
	0x53, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x64, 0x61, 0x69, 0x6c, 0x79,
	0x53, 0x69, 0x67, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x50, 0x65, 0x74, 0x44,
	0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x22, 0x49, 0x0a, 0x0d, 0x50, 0x65,
	0x74, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x44, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x74, 0x55, 0x69, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x74, 0x55, 0x69,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2c, 0x0a, 0x10, 0x50, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0xf2, 0x01, 0x0a, 0x0e, 0x43, 0x32, 0x53, 0x50, 0x65, 0x74, 0x44, 0x69,
	0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0e, 0x70, 0x65,
	0x74, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x65, 0x74, 0x44, 0x69,
	0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x70, 0x65, 0x74,
	0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x44, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x6f, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x6f, 0x12, 0x43, 0x0a, 0x10, 0x70, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x41, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x41, 0x77, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x10, 0x70, 0x65, 0x74, 0x44, 0x69, 0x73,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x41, 0x77, 0x61, 0x72, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x14, 0x50, 0x65, 0x74,
	0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2b, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x41, 0x64, 0x64, 0x45, 0x78, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0a, 0x41, 0x64, 0x64, 0x45, 0x78, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x0b, 0x70, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0xee, 0x01, 0x0a, 0x0e, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x42,
	0x0a, 0x10, 0x70, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x50, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x10, 0x70, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x4f, 0x0a, 0x14, 0x70, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x14, 0x70,
	0x65, 0x74, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x4e, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x70, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x72, 0x65, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x61, 0x67, 0x72, 0x65, 0x74, 0x49,
	0x64, 0x22, 0xa4, 0x01, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x52, 0x73, 0x70, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x70,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x26,
	0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x44, 0x61, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x44, 0x61, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x77, 0x61, 0x72, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x77, 0x61,
	0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4c, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61,
	0x67, 0x72, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x61,
	0x67, 0x72, 0x65, 0x74, 0x49, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x52, 0x73,
	0x70, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x77, 0x61,
	0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0b,
	0x61, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4c, 0x0a, 0x12, 0x41,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x61, 0x67, 0x72, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x74, 0x61, 0x67, 0x72, 0x65, 0x74, 0x49, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x12, 0x41, 0x63,
	0x74, 0x52, 0x73, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x5c, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6c, 0x61,
	0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x66, 0x67, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x66, 0x67, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x47,
	0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x61, 0x73, 0x47, 0x6f, 0x74,
	0x22, 0x48, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6c,
	0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x61, 0x67, 0x72, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x74, 0x61, 0x67, 0x72, 0x65, 0x74, 0x49, 0x64, 0x22, 0xd4, 0x01, 0x0a, 0x0e, 0x41,
	0x63, 0x74, 0x52, 0x73, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x3d, 0x0a,
	0x09, 0x61, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x54, 0x61, 0x73, 0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x09, 0x61, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x09,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6c, 0x61,
	0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x40, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x53, 0x65, 0x76, 0x65, 0x6e,
	0x44, 0x61, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x2a, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x6e,
	0x44, 0x61, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x22, 0x44, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x52, 0x73, 0x70, 0x53, 0x65, 0x76,
	0x65, 0x6e, 0x44, 0x61, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x41, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x44, 0x61, 0x79, 0x53,
	0x69, 0x67, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x19, 0x0a, 0x17, 0x41, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x53, 0x75, 0x70, 0x65, 0x72, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x47, 0x69, 0x66, 0x74, 0x22, 0x4e, 0x0a, 0x17, 0x41, 0x63, 0x74, 0x52, 0x73, 0x70, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x47, 0x69, 0x66, 0x74, 0x12,
	0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x75, 0x70,
	0x65, 0x72, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x47, 0x69, 0x66, 0x74, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x6b, 0x0a, 0x15, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x54, 0x69,
	0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x3c, 0x0a,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x66, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x66, 0x67, 0x49,
	0x64, 0x22, 0x59, 0x0a, 0x17, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x66, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x66, 0x67,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x6e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x47, 0x6f, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x61, 0x73, 0x47, 0x6f, 0x74, 0x22, 0x5f, 0x0a, 0x15,
	0x41, 0x63, 0x74, 0x52, 0x73, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65,
	0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x48, 0x0a,
	0x0c, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x47, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x68, 0x61, 0x73, 0x47, 0x6f, 0x74, 0x22, 0x52, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x27, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x0f, 0x41,
	0x63, 0x74, 0x52, 0x73, 0x70, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x25,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x58, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22,
	0x84, 0x03, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x52, 0x73, 0x70, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x50, 0x0a, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x52, 0x73, 0x70, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x43, 0x6f, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x4e, 0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x50, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x52, 0x73, 0x70, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x4e,
	0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75,
	0x72, 0x44, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x75, 0x72, 0x44,
	0x61, 0x79, 0x1a, 0x40, 0x0a, 0x12, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x43,
	0x6f, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x40, 0x0a, 0x12, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x4e, 0x75,
	0x6d, 0x43, 0x6f, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x56, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x12, 0x29, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x69, 0x66, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x67, 0x69, 0x66, 0x74, 0x49, 0x64, 0x22, 0x60,
	0x0a, 0x11, 0x41, 0x63, 0x74, 0x52, 0x73, 0x70, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x47,
	0x69, 0x66, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x65, 0x64,
	0x22, 0x60, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x22, 0x4c, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x52, 0x73, 0x70, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x2c, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x69, 0x66, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x18,
	0x0a, 0x16, 0x41, 0x63, 0x74, 0x52, 0x73, 0x70, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x47, 0x69, 0x66, 0x74, 0x22, 0xba, 0x07, 0x0a, 0x10, 0x43, 0x32, 0x53,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49,
	0x64, 0x12, 0x2e, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x49, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x48, 0x00, 0x52, 0x11, 0x72, 0x65, 0x71, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x0f,
	0x72, 0x65, 0x71, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x0f, 0x72, 0x65, 0x71, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x12, 0x43, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x54, 0x61, 0x73,
	0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6c, 0x61, 0x6e,
	0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x12,
	0x43, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x44, 0x61, 0x79, 0x53, 0x69,
	0x67, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x41,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x44, 0x61, 0x79, 0x53, 0x69, 0x67,
	0x6e, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x44, 0x61, 0x79,
	0x53, 0x69, 0x67, 0x6e, 0x12, 0x52, 0x0a, 0x14, 0x72, 0x65, 0x71, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x47, 0x69, 0x66, 0x74, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x53,
	0x75, 0x70, 0x65, 0x72, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x47, 0x69, 0x66, 0x74,
	0x48, 0x00, 0x52, 0x14, 0x72, 0x65, 0x71, 0x53, 0x75, 0x70, 0x65, 0x72, 0x52, 0x65, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x47, 0x69, 0x66, 0x74, 0x12, 0x4c, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x54,
	0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b,
	0x48, 0x00, 0x52, 0x12, 0x72, 0x65, 0x71, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x3a, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61,
	0x73, 0x6b, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x43, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52,
	0x65, 0x62, 0x61, 0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65,
	0x62, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x12, 0x4f, 0x0a, 0x13, 0x72, 0x65, 0x71,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x72, 0x65, 0x71, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x13, 0x72, 0x65,
	0x71, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x69, 0x66,
	0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x47, 0x69, 0x66, 0x74, 0x48, 0x00, 0x52, 0x13, 0x72, 0x65, 0x71, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x69, 0x66, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x41,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x22, 0xe1, 0x07, 0x0a, 0x10, 0x53, 0x32, 0x43, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x61, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x49, 0x0a, 0x11, 0x72, 0x73, 0x70, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x52, 0x73, 0x70, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x48, 0x00, 0x52, 0x11, 0x72,
	0x73, 0x70, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x12, 0x43, 0x0a, 0x0f, 0x72, 0x73, 0x70, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x41, 0x63, 0x74, 0x52, 0x73, 0x70, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x73, 0x70, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x72, 0x73, 0x70, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x52, 0x73, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x73, 0x70, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x72, 0x73,
	0x70, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x52, 0x73, 0x70, 0x54, 0x61, 0x73, 0x6b,
	0x50, 0x6c, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x73, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x50,
	0x6c, 0x61, 0x6e, 0x12, 0x43, 0x0a, 0x0f, 0x72, 0x73, 0x70, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x44,
	0x61, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x52, 0x73, 0x70, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x44, 0x61,
	0x79, 0x53, 0x69, 0x67, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x73, 0x70, 0x53, 0x65, 0x76, 0x65,
	0x6e, 0x44, 0x61, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x52, 0x0a, 0x14, 0x72, 0x73, 0x70, 0x53,
	0x75, 0x70, 0x65, 0x72, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x47, 0x69, 0x66, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74,
	0x52, 0x73, 0x70, 0x53, 0x75, 0x70, 0x65, 0x72, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x47, 0x69, 0x66, 0x74, 0x48, 0x00, 0x52, 0x14, 0x72, 0x73, 0x70, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x47, 0x69, 0x66, 0x74, 0x12, 0x4c, 0x0a, 0x12,
	0x72, 0x73, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x54, 0x61,
	0x73, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x41,
	0x63, 0x74, 0x52, 0x73, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64,
	0x54, 0x61, 0x73, 0x6b, 0x48, 0x00, 0x52, 0x12, 0x72, 0x73, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x3a, 0x0a, 0x0c, 0x72, 0x73,
	0x70, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x52, 0x73, 0x70, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x73, 0x70, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x43, 0x0a, 0x0f, 0x72, 0x73, 0x70, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x52, 0x73, 0x70, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x73, 0x70, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x72,
	0x73, 0x70, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x52, 0x73, 0x70,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x72,
	0x73, 0x70, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x12, 0x4f, 0x0a,
	0x13, 0x72, 0x73, 0x70, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x41, 0x63, 0x74, 0x52, 0x73, 0x70, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x72, 0x73, 0x70, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x12, 0x4f,
	0x0a, 0x13, 0x72, 0x73, 0x70, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x47, 0x69, 0x66, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x41, 0x63, 0x74, 0x52, 0x73, 0x70, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x47, 0x69, 0x66, 0x74, 0x48, 0x00, 0x52, 0x13, 0x72, 0x73, 0x70, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x69, 0x66, 0x74, 0x42,
	0x08, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x52, 0x73, 0x70, 0x22, 0x14, 0x0a, 0x12, 0x54, 0x61, 0x73,
	0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x22,
	0x2f, 0x0a, 0x15, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x22, 0xd2, 0x01, 0x0a, 0x0f, 0x43, 0x32, 0x53, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x12, 0x74, 0x61, 0x73, 0x6b,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x12, 0x74, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x52, 0x0a, 0x15, 0x74, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x15, 0x74, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x42, 0x0c, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x65, 0x74, 0x52, 0x73, 0x70, 0x22, 0x2f, 0x0a, 0x15, 0x54,
	0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0xd2, 0x01, 0x0a,
	0x0f, 0x53, 0x32, 0x43, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x75, 0x69, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x12, 0x74, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x47, 0x65, 0x74, 0x52, 0x73, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x47, 0x65, 0x74, 0x52, 0x73, 0x70, 0x48, 0x00, 0x52, 0x12, 0x74, 0x61, 0x73,
	0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x65, 0x74, 0x52, 0x73, 0x70, 0x12,
	0x52, 0x0a, 0x15, 0x74, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x48, 0x00, 0x52, 0x15, 0x74, 0x61,
	0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x73, 0x70, 0x42, 0x0c, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x40, 0x0a, 0x0e, 0x43, 0x32, 0x53, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53, 0x75, 0x70,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x7d, 0x0a, 0x0e, 0x53, 0x32, 0x43, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x69, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64,
	0x12, 0x30, 0x0a, 0x13, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x73,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x24, 0x0a, 0x0e, 0x43, 0x32, 0x53, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x63,
	0x74, 0x43, 0x66, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x22, 0xb8, 0x01, 0x0a, 0x0e, 0x53, 0x32, 0x43,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x63, 0x74, 0x43, 0x66, 0x67, 0x12, 0x25, 0x0a, 0x07, 0x65,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x43, 0x66, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x66, 0x67, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x43, 0x66, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x61, 0x63,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72,
	0x61, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x0c,
	0x43, 0x32, 0x53, 0x52, 0x61, 0x6e, 0x6b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x61, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x72, 0x61, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x6e,
	0x6b, 0x45, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b,
	0x45, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x22,
	0xfa, 0x01, 0x0a, 0x0c, 0x53, 0x32, 0x43, 0x52, 0x61, 0x6e, 0x6b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x07,
	0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x72,
	0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x72, 0x61,
	0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x72, 0x61, 0x6e, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x72, 0x61, 0x6e,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0c, 0x73, 0x65, 0x6c,
	0x66, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c,
	0x73, 0x65, 0x6c, 0x66, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8e, 0x01, 0x0a,
	0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x45, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x22, 0x3b, 0x0a,
	0x0c, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a,
	0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x63, 0x0a, 0x0d, 0x43, 0x32,
	0x53, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x37, 0x0a,
	0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x42, 0x07, 0x0a, 0x05, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x22,
	0xaa, 0x01, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x52, 0x73, 0x70,
	0x12, 0x3b, 0x0a, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x69,
	0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a,
	0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0b, 0x70, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0b, 0x70, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8c, 0x01, 0x0a,
	0x0d, 0x53, 0x32, 0x43, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x6f, 0x78, 0x52, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x6f, 0x70, 0x65,
	0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x52, 0x73, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x52,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x52,
	0x73, 0x70, 0x42, 0x07, 0x0a, 0x05, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x22, 0x0f, 0x0a, 0x0d, 0x42,
	0x6c, 0x75, 0x65, 0x56, 0x69, 0x70, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x22, 0x39, 0x0a, 0x0d,
	0x42, 0x6c, 0x75, 0x65, 0x56, 0x69, 0x70, 0x47, 0x65, 0x74, 0x52, 0x73, 0x70, 0x12, 0x28, 0x0a,
	0x07, 0x62, 0x6c, 0x75, 0x65, 0x56, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x75, 0x65, 0x56, 0x69, 0x70, 0x52, 0x07,
	0x62, 0x6c, 0x75, 0x65, 0x56, 0x69, 0x70, 0x22, 0x4c, 0x0a, 0x10, 0x42, 0x6c, 0x75, 0x65, 0x56,
	0x69, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x41, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x41, 0x6c, 0x6c, 0x22, 0xab, 0x01, 0x0a, 0x0d, 0x43, 0x32, 0x53, 0x42, 0x6c, 0x75,
	0x65, 0x56, 0x69, 0x70, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x0d, 0x62, 0x6c, 0x75,
	0x65, 0x56, 0x69, 0x70, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x6c, 0x75, 0x65, 0x56, 0x69, 0x70, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0d, 0x62, 0x6c, 0x75, 0x65, 0x56, 0x69, 0x70, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x43, 0x0a, 0x10, 0x62, 0x6c, 0x75, 0x65, 0x56, 0x69, 0x70,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x6c, 0x75, 0x65, 0x56, 0x69, 0x70, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x10, 0x62, 0x6c, 0x75, 0x65, 0x56, 0x69,
	0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x42, 0x07, 0x0a, 0x05, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x53, 0x32, 0x43, 0x42, 0x6c, 0x75, 0x65, 0x56,
	0x69, 0x70, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x3a, 0x0a, 0x0d, 0x62, 0x6c, 0x75, 0x65, 0x56, 0x69, 0x70, 0x47, 0x65, 0x74, 0x52, 0x73,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x6c,
	0x75, 0x65, 0x56, 0x69, 0x70, 0x47, 0x65, 0x74, 0x52, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x62,
	0x6c, 0x75, 0x65, 0x56, 0x69, 0x70, 0x47, 0x65, 0x74, 0x52, 0x73, 0x70, 0x42, 0x07, 0x0a, 0x05,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x22, 0x12, 0x0a, 0x10, 0x51, 0x51, 0x48, 0x61, 0x6c, 0x6c, 0x47,
	0x69, 0x66, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x22, 0x41, 0x0a, 0x10, 0x51, 0x51, 0x48,
	0x61, 0x6c, 0x6c, 0x47, 0x69, 0x66, 0x74, 0x47, 0x65, 0x74, 0x52, 0x73, 0x70, 0x12, 0x2d, 0x0a,
	0x08, 0x67, 0x69, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x51, 0x51, 0x48, 0x61, 0x6c, 0x6c, 0x47, 0x69,
	0x66, 0x74, 0x52, 0x08, 0x67, 0x69, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x31, 0x0a, 0x13,
	0x51, 0x51, 0x48, 0x61, 0x6c, 0x6c, 0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22,
	0x98, 0x01, 0x0a, 0x10, 0x43, 0x32, 0x53, 0x51, 0x51, 0x48, 0x61, 0x6c, 0x6c, 0x47, 0x69, 0x66,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x51, 0x51, 0x48,
	0x61, 0x6c, 0x6c, 0x47, 0x69, 0x66, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x06, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x51, 0x51, 0x48, 0x61, 0x6c, 0x6c, 0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x42, 0x07, 0x0a, 0x05, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x22, 0x87, 0x01, 0x0a, 0x10, 0x53,
	0x32, 0x43, 0x51, 0x51, 0x48, 0x61, 0x6c, 0x6c, 0x47, 0x69, 0x66, 0x74, 0x52, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75,
	0x69, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x47, 0x65,
	0x74, 0x52, 0x73, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x51, 0x51, 0x48, 0x61, 0x6c, 0x6c, 0x47, 0x69, 0x66, 0x74, 0x47, 0x65, 0x74, 0x52, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x06, 0x47, 0x65, 0x74, 0x52, 0x73, 0x70, 0x42, 0x07, 0x0a, 0x05, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x22, 0x60, 0x0a, 0x0b, 0x43, 0x32, 0x53, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x22, 0x78, 0x0a, 0x0b, 0x53, 0x32, 0x43, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x07, 0x65, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x2e, 0x0a, 0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x2a, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x65, 0x77, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x76, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x76, 0x6c, 0x22, 0x38, 0x0a, 0x0e,
	0x43, 0x32, 0x53, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x69, 0x64, 0x73, 0x22, 0x6d, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x42, 0x72,
	0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x68, 0x65, 0x61, 0x64,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x7f, 0x0a, 0x0e, 0x53, 0x32, 0x43, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x07, 0x65,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x62, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x62, 0x72, 0x69, 0x65,
	0x66, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xa0, 0x02, 0x0a, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x12, 0x32, 0x0a, 0x0b, 0x53, 0x32, 0x43, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x32, 0x43, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x53, 0x32, 0x43, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x0f, 0x53, 0x32, 0x43, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x53, 0x32, 0x43, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x0f, 0x53, 0x32, 0x43, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x44, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x11, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x53, 0x32,
	0x43, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x53, 0x32, 0x43, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x07, 0x53, 0x32, 0x43, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x35, 0x0a, 0x0c, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53,
	0x32, 0x43, 0x50, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x0c, 0x53, 0x32, 0x43,
	0x50, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x6d, 0x0a, 0x13, 0x53, 0x32, 0x43,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x73, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x73, 0x49, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x43, 0x68, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x43, 0x68, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x2a, 0x9b, 0x0d, 0x0a, 0x03, 0x50, 0x43, 0x4b,
	0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0c, 0x43, 0x32, 0x53, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x49, 0x44,
	0x10, 0xe9, 0x07, 0x12, 0x11, 0x0a, 0x0c, 0x53, 0x32, 0x43, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x5f, 0x49, 0x44, 0x10, 0xd1, 0x0f, 0x12, 0x10, 0x0a, 0x0b, 0x43, 0x32, 0x53, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x5f, 0x49, 0x44, 0x10, 0xea, 0x07, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x32, 0x43, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x49, 0x44, 0x10, 0xd2, 0x0f, 0x12, 0x19, 0x0a, 0x14, 0x43, 0x32,
	0x53, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x49, 0x44, 0x10, 0xeb, 0x07, 0x12, 0x19, 0x0a, 0x14, 0x53, 0x32, 0x43, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x49, 0x44, 0x10, 0xd3, 0x0f,
	0x12, 0x17, 0x0a, 0x12, 0x43, 0x32, 0x53, 0x4d, 0x6f, 0x76, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x49, 0x44, 0x10, 0xec, 0x07, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x32, 0x43,
	0x4d, 0x6f, 0x76, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x49, 0x44, 0x10,
	0xd4, 0x0f, 0x12, 0x18, 0x0a, 0x13, 0x43, 0x32, 0x53, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x49, 0x44, 0x10, 0xed, 0x07, 0x12, 0x18, 0x0a, 0x13,
	0x53, 0x32, 0x43, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x5f, 0x49, 0x44, 0x10, 0xd5, 0x0f, 0x12, 0x15, 0x0a, 0x10, 0x43, 0x32, 0x53, 0x50, 0x6c, 0x61,
	0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x49, 0x44, 0x10, 0xef, 0x07, 0x12, 0x15, 0x0a,
	0x10, 0x53, 0x32, 0x43, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x49,
	0x44, 0x10, 0xd7, 0x0f, 0x12, 0x15, 0x0a, 0x10, 0x43, 0x32, 0x53, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x49, 0x44, 0x10, 0xf0, 0x07, 0x12, 0x15, 0x0a, 0x10, 0x53,
	0x32, 0x43, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x49, 0x44, 0x10,
	0xd8, 0x0f, 0x12, 0x14, 0x0a, 0x0f, 0x43, 0x32, 0x53, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x5f, 0x49, 0x44, 0x10, 0xf1, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x32, 0x43, 0x57,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x49, 0x44, 0x10, 0xd9, 0x0f, 0x12, 0x13,
	0x0a, 0x0e, 0x43, 0x32, 0x53, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x49, 0x44,
	0x10, 0xf2, 0x07, 0x12, 0x13, 0x0a, 0x0e, 0x53, 0x32, 0x43, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x5f, 0x49, 0x44, 0x10, 0xda, 0x0f, 0x12, 0x17, 0x0a, 0x12, 0x43, 0x32, 0x53, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x49, 0x44, 0x10, 0xf3,
	0x07, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x32, 0x43, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x5f, 0x49, 0x44, 0x10, 0xdb, 0x0f, 0x12, 0x18, 0x0a, 0x13, 0x43, 0x32,
	0x53, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x49,
	0x44, 0x10, 0xf4, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x32, 0x43, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x61, 0x73, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x49, 0x44, 0x10, 0xdc, 0x0f, 0x12, 0x14,
	0x0a, 0x0f, 0x43, 0x32, 0x53, 0x53, 0x68, 0x6f, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x49,
	0x44, 0x10, 0xf5, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x32, 0x43, 0x53, 0x68, 0x6f, 0x70, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x5f, 0x49, 0x44, 0x10, 0xdd, 0x0f, 0x12, 0x0f, 0x0a, 0x0a, 0x43, 0x32,
	0x53, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x49, 0x44, 0x10, 0xf6, 0x07, 0x12, 0x0f, 0x0a, 0x0a, 0x53,
	0x32, 0x43, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x49, 0x44, 0x10, 0xde, 0x0f, 0x12, 0x15, 0x0a, 0x10,
	0x43, 0x32, 0x53, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x49, 0x44,
	0x10, 0xf7, 0x07, 0x12, 0x15, 0x0a, 0x10, 0x53, 0x32, 0x43, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x5f, 0x49, 0x44, 0x10, 0xdf, 0x0f, 0x12, 0x12, 0x0a, 0x0d, 0x43, 0x32,
	0x53, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x5f, 0x49, 0x44, 0x10, 0xf9, 0x07, 0x12, 0x12,
	0x0a, 0x0d, 0x53, 0x32, 0x43, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x5f, 0x49, 0x44, 0x10,
	0xe1, 0x0f, 0x12, 0x13, 0x0a, 0x0e, 0x43, 0x32, 0x53, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x49, 0x44, 0x10, 0xfa, 0x07, 0x12, 0x13, 0x0a, 0x0e, 0x53, 0x32, 0x43, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x49, 0x44, 0x10, 0xe2, 0x0f, 0x12, 0x16, 0x0a, 0x11,
	0x43, 0x32, 0x53, 0x50, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x49,
	0x44, 0x10, 0xfc, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x49, 0x44, 0x10, 0xe4, 0x0f, 0x12, 0x0e, 0x0a, 0x09,
	0x43, 0x32, 0x53, 0x50, 0x65, 0x74, 0x5f, 0x49, 0x44, 0x10, 0xfd, 0x07, 0x12, 0x0e, 0x0a, 0x09,
	0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x5f, 0x49, 0x44, 0x10, 0xe5, 0x0f, 0x12, 0x14, 0x0a, 0x0f,
	0x43, 0x32, 0x53, 0x50, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x49, 0x44, 0x10,
	0xfe, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x32, 0x43, 0x50, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x5f, 0x49, 0x44, 0x10, 0xe6, 0x0f, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x32, 0x43, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x49, 0x44, 0x10, 0xe7,
	0x0f, 0x12, 0x12, 0x0a, 0x0d, 0x43, 0x32, 0x53, 0x4e, 0x50, 0x43, 0x49, 0x6e, 0x66, 0x6f, 0x5f,
	0x49, 0x44, 0x10, 0x80, 0x08, 0x12, 0x12, 0x0a, 0x0d, 0x53, 0x32, 0x43, 0x4e, 0x50, 0x43, 0x49,
	0x6e, 0x66, 0x6f, 0x5f, 0x49, 0x44, 0x10, 0xe8, 0x0f, 0x12, 0x13, 0x0a, 0x0e, 0x43, 0x32, 0x53,
	0x42, 0x75, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x49, 0x44, 0x10, 0x81, 0x08, 0x12, 0x13,
	0x0a, 0x0e, 0x53, 0x32, 0x43, 0x42, 0x75, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x49, 0x44,
	0x10, 0xe9, 0x0f, 0x12, 0x14, 0x0a, 0x0f, 0x43, 0x32, 0x53, 0x4d, 0x61, 0x6c, 0x6c, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x5f, 0x49, 0x44, 0x10, 0x82, 0x08, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x32, 0x43,
	0x4d, 0x61, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x49, 0x44, 0x10, 0xea, 0x0f, 0x12,
	0x16, 0x0a, 0x11, 0x43, 0x32, 0x53, 0x50, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x49, 0x44, 0x10, 0x83, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x32, 0x43, 0x50, 0x65,
	0x74, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x49, 0x44, 0x10, 0xeb, 0x0f, 0x12,
	0x14, 0x0a, 0x0f, 0x43, 0x32, 0x53, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x5f,
	0x49, 0x44, 0x10, 0x84, 0x08, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x32, 0x43, 0x44, 0x61, 0x69, 0x6c,
	0x79, 0x53, 0x69, 0x67, 0x6e, 0x5f, 0x49, 0x44, 0x10, 0xec, 0x0f, 0x12, 0x18, 0x0a, 0x13, 0x43,
	0x32, 0x53, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x5f,
	0x49, 0x44, 0x10, 0x85, 0x08, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x32, 0x43, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x49, 0x44, 0x10, 0xed, 0x0f, 0x12,
	0x17, 0x0a, 0x12, 0x43, 0x32, 0x53, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x5f, 0x49, 0x44, 0x10, 0x86, 0x08, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x32, 0x43, 0x54,
	0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x49, 0x44, 0x10, 0xee,
	0x0f, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x32, 0x53, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53, 0x75, 0x70,
	0x70, 0x6c, 0x79, 0x5f, 0x49, 0x44, 0x10, 0x87, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x32, 0x43,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x49, 0x44, 0x10, 0xef,
	0x0f, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x32, 0x53, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x63, 0x74,
	0x43, 0x66, 0x67, 0x5f, 0x49, 0x44, 0x10, 0x88, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x32, 0x43,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x63, 0x74, 0x43, 0x66, 0x67, 0x5f, 0x49, 0x44, 0x10, 0xf0,
	0x0f, 0x12, 0x14, 0x0a, 0x0f, 0x43, 0x32, 0x53, 0x52, 0x61, 0x6e, 0x6b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x5f, 0x49, 0x44, 0x10, 0x89, 0x08, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x32, 0x43, 0x52, 0x61,
	0x6e, 0x6b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x49, 0x44, 0x10, 0xf1, 0x0f, 0x12, 0x15, 0x0a,
	0x10, 0x43, 0x32, 0x53, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x5f, 0x49,
	0x44, 0x10, 0x8a, 0x08, 0x12, 0x15, 0x0a, 0x10, 0x53, 0x32, 0x43, 0x4f, 0x70, 0x65, 0x6e, 0x42,
	0x6f, 0x78, 0x52, 0x73, 0x70, 0x5f, 0x49, 0x44, 0x10, 0xf2, 0x0f, 0x12, 0x1c, 0x0a, 0x17, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x49, 0x44, 0x10, 0xf3, 0x0f, 0x12, 0x1a, 0x0a, 0x15, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x49, 0x44, 0x10, 0xf4, 0x0f, 0x12, 0x15, 0x0a, 0x10, 0x43, 0x32, 0x53, 0x42, 0x6c, 0x75, 0x65,
	0x56, 0x69, 0x70, 0x52, 0x65, 0x71, 0x5f, 0x49, 0x44, 0x10, 0x8d, 0x08, 0x12, 0x15, 0x0a, 0x10,
	0x53, 0x32, 0x43, 0x42, 0x6c, 0x75, 0x65, 0x56, 0x69, 0x70, 0x52, 0x73, 0x70, 0x5f, 0x49, 0x44,
	0x10, 0xf5, 0x0f, 0x12, 0x18, 0x0a, 0x13, 0x43, 0x32, 0x53, 0x51, 0x51, 0x48, 0x61, 0x6c, 0x6c,
	0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x71, 0x5f, 0x49, 0x44, 0x10, 0x8e, 0x08, 0x12, 0x18, 0x0a,
	0x13, 0x53, 0x32, 0x43, 0x51, 0x51, 0x48, 0x61, 0x6c, 0x6c, 0x47, 0x69, 0x66, 0x74, 0x52, 0x73,
	0x70, 0x5f, 0x49, 0x44, 0x10, 0xf6, 0x0f, 0x12, 0x13, 0x0a, 0x0e, 0x43, 0x32, 0x53, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x5f, 0x49, 0x44, 0x10, 0x8f, 0x08, 0x12, 0x13, 0x0a, 0x0e,
	0x53, 0x32, 0x43, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x73, 0x70, 0x5f, 0x49, 0x44, 0x10, 0xf7,
	0x0f, 0x12, 0x16, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x65, 0x77, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x49, 0x44, 0x10, 0xf8, 0x0f, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x32, 0x53,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x5f, 0x49, 0x44, 0x10, 0x91,
	0x08, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x32, 0x43, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x73, 0x70, 0x5f, 0x49, 0x44, 0x10, 0xf9, 0x0f, 0x12, 0x1b, 0x0a, 0x16, 0x53, 0x32, 0x43,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x49, 0x44, 0x10, 0xfa, 0x0f, 0x2a, 0x4d, 0x0a, 0x08, 0x4c, 0x4c, 0x4b, 0x4d, 0x73, 0x67,
	0x49, 0x64, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x4c, 0x4b, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x32, 0x53, 0x4c, 0x69, 0x61, 0x6e,
	0x4c, 0x69, 0x61, 0x6e, 0x4b, 0x61, 0x6e, 0x5f, 0x49, 0x44, 0x10, 0xb9, 0x17, 0x12, 0x16, 0x0a,
	0x11, 0x53, 0x32, 0x43, 0x4c, 0x69, 0x61, 0x6e, 0x4c, 0x69, 0x61, 0x6e, 0x4b, 0x61, 0x6e, 0x5f,
	0x49, 0x44, 0x10, 0xa1, 0x1f, 0x2a, 0x68, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x1e, 0x0a, 0x1a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x6e, 0x64, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x65, 0x10, 0x03, 0x2a,
	0x91, 0x01, 0x0a, 0x0d, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x4f, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x4f, 0x5f, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x4f, 0x5f, 0x52, 0x65, 0x70, 0x61,
	0x69, 0x72, 0x45, 0x6e, 0x64, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x4f, 0x5f, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x42,
	0x4f, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6e, 0x64, 0x10, 0x04, 0x12, 0x11, 0x0a,
	0x0d, 0x42, 0x4f, 0x5f, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x65, 0x10, 0x05,
	0x12, 0x11, 0x0a, 0x0d, 0x42, 0x4f, 0x5f, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4c, 0x76,
	0x6c, 0x10, 0x0a, 0x2a, 0x37, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x13, 0x0a, 0x0f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x46, 0x72,
	0x6f, 0x6d, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x61, 0x72, 0x65, 0x48, 0x6f, 0x75, 0x73,
	0x65, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x61, 0x67, 0x10, 0x02, 0x2a, 0x27, 0x0a, 0x09,
	0x50, 0x72, 0x6f, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x53,
	0x65, 0x6c, 0x6c, 0x10, 0x01, 0x2a, 0x5a, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x43, 0x6d, 0x64, 0x12, 0x18, 0x0a, 0x14, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x43, 0x6d, 0x64, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0f,
	0x0a, 0x0b, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x10, 0x02, 0x12,
	0x10, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x10,
	0x03, 0x2a, 0x45, 0x0a, 0x0c, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x43, 0x6d,
	0x64, 0x12, 0x17, 0x0a, 0x13, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x43, 0x6d,
	0x64, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x57, 0x61, 0x72, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x10, 0x02, 0x2a, 0x48, 0x0a, 0x12, 0x57, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x43, 0x6d, 0x64, 0x12, 0x10,
	0x0a, 0x0c, 0x45, 0x57, 0x45, 0x43, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x57, 0x45, 0x43, 0x5f, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x10, 0x01,
	0x12, 0x10, 0x0a, 0x0c, 0x45, 0x57, 0x45, 0x43, 0x5f, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73,
	0x10, 0x02, 0x2a, 0x27, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x10, 0x01, 0x2a, 0x80, 0x01, 0x0a, 0x0f,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x43, 0x6d, 0x64, 0x12,
	0x1a, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x43,
	0x6d, 0x64, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x10, 0x02, 0x12, 0x0e, 0x0a,
	0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x6e, 0x64, 0x10, 0x03, 0x12, 0x0f, 0x0a,
	0x0b, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x10, 0x04, 0x12, 0x0e,
	0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x65, 0x10, 0x05, 0x2a, 0x26,
	0x0a, 0x0c, 0x53, 0x68, 0x6f, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x43, 0x6d, 0x64, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x4f, 0x5f, 0x47, 0x65, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x4f,
	0x5f, 0x42, 0x75, 0x79, 0x10, 0x01, 0x2a, 0x5d, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x43, 0x6d, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x4f, 0x43, 0x5f, 0x47, 0x65,
	0x74, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x4f, 0x43, 0x5f, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x4f, 0x43, 0x5f, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x4f, 0x43, 0x5f, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x4f, 0x43, 0x5f, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x41, 0x6c, 0x6c, 0x10, 0x04, 0x2a, 0x38, 0x0a, 0x07, 0x45, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x52, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x45, 0x52, 0x5f, 0x4c, 0x76, 0x6c, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d,
	0x45, 0x52, 0x5f, 0x43, 0x6f, 0x6d, 0x66, 0x6f, 0x72, 0x74, 0x4c, 0x76, 0x6c, 0x10, 0x02, 0x2a,
	0x3b, 0x0a, 0x0d, 0x45, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x4d, 0x54, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x4d, 0x54, 0x5f, 0x4d, 0x61, 0x69, 0x6e, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x45, 0x4d, 0x54, 0x5f, 0x53, 0x75, 0x62, 0x10, 0x02, 0x2a, 0x58, 0x0a, 0x0e,
	0x45, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x0b,
	0x0a, 0x07, 0x45, 0x44, 0x4f, 0x5f, 0x47, 0x65, 0x74, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x45,
	0x44, 0x4f, 0x5f, 0x4c, 0x6f, 0x61, 0x64, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x44, 0x4f,
	0x5f, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x44, 0x4f, 0x5f,
	0x46, 0x69, 0x6e, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x44, 0x4f, 0x5f, 0x52, 0x65, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x10, 0x04, 0x2a, 0x6f, 0x0a, 0x11, 0x45, 0x4c, 0x69, 0x61, 0x6e, 0x4c,
	0x69, 0x61, 0x6e, 0x4b, 0x61, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12, 0x0d, 0x0a, 0x09, 0x45,
	0x4c, 0x4c, 0x4b, 0x4f, 0x5f, 0x47, 0x45, 0x54, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x4c,
	0x4c, 0x4b, 0x4f, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x11,
	0x0a, 0x0d, 0x45, 0x4c, 0x4c, 0x4b, 0x4f, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x4c, 0x4c, 0x4b, 0x4f, 0x5f, 0x47, 0x41, 0x4d, 0x49, 0x4e,
	0x47, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x4c, 0x4c, 0x4b, 0x4f, 0x5f, 0x47, 0x41, 0x4d,
	0x45, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x04, 0x2a, 0x4a, 0x0a, 0x10, 0x45, 0x4c, 0x4c, 0x4b, 0x47,
	0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x45,
	0x4c, 0x4c, 0x4b, 0x47, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x45, 0x4c, 0x4c, 0x4b, 0x47, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x4c, 0x4c, 0x4b, 0x47, 0x5f, 0x47, 0x41, 0x4d, 0x49, 0x4e,
	0x47, 0x10, 0x02, 0x2a, 0x5d, 0x0a, 0x11, 0x45, 0x4c, 0x69, 0x61, 0x6e, 0x4c, 0x69, 0x61, 0x6e,
	0x4b, 0x61, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x4c, 0x4c, 0x4b,
	0x4d, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x45,
	0x4c, 0x4c, 0x4b, 0x4d, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x45, 0x4c, 0x4c, 0x4b, 0x4d, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x4f, 0x55, 0x54, 0x10, 0x02,
	0x12, 0x10, 0x0a, 0x0c, 0x45, 0x4c, 0x4c, 0x4b, 0x4d, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c,
	0x10, 0x03, 0x2a, 0xa9, 0x01, 0x0a, 0x18, 0x45, 0x4c, 0x69, 0x61, 0x6e, 0x4c, 0x69, 0x61, 0x6e,
	0x4b, 0x61, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x12,
	0x12, 0x0a, 0x0e, 0x45, 0x4c, 0x4c, 0x4b, 0x4d, 0x4f, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x4c, 0x4c, 0x4b, 0x4d, 0x4f, 0x5f, 0x43, 0x4f,
	0x4e, 0x46, 0x49, 0x52, 0x4d, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x4c, 0x4c, 0x4b, 0x4d,
	0x4f, 0x5f, 0x52, 0x45, 0x46, 0x55, 0x53, 0x45, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x4c,
	0x4c, 0x4b, 0x4d, 0x4f, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x52, 0x54, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x45, 0x4c,
	0x4c, 0x4b, 0x4d, 0x4f, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x45, 0x4e,
	0x44, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x45, 0x44, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x45,
	0x4c, 0x4c, 0x4b, 0x4d, 0x4f, 0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x10, 0x05, 0x2a, 0x75,
	0x0a, 0x11, 0x45, 0x50, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x50, 0x42, 0x4f, 0x5f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x50, 0x42, 0x4f, 0x5f, 0x47, 0x45,
	0x54, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x50, 0x42, 0x4f, 0x5f, 0x41, 0x44, 0x44, 0x10,
	0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x50, 0x42, 0x4f, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x4c, 0x45,
	0x52, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x50, 0x42, 0x4f, 0x5f, 0x53,
	0x54, 0x4f, 0x50, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x50, 0x42, 0x4f, 0x5f, 0x41, 0x57,
	0x41, 0x52, 0x44, 0x10, 0x05, 0x2a, 0xac, 0x01, 0x0a, 0x09, 0x45, 0x50, 0x65, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x50, 0x4f, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x50, 0x4f, 0x5f, 0x46, 0x45, 0x54, 0x43,
	0x48, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x50, 0x4f, 0x5f, 0x55, 0x50, 0x47, 0x52, 0x41,
	0x44, 0x45, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x50, 0x4f, 0x5f, 0x41, 0x53, 0x53, 0x49,
	0x47, 0x4e, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x50, 0x4f, 0x5f, 0x55, 0x4e, 0x5f, 0x41,
	0x53, 0x53, 0x49, 0x47, 0x4e, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x50, 0x4f, 0x5f, 0x52,
	0x45, 0x53, 0x45, 0x54, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x50, 0x4f, 0x5f, 0x53, 0x4b,
	0x49, 0x4c, 0x4c, 0x5f, 0x55, 0x50, 0x47, 0x52, 0x41, 0x44, 0x45, 0x10, 0x06, 0x12, 0x14, 0x0a,
	0x10, 0x45, 0x50, 0x4f, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47,
	0x45, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x50, 0x4f, 0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41,
	0x53, 0x45, 0x10, 0x08, 0x2a, 0x57, 0x0a, 0x09, 0x45, 0x4e, 0x50, 0x43, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x4e, 0x4f, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x4e, 0x4f, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x01,
	0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x4e, 0x4f, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x10, 0x02,
	0x12, 0x0c, 0x0a, 0x08, 0x45, 0x4e, 0x4f, 0x5f, 0x47, 0x49, 0x56, 0x45, 0x10, 0x03, 0x12, 0x0d,
	0x0a, 0x09, 0x45, 0x4e, 0x4f, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x04, 0x2a, 0x29, 0x0a,
	0x0d, 0x45, 0x4d, 0x61, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x4d, 0x4f, 0x54, 0x5f, 0x47, 0x65, 0x74, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4d,
	0x4f, 0x54, 0x5f, 0x42, 0x75, 0x79, 0x10, 0x01, 0x2a, 0x42, 0x0a, 0x12, 0x45, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c,
	0x0a, 0x08, 0x44, 0x53, 0x4f, 0x54, 0x5f, 0x47, 0x65, 0x74, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x44, 0x53, 0x4f, 0x54, 0x5f, 0x53, 0x69, 0x67, 0x6e, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x44,
	0x53, 0x4f, 0x54, 0x5f, 0x52, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x10, 0x02, 0x2a, 0x37, 0x0a, 0x13,
	0x53, 0x65, 0x76, 0x65, 0x6e, 0x44, 0x61, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x44, 0x53, 0x52, 0x5f, 0x47, 0x45, 0x54, 0x5f,
	0x49, 0x4e, 0x46, 0x4f, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x44, 0x53, 0x52, 0x5f, 0x53,
	0x49, 0x47, 0x4e, 0x10, 0x01, 0x2a, 0x56, 0x0a, 0x19, 0x45, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x54, 0x4c, 0x54, 0x4f, 0x59, 0x5f, 0x49, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x54, 0x4c, 0x54, 0x4f, 0x59,
	0x5f, 0x47, 0x65, 0x74, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x54, 0x4c, 0x54, 0x4f, 0x59,
	0x5f, 0x54, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x10, 0x02, 0x2a, 0x32, 0x0a,
	0x10, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x54, 0x52, 0x54, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x00,
	0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x54, 0x52, 0x54, 0x5f, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x10,
	0x01, 0x2a, 0x52, 0x0a, 0x13, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x62, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x52, 0x52, 0x54,
	0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x52, 0x52, 0x54, 0x5f,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x10, 0x01, 0x12, 0x15,
	0x0a, 0x11, 0x47, 0x52, 0x52, 0x54, 0x5f, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x10, 0x02, 0x2a, 0x35, 0x0a, 0x12, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x54,
	0x47, 0x52, 0x54, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x47,
	0x52, 0x54, 0x5f, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x10, 0x01, 0x2a, 0x39, 0x0a, 0x17,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x47, 0x52, 0x54, 0x5f,
	0x49, 0x6e, 0x66, 0x6f, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x47, 0x52, 0x54, 0x5f, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x10, 0x01, 0x2a, 0x4e, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x61, 0x6e, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f,
	0x6d, 0x66, 0x6f, 0x72, 0x74, 0x10, 0x02, 0x2a, 0x45, 0x0a, 0x0f, 0x45, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x4e,
	0x44, 0x54, 0x5f, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x4e, 0x44, 0x54, 0x5f, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x10, 0x01, 0x2a, 0x59,
	0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x0e, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x52, 0x45, 0x41, 0x44,
	0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4d, 0x49, 0x49, 0x4c, 0x5f, 0x47, 0x45, 0x54, 0x5f,
	0x41, 0x57, 0x41, 0x52, 0x44, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x4d, 0x41, 0x49, 0x4c,
	0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x42, 0x0d, 0x5a, 0x0b, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2f, 0x70, 0x62, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_game_msg_proto_rawDescOnce sync.Once
	file_game_msg_proto_rawDescData = file_game_msg_proto_rawDesc
)

func file_game_msg_proto_rawDescGZIP() []byte {
	file_game_msg_proto_rawDescOnce.Do(func() {
		file_game_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_game_msg_proto_rawDescData)
	})
	return file_game_msg_proto_rawDescData
}

var file_game_msg_proto_enumTypes = make([]protoimpl.EnumInfo, 34)
var file_game_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 157)
var file_game_msg_proto_goTypes = []interface{}{
	(PCK)(0),                         // 0: msg.PCK
	(LLKMsgId)(0),                    // 1: msg.LLKMsgId
	(CreateBuildingOpera)(0),         // 2: msg.CreateBuildingOpera
	(BuildingOpera)(0),               // 3: msg.BuildingOpera
	(PropFrom)(0),                    // 4: msg.PropFrom
	(PropOpera)(0),                   // 5: msg.PropOpera
	(OrderOperaCmd)(0),               // 6: msg.OrderOperaCmd
	(WarehouseCmd)(0),                // 7: msg.WarehouseCmd
	(WarehouseExpandCmd)(0),          // 8: msg.WarehouseExpandCmd
	(ItemChange)(0),                  // 9: msg.ItemChange
	(ProductOperaCmd)(0),             // 10: msg.ProductOperaCmd
	(ShopOperaCmd)(0),                // 11: msg.ShopOperaCmd
	(TaskOperaCmd)(0),                // 12: msg.TaskOperaCmd
	(EReward)(0),                     // 13: msg.EReward
	(EMaterialType)(0),               // 14: msg.EMaterialType
	(EDeliveryOpera)(0),              // 15: msg.EDeliveryOpera
	(ELianLianKanOpera)(0),           // 16: msg.ELianLianKanOpera
	(ELLKGetOperaType)(0),            // 17: msg.ELLKGetOperaType
	(ELianLianKanMatch)(0),           // 18: msg.ELianLianKanMatch
	(ELianLianKanMatchedOpera)(0),    // 19: msg.ELianLianKanMatchedOpera
	(EPetBuildingOpera)(0),           // 20: msg.EPetBuildingOpera
	(EPetOpera)(0),                   // 21: msg.EPetOpera
	(ENPCOpera)(0),                   // 22: msg.ENPCOpera
	(EMallOperType)(0),               // 23: msg.EMallOperType
	(EDailySignOperType)(0),          // 24: msg.EDailySignOperType
	(SevenDaySignReqType)(0),         // 25: msg.SevenDaySignReqType
	(ETimeLimitedTaskOperaType)(0),   // 26: msg.ETimeLimitedTaskOperaType
	(DailyTaskReqType)(0),            // 27: msg.DailyTaskReqType
	(GlobalRebateReqType)(0),         // 28: msg.GlobalRebateReqType
	(TriggerGiftReqType)(0),          // 29: msg.TriggerGiftReqType
	(FoundationInvestReqType)(0),     // 30: msg.FoundationInvestReqType
	(RankType)(0),                    // 31: msg.RankType
	(ENotifyDataType)(0),             // 32: msg.ENotifyDataType
	(EmailReqType)(0),                // 33: msg.EmailReqType
	(*C2SCommon)(nil),                // 34: msg.C2SCommon
	(*S2CCommon)(nil),                // 35: msg.S2CCommon
	(*C2SLogin)(nil),                 // 36: msg.C2SLogin
	(*S2CLogin)(nil),                 // 37: msg.S2CLogin
	(*C2SCreateBuilding)(nil),        // 38: msg.C2SCreateBuilding
	(*S2CCreateBuilding)(nil),        // 39: msg.S2CCreateBuilding
	(*C2SMoveBuilding)(nil),          // 40: msg.C2SMoveBuilding
	(*S2CMoveBuilding)(nil),          // 41: msg.S2CMoveBuilding
	(*C2SBuildingOpera)(nil),         // 42: msg.C2SBuildingOpera
	(*S2CBuildingOpera)(nil),         // 43: msg.S2CBuildingOpera
	(*C2SPlantOpera)(nil),            // 44: msg.C2SPlantOpera
	(*S2CPlantOpera)(nil),            // 45: msg.S2CPlantOpera
	(*C2SOrderOpera)(nil),            // 46: msg.C2SOrderOpera
	(*S2COrderOpera)(nil),            // 47: msg.S2COrderOpera
	(*WarehouseGetReq)(nil),          // 48: msg.WarehouseGetReq
	(*WarehouseExpandReq)(nil),       // 49: msg.WarehouseExpandReq
	(*WarehouseSellReq)(nil),         // 50: msg.WarehouseSellReq
	(*C2SWarehouse)(nil),             // 51: msg.C2SWarehouse
	(*WarehouseGetRsp)(nil),          // 52: msg.WarehouseGetRsp
	(*WarehouseExpandRsp)(nil),       // 53: msg.WarehouseExpandRsp
	(*WarehouseSellRsp)(nil),         // 54: msg.WarehouseSellRsp
	(*S2CWarehouse)(nil),             // 55: msg.S2CWarehouse
	(*C2SItemInfo)(nil),              // 56: msg.C2SItemInfo
	(*ItemChangeInfo)(nil),           // 57: msg.ItemChangeInfo
	(*S2CItemInfo)(nil),              // 58: msg.S2CItemInfo
	(*C2SProductOpera)(nil),          // 59: msg.C2SProductOpera
	(*S2CProductOpera)(nil),          // 60: msg.S2CProductOpera
	(*UserBaseChangeReq)(nil),        // 61: msg.UserBaseChangeReq
	(*C2SUserBaseOpera)(nil),         // 62: msg.C2SUserBaseOpera
	(*UserBaseChangeRsp)(nil),        // 63: msg.UserBaseChangeRsp
	(*S2CUserBaseOpera)(nil),         // 64: msg.S2CUserBaseOpera
	(*C2SShopOpera)(nil),             // 65: msg.C2SShopOpera
	(*S2CShopOpera)(nil),             // 66: msg.S2CShopOpera
	(*C2STask)(nil),                  // 67: msg.C2STask
	(*S2CTask)(nil),                  // 68: msg.S2CTask
	(*C2SWorldOpera)(nil),            // 69: msg.C2SWorldOpera
	(*S2CWorldOpera)(nil),            // 70: msg.S2CWorldOpera
	(*Material)(nil),                 // 71: msg.Material
	(*C2SFormula)(nil),               // 72: msg.C2SFormula
	(*S2CFormula)(nil),               // 73: msg.S2CFormula
	(*C2SDelivery)(nil),              // 74: msg.C2SDelivery
	(*S2CDelivery)(nil),              // 75: msg.S2CDelivery
	(*LianLianKanGetReq)(nil),        // 76: msg.LianLianKanGetReq
	(*LianLianKanGetRsp)(nil),        // 77: msg.LianLianKanGetRsp
	(*LLKMatchedOperaInfo)(nil),      // 78: msg.LLKMatchedOperaInfo
	(*LLKMatchedInfo)(nil),           // 79: msg.LLKMatchedInfo
	(*LLKMatched)(nil),               // 80: msg.LLKMatched
	(*LLKGameOperaInfo)(nil),         // 81: msg.LLKGameOperaInfo
	(*C2SLianLianKan)(nil),           // 82: msg.C2SLianLianKan
	(*LLKReward)(nil),                // 83: msg.LLKReward
	(*LLKGameEndEx)(nil),             // 84: msg.LLKGameEndEx
	(*S2CLianLianKan)(nil),           // 85: msg.S2CLianLianKan
	(*C2SPetBuilding)(nil),           // 86: msg.C2SPetBuilding
	(*S2CPetBuilding)(nil),           // 87: msg.S2CPetBuilding
	(*PetUpgrade)(nil),               // 88: msg.PetUpgrade
	(*PetAssign)(nil),                // 89: msg.PetAssign
	(*PetUnAssign)(nil),              // 90: msg.PetUnAssign
	(*PetVariation)(nil),             // 91: msg.PetVariation
	(*PetSkillUpgrade)(nil),          // 92: msg.PetSkillUpgrade
	(*PetSkillChange)(nil),           // 93: msg.PetSkillChange
	(*PetSkillChangeConfirm)(nil),    // 94: msg.PetSkillChangeConfirm
	(*PetRename)(nil),                // 95: msg.PetRename
	(*PetRelease)(nil),               // 96: msg.PetRelease
	(*C2SPet)(nil),                   // 97: msg.C2SPet
	(*S2CPet)(nil),                   // 98: msg.S2CPet
	(*C2SPetAssign)(nil),             // 99: msg.C2SPetAssign
	(*S2CPetAssign)(nil),             // 100: msg.S2CPetAssign
	(*S2CCommonReward)(nil),          // 101: msg.S2CCommonReward
	(*GetNPCInfo)(nil),               // 102: msg.GetNPCInfo
	(*InviteNPC)(nil),                // 103: msg.InviteNPC
	(*FeedNPC)(nil),                  // 104: msg.FeedNPC
	(*TalkNPC)(nil),                  // 105: msg.TalkNPC
	(*TakeReward)(nil),               // 106: msg.TakeReward
	(*FirstTalk)(nil),                // 107: msg.FirstTalk
	(*C2SNPCInfo)(nil),               // 108: msg.C2SNPCInfo
	(*S2CNPCInfo)(nil),               // 109: msg.S2CNPCInfo
	(*C2SBuyGoods)(nil),              // 110: msg.C2SBuyGoods
	(*S2CBuyGoods)(nil),              // 111: msg.S2CBuyGoods
	(*NotifyDeliverGoods)(nil),       // 112: msg.NotifyDeliverGoods
	(*BuyMerchandise)(nil),           // 113: msg.BuyMerchandise
	(*C2SMallOpera)(nil),             // 114: msg.C2SMallOpera
	(*S2CMallOpera)(nil),             // 115: msg.S2CMallOpera
	(*C2SDailySign)(nil),             // 116: msg.C2SDailySign
	(*S2CDailySign)(nil),             // 117: msg.S2CDailySign
	(*PetDispatchGet)(nil),           // 118: msg.PetDispatchGet
	(*PetDispatchDo)(nil),            // 119: msg.PetDispatchDo
	(*PetDispatchAward)(nil),         // 120: msg.PetDispatchAward
	(*C2SPetDispatch)(nil),           // 121: msg.C2SPetDispatch
	(*PetDispatchAwardInfo)(nil),     // 122: msg.PetDispatchAwardInfo
	(*S2CPetDispatch)(nil),           // 123: msg.S2CPetDispatch
	(*ActReqPersonalCharge)(nil),     // 124: msg.ActReqPersonalCharge
	(*ActRspPersonalCharge)(nil),     // 125: msg.ActRspPersonalCharge
	(*ActReqGlobalCharge)(nil),       // 126: msg.ActReqGlobalCharge
	(*ActRspGlobalCharge)(nil),       // 127: msg.ActRspGlobalCharge
	(*ActReqLevelUpgrade)(nil),       // 128: msg.ActReqLevelUpgrade
	(*ActRspLevelUpgrade)(nil),       // 129: msg.ActRspLevelUpgrade
	(*ActTaskPlanQuest)(nil),         // 130: msg.ActTaskPlanQuest
	(*ActReqTaskPlan)(nil),           // 131: msg.ActReqTaskPlan
	(*ActRspTaskPlan)(nil),           // 132: msg.ActRspTaskPlan
	(*ActReqSevenDaySign)(nil),       // 133: msg.ActReqSevenDaySign
	(*ActRspSevenDaySign)(nil),       // 134: msg.ActRspSevenDaySign
	(*ActReqSuperRechargeGift)(nil),  // 135: msg.ActReqSuperRechargeGift
	(*ActRspSuperRechargeGift)(nil),  // 136: msg.ActRspSuperRechargeGift
	(*ActReqTimeLimitedTask)(nil),    // 137: msg.ActReqTimeLimitedTask
	(*TimeLimitedTaskItemInfo)(nil),  // 138: msg.TimeLimitedTaskItemInfo
	(*ActRspTimeLimitedTask)(nil),    // 139: msg.ActRspTimeLimitedTask
	(*TaskItemInfo)(nil),             // 140: msg.TaskItemInfo
	(*ActReqDailyTask)(nil),          // 141: msg.ActReqDailyTask
	(*ActRspDailyTask)(nil),          // 142: msg.ActRspDailyTask
	(*ActReqGlobalRebate)(nil),       // 143: msg.ActReqGlobalRebate
	(*ActRspGlobalRebate)(nil),       // 144: msg.ActRspGlobalRebate
	(*ActReqTriggerGift)(nil),        // 145: msg.ActReqTriggerGift
	(*ActRspTriggerGift)(nil),        // 146: msg.ActRspTriggerGift
	(*ActReqFoundationInvest)(nil),   // 147: msg.ActReqFoundationInvest
	(*ActRspFoundationInvest)(nil),   // 148: msg.ActRspFoundationInvest
	(*ActReqExchangeCodeGift)(nil),   // 149: msg.ActReqExchangeCodeGift
	(*ActRspExchangeCodeGift)(nil),   // 150: msg.ActRspExchangeCodeGift
	(*C2SActivityOpera)(nil),         // 151: msg.C2SActivityOpera
	(*S2CActivityOpera)(nil),         // 152: msg.S2CActivityOpera
	(*TaskActivityGetReq)(nil),       // 153: msg.TaskActivityGetReq
	(*TaskActivityRewardReq)(nil),    // 154: msg.TaskActivityRewardReq
	(*C2STaskActivity)(nil),          // 155: msg.C2STaskActivity
	(*TaskActivityGetRsp)(nil),       // 156: msg.TaskActivityGetRsp
	(*TaskActivityRewardRsp)(nil),    // 157: msg.TaskActivityRewardRsp
	(*S2CTaskActivity)(nil),          // 158: msg.S2CTaskActivity
	(*C2SMonthSupply)(nil),           // 159: msg.C2SMonthSupply
	(*S2CMonthSupply)(nil),           // 160: msg.S2CMonthSupply
	(*C2SFetchActCfg)(nil),           // 161: msg.C2SFetchActCfg
	(*S2CFetchActCfg)(nil),           // 162: msg.S2CFetchActCfg
	(*RankInfo)(nil),                 // 163: msg.RankInfo
	(*C2SRankOpera)(nil),             // 164: msg.C2SRankOpera
	(*S2CRankOpera)(nil),             // 165: msg.S2CRankOpera
	(*NotifyUserDataChange)(nil),     // 166: msg.NotifyUserDataChange
	(*OpenOperaReq)(nil),             // 167: msg.OpenOperaReq
	(*C2SOpenBoxReq)(nil),            // 168: msg.C2SOpenBoxReq
	(*OpenOperaRsp)(nil),             // 169: msg.OpenOperaRsp
	(*S2COpenBoxRsp)(nil),            // 170: msg.S2COpenBoxRsp
	(*BlueVipGetReq)(nil),            // 171: msg.BlueVipGetReq
	(*BlueVipGetRsp)(nil),            // 172: msg.BlueVipGetRsp
	(*BlueVipRewardReq)(nil),         // 173: msg.BlueVipRewardReq
	(*C2SBlueVipReq)(nil),            // 174: msg.C2SBlueVipReq
	(*S2CBlueVipRsp)(nil),            // 175: msg.S2CBlueVipRsp
	(*QQHallGiftGetReq)(nil),         // 176: msg.QQHallGiftGetReq
	(*QQHallGiftGetRsp)(nil),         // 177: msg.QQHallGiftGetRsp
	(*QQHallGiftRewardReq)(nil),      // 178: msg.QQHallGiftRewardReq
	(*C2SQQHallGiftReq)(nil),         // 179: msg.C2SQQHallGiftReq
	(*S2CQQHallGiftRsp)(nil),         // 180: msg.S2CQQHallGiftRsp
	(*C2SEmailReq)(nil),              // 181: msg.C2SEmailReq
	(*S2CEmailRsp)(nil),              // 182: msg.S2CEmailRsp
	(*NotifyNewEmail)(nil),           // 183: msg.NotifyNewEmail
	(*C2SUserInfoReq)(nil),           // 184: msg.C2SUserInfoReq
	(*UserBriefInfo)(nil),            // 185: msg.UserBriefInfo
	(*S2CUserInfoRsp)(nil),           // 186: msg.S2CUserInfoRsp
	(*Extra)(nil),                    // 187: msg.Extra
	(*S2CEventStatsChange)(nil),      // 188: msg.S2CEventStatsChange
	nil,                              // 189: msg.ActRspGlobalRebate.GlobalNumCondEntry
	nil,                              // 190: msg.ActRspGlobalRebate.PersonNumCondEntry
	(STATUS)(0),                      // 191: msg.STATUS
	(*UserBase)(nil),                 // 192: model.UserBase
	(*World)(nil),                    // 193: model.World
	(*PlantInfo)(nil),                // 194: model.PlantInfo
	(*Model)(nil),                    // 195: model.Model
	(*Position)(nil),                 // 196: model.Position
	(*OrderInfo)(nil),                // 197: model.OrderInfo
	(*WareHouse)(nil),                // 198: model.WareHouse
	(*ItemInfo)(nil),                 // 199: model.ItemInfo
	(*ProductInfo)(nil),              // 200: model.ProductInfo
	(*ScienceInfo)(nil),              // 201: model.ScienceInfo
	(EShopType)(0),                   // 202: model.EShopType
	(*ShopItem)(nil),                 // 203: model.ShopItem
	(*Task)(nil),                     // 204: model.Task
	(*Building)(nil),                 // 205: model.Building
	(*Cargo)(nil),                    // 206: model.Cargo
	(*LLKRoom)(nil),                  // 207: model.LLKRoom
	(*LLKOpera)(nil),                 // 208: model.LLKOpera
	(*LLKGameEnd)(nil),               // 209: model.LLKGameEnd
	(*PetBuilding)(nil),              // 210: model.PetBuilding
	(*PetInfo)(nil),                  // 211: model.PetInfo
	(*Pet)(nil),                      // 212: model.Pet
	(*PetAssignInfo)(nil),            // 213: model.PetAssignInfo
	(*Npc)(nil),                      // 214: model.Npc
	(*MallItem)(nil),                 // 215: model.MallItem
	(EDailySignState)(0),             // 216: model.EDailySignState
	(*PetDispatchInfo)(nil),          // 217: model.PetDispatchInfo
	(*ActDataTaskPlanAwardItem)(nil), // 218: model.ActDataTaskPlanAwardItem
	(*ActDataSevenDaySign)(nil),      // 219: model.ActDataSevenDaySign
	(*ActDataSuperRechargeGift)(nil), // 220: model.ActDataSuperRechargeGift
	(*ActDataGlobalRebate)(nil),      // 221: model.ActDataGlobalRebate
	(*ActDataTriggerGift)(nil),       // 222: model.ActDataTriggerGift
	(*ActDataFoundationInvest)(nil),  // 223: model.ActDataFoundationInvest
	(EActivityType)(0),               // 224: model.EActivityType
	(*ActivityCfg)(nil),              // 225: model.ActivityCfg
	(*ActTimeSection)(nil),           // 226: model.ActTimeSection
	(*BlueVip)(nil),                  // 227: model.BlueVip
	(*QQHallGift)(nil),               // 228: model.QQHallGift
	(*EmailInfo)(nil),                // 229: model.EmailInfo
	(*UserClientContext)(nil),        // 230: msg.UserClientContext
}
var file_game_msg_proto_depIdxs = []int32{
	191, // 0: msg.S2CCommon.errCode:type_name -> msg.STATUS
	191, // 1: msg.S2CLogin.errCode:type_name -> msg.STATUS
	192, // 2: msg.S2CLogin.userBase:type_name -> model.UserBase
	193, // 3: msg.S2CLogin.world:type_name -> model.World
	194, // 4: msg.S2CLogin.plantList:type_name -> model.PlantInfo
	2,   // 5: msg.C2SCreateBuilding.createBuildingOpera:type_name -> msg.CreateBuildingOpera
	195, // 6: msg.C2SCreateBuilding.buildModel:type_name -> model.Model
	191, // 7: msg.S2CCreateBuilding.errCode:type_name -> msg.STATUS
	2,   // 8: msg.S2CCreateBuilding.createBuildingOpera:type_name -> msg.CreateBuildingOpera
	196, // 9: msg.C2SMoveBuilding.pos:type_name -> model.Position
	191, // 10: msg.S2CMoveBuilding.errCode:type_name -> msg.STATUS
	3,   // 11: msg.C2SBuildingOpera.buildingOpera:type_name -> msg.BuildingOpera
	191, // 12: msg.S2CBuildingOpera.errCode:type_name -> msg.STATUS
	3,   // 13: msg.S2CBuildingOpera.buildingOpera:type_name -> msg.BuildingOpera
	195, // 14: msg.S2CBuildingOpera.buildModel:type_name -> model.Model
	191, // 15: msg.S2CPlantOpera.errCode:type_name -> msg.STATUS
	194, // 16: msg.S2CPlantOpera.plantInfo:type_name -> model.PlantInfo
	6,   // 17: msg.C2SOrderOpera.operaCmd:type_name -> msg.OrderOperaCmd
	191, // 18: msg.S2COrderOpera.errCode:type_name -> msg.STATUS
	6,   // 19: msg.S2COrderOpera.operaCmd:type_name -> msg.OrderOperaCmd
	197, // 20: msg.S2COrderOpera.orderInfo:type_name -> model.OrderInfo
	8,   // 21: msg.WarehouseExpandReq.expandCmd:type_name -> msg.WarehouseExpandCmd
	48,  // 22: msg.C2SWarehouse.getReq:type_name -> msg.WarehouseGetReq
	49,  // 23: msg.C2SWarehouse.expandReq:type_name -> msg.WarehouseExpandReq
	50,  // 24: msg.C2SWarehouse.sellReq:type_name -> msg.WarehouseSellReq
	198, // 25: msg.WarehouseGetRsp.WareHouse:type_name -> model.WareHouse
	198, // 26: msg.WarehouseExpandRsp.WareHouse:type_name -> model.WareHouse
	191, // 27: msg.S2CWarehouse.errCode:type_name -> msg.STATUS
	52,  // 28: msg.S2CWarehouse.getRsp:type_name -> msg.WarehouseGetRsp
	53,  // 29: msg.S2CWarehouse.expandRsp:type_name -> msg.WarehouseExpandRsp
	54,  // 30: msg.S2CWarehouse.sellRsp:type_name -> msg.WarehouseSellRsp
	9,   // 31: msg.C2SItemInfo.itemChange:type_name -> msg.ItemChange
	9,   // 32: msg.ItemChangeInfo.ItemChange:type_name -> msg.ItemChange
	199, // 33: msg.ItemChangeInfo.itemList:type_name -> model.ItemInfo
	191, // 34: msg.S2CItemInfo.errCode:type_name -> msg.STATUS
	57,  // 35: msg.S2CItemInfo.itemChangeInfo:type_name -> msg.ItemChangeInfo
	10,  // 36: msg.C2SProductOpera.operaCmd:type_name -> msg.ProductOperaCmd
	191, // 37: msg.S2CProductOpera.errCode:type_name -> msg.STATUS
	10,  // 38: msg.S2CProductOpera.operaCmd:type_name -> msg.ProductOperaCmd
	200, // 39: msg.S2CProductOpera.productInfo:type_name -> model.ProductInfo
	201, // 40: msg.S2CProductOpera.scienceInfo:type_name -> model.ScienceInfo
	61,  // 41: msg.C2SUserBaseOpera.changeReq:type_name -> msg.UserBaseChangeReq
	191, // 42: msg.S2CUserBaseOpera.errCode:type_name -> msg.STATUS
	63,  // 43: msg.S2CUserBaseOpera.changeRsp:type_name -> msg.UserBaseChangeRsp
	202, // 44: msg.C2SShopOpera.shopType:type_name -> model.EShopType
	11,  // 45: msg.C2SShopOpera.shopOperaCmd:type_name -> msg.ShopOperaCmd
	191, // 46: msg.S2CShopOpera.errCode:type_name -> msg.STATUS
	203, // 47: msg.S2CShopOpera.shopItemList:type_name -> model.ShopItem
	12,  // 48: msg.C2STask.taskOperaCmd:type_name -> msg.TaskOperaCmd
	191, // 49: msg.S2CTask.errCode:type_name -> msg.STATUS
	12,  // 50: msg.S2CTask.taskOperaCmd:type_name -> msg.TaskOperaCmd
	204, // 51: msg.S2CTask.taskItemList:type_name -> model.Task
	205, // 52: msg.C2SWorldOpera.removeList:type_name -> model.Building
	205, // 53: msg.C2SWorldOpera.addList:type_name -> model.Building
	205, // 54: msg.C2SWorldOpera.modList:type_name -> model.Building
	191, // 55: msg.S2CWorldOpera.errCode:type_name -> msg.STATUS
	205, // 56: msg.S2CWorldOpera.removeList:type_name -> model.Building
	205, // 57: msg.S2CWorldOpera.addList:type_name -> model.Building
	205, // 58: msg.S2CWorldOpera.modList:type_name -> model.Building
	14,  // 59: msg.Material.type:type_name -> msg.EMaterialType
	71,  // 60: msg.C2SFormula.material:type_name -> msg.Material
	191, // 61: msg.S2CFormula.errCode:type_name -> msg.STATUS
	15,  // 62: msg.C2SDelivery.opera:type_name -> msg.EDeliveryOpera
	191, // 63: msg.S2CDelivery.errCode:type_name -> msg.STATUS
	15,  // 64: msg.S2CDelivery.opera:type_name -> msg.EDeliveryOpera
	206, // 65: msg.S2CDelivery.cargoList:type_name -> model.Cargo
	17,  // 66: msg.LianLianKanGetReq.operaType:type_name -> msg.ELLKGetOperaType
	80,  // 67: msg.LianLianKanGetRsp.matched:type_name -> msg.LLKMatched
	207, // 68: msg.LianLianKanGetRsp.gaming:type_name -> model.LLKRoom
	192, // 69: msg.LianLianKanGetRsp.userInfo:type_name -> model.UserBase
	19,  // 70: msg.LLKMatchedOperaInfo.matchedOpera:type_name -> msg.ELianLianKanMatchedOpera
	19,  // 71: msg.LLKMatchedInfo.matchedOpera:type_name -> msg.ELianLianKanMatchedOpera
	79,  // 72: msg.LLKMatched.matchedInfo:type_name -> msg.LLKMatchedInfo
	192, // 73: msg.LLKMatched.userInfo:type_name -> model.UserBase
	208, // 74: msg.LLKGameOperaInfo.opera:type_name -> model.LLKOpera
	16,  // 75: msg.C2SLianLianKan.operaType:type_name -> msg.ELianLianKanOpera
	76,  // 76: msg.C2SLianLianKan.getReq:type_name -> msg.LianLianKanGetReq
	18,  // 77: msg.C2SLianLianKan.matching:type_name -> msg.ELianLianKanMatch
	78,  // 78: msg.C2SLianLianKan.matchedOperaInfo:type_name -> msg.LLKMatchedOperaInfo
	81,  // 79: msg.C2SLianLianKan.gameOperaInfo:type_name -> msg.LLKGameOperaInfo
	199, // 80: msg.LLKReward.itemList:type_name -> model.ItemInfo
	209, // 81: msg.LLKGameEndEx.modelGameEnd:type_name -> model.LLKGameEnd
	83,  // 82: msg.LLKGameEndEx.llkReward:type_name -> msg.LLKReward
	191, // 83: msg.S2CLianLianKan.errCode:type_name -> msg.STATUS
	16,  // 84: msg.S2CLianLianKan.operaType:type_name -> msg.ELianLianKanOpera
	77,  // 85: msg.S2CLianLianKan.getRsp:type_name -> msg.LianLianKanGetRsp
	18,  // 86: msg.S2CLianLianKan.matching:type_name -> msg.ELianLianKanMatch
	80,  // 87: msg.S2CLianLianKan.matched:type_name -> msg.LLKMatched
	207, // 88: msg.S2CLianLianKan.gaming:type_name -> model.LLKRoom
	84,  // 89: msg.S2CLianLianKan.gameEnd:type_name -> msg.LLKGameEndEx
	20,  // 90: msg.C2SPetBuilding.operaType:type_name -> msg.EPetBuildingOpera
	191, // 91: msg.S2CPetBuilding.errCode:type_name -> msg.STATUS
	20,  // 92: msg.S2CPetBuilding.operaType:type_name -> msg.EPetBuildingOpera
	210, // 93: msg.S2CPetBuilding.petBuilding:type_name -> model.PetBuilding
	211, // 94: msg.S2CPetBuilding.petInfo:type_name -> model.PetInfo
	199, // 95: msg.PetUpgrade.propList:type_name -> model.ItemInfo
	21,  // 96: msg.C2SPet.operaType:type_name -> msg.EPetOpera
	88,  // 97: msg.C2SPet.petUpgrade:type_name -> msg.PetUpgrade
	89,  // 98: msg.C2SPet.petAssign:type_name -> msg.PetAssign
	90,  // 99: msg.C2SPet.petUnAssign:type_name -> msg.PetUnAssign
	92,  // 100: msg.C2SPet.petSkillUpgrade:type_name -> msg.PetSkillUpgrade
	93,  // 101: msg.C2SPet.petSkillChange:type_name -> msg.PetSkillChange
	94,  // 102: msg.C2SPet.petSkillChangeConfirm:type_name -> msg.PetSkillChangeConfirm
	95,  // 103: msg.C2SPet.petRename:type_name -> msg.PetRename
	96,  // 104: msg.C2SPet.petRelease:type_name -> msg.PetRelease
	191, // 105: msg.S2CPet.errCode:type_name -> msg.STATUS
	21,  // 106: msg.S2CPet.operaType:type_name -> msg.EPetOpera
	212, // 107: msg.S2CPet.pet:type_name -> model.Pet
	88,  // 108: msg.S2CPet.petUpgrade:type_name -> msg.PetUpgrade
	89,  // 109: msg.S2CPet.PetAssign:type_name -> msg.PetAssign
	91,  // 110: msg.S2CPet.petVariation:type_name -> msg.PetVariation
	92,  // 111: msg.S2CPet.petSkillUpgrade:type_name -> msg.PetSkillUpgrade
	93,  // 112: msg.S2CPet.petSkillChange:type_name -> msg.PetSkillChange
	94,  // 113: msg.S2CPet.petSkillChangeConfirm:type_name -> msg.PetSkillChangeConfirm
	95,  // 114: msg.S2CPet.petRename:type_name -> msg.PetRename
	96,  // 115: msg.S2CPet.petRelease:type_name -> msg.PetRelease
	191, // 116: msg.S2CPetAssign.errCode:type_name -> msg.STATUS
	213, // 117: msg.S2CPetAssign.petAssignInfo:type_name -> model.PetAssignInfo
	199, // 118: msg.S2CCommonReward.itemList:type_name -> model.ItemInfo
	199, // 119: msg.FeedNPC.itemInfo:type_name -> model.ItemInfo
	102, // 120: msg.C2SNPCInfo.getNPCInfo:type_name -> msg.GetNPCInfo
	103, // 121: msg.C2SNPCInfo.inviteNPC:type_name -> msg.InviteNPC
	104, // 122: msg.C2SNPCInfo.feedNPC:type_name -> msg.FeedNPC
	105, // 123: msg.C2SNPCInfo.talkNPC:type_name -> msg.TalkNPC
	106, // 124: msg.C2SNPCInfo.takeReward:type_name -> msg.TakeReward
	107, // 125: msg.C2SNPCInfo.firstTalk:type_name -> msg.FirstTalk
	191, // 126: msg.S2CNPCInfo.errCode:type_name -> msg.STATUS
	214, // 127: msg.S2CNPCInfo.npc:type_name -> model.Npc
	191, // 128: msg.S2CBuyGoods.errCode:type_name -> msg.STATUS
	23,  // 129: msg.C2SMallOpera.operType:type_name -> msg.EMallOperType
	113, // 130: msg.C2SMallOpera.merchandiseList:type_name -> msg.BuyMerchandise
	191, // 131: msg.S2CMallOpera.errCode:type_name -> msg.STATUS
	215, // 132: msg.S2CMallOpera.mallItemList:type_name -> model.MallItem
	24,  // 133: msg.C2SDailySign.operType:type_name -> msg.EDailySignOperType
	191, // 134: msg.S2CDailySign.errCode:type_name -> msg.STATUS
	216, // 135: msg.S2CDailySign.dailySignList:type_name -> model.EDailySignState
	118, // 136: msg.C2SPetDispatch.petDispatchGet:type_name -> msg.PetDispatchGet
	119, // 137: msg.C2SPetDispatch.petDispatchDo:type_name -> msg.PetDispatchDo
	120, // 138: msg.C2SPetDispatch.petDispatchAward:type_name -> msg.PetDispatchAward
	199, // 139: msg.PetDispatchAwardInfo.itemList:type_name -> model.ItemInfo
	211, // 140: msg.PetDispatchAwardInfo.petInfoList:type_name -> model.PetInfo
	191, // 141: msg.S2CPetDispatch.errCode:type_name -> msg.STATUS
	217, // 142: msg.S2CPetDispatch.petDispatchInfos:type_name -> model.PetDispatchInfo
	122, // 143: msg.S2CPetDispatch.petDispatchAwardInfo:type_name -> msg.PetDispatchAwardInfo
	218, // 144: msg.ActRspTaskPlan.awardInfo:type_name -> model.ActDataTaskPlanAwardItem
	130, // 145: msg.ActRspTaskPlan.questInfo:type_name -> msg.ActTaskPlanQuest
	25,  // 146: msg.ActReqSevenDaySign.cmd:type_name -> msg.SevenDaySignReqType
	219, // 147: msg.ActRspSevenDaySign.data:type_name -> model.ActDataSevenDaySign
	220, // 148: msg.ActRspSuperRechargeGift.data:type_name -> model.ActDataSuperRechargeGift
	26,  // 149: msg.ActReqTimeLimitedTask.operaType:type_name -> msg.ETimeLimitedTaskOperaType
	138, // 150: msg.ActRspTimeLimitedTask.data:type_name -> msg.TimeLimitedTaskItemInfo
	27,  // 151: msg.ActReqDailyTask.cmd:type_name -> msg.DailyTaskReqType
	140, // 152: msg.ActRspDailyTask.data:type_name -> msg.TaskItemInfo
	28,  // 153: msg.ActReqGlobalRebate.cmd:type_name -> msg.GlobalRebateReqType
	221, // 154: msg.ActRspGlobalRebate.data:type_name -> model.ActDataGlobalRebate
	189, // 155: msg.ActRspGlobalRebate.globalNumCond:type_name -> msg.ActRspGlobalRebate.GlobalNumCondEntry
	190, // 156: msg.ActRspGlobalRebate.personNumCond:type_name -> msg.ActRspGlobalRebate.PersonNumCondEntry
	29,  // 157: msg.ActReqTriggerGift.cmd:type_name -> msg.TriggerGiftReqType
	222, // 158: msg.ActRspTriggerGift.data:type_name -> model.ActDataTriggerGift
	30,  // 159: msg.ActReqFoundationInvest.cmd:type_name -> msg.FoundationInvestReqType
	223, // 160: msg.ActRspFoundationInvest.data:type_name -> model.ActDataFoundationInvest
	224, // 161: msg.C2SActivityOpera.actType:type_name -> model.EActivityType
	124, // 162: msg.C2SActivityOpera.reqPersonalCharge:type_name -> msg.ActReqPersonalCharge
	126, // 163: msg.C2SActivityOpera.reqGlobalCharge:type_name -> msg.ActReqGlobalCharge
	128, // 164: msg.C2SActivityOpera.reqLevelUpgrade:type_name -> msg.ActReqLevelUpgrade
	131, // 165: msg.C2SActivityOpera.reqTaskPlan:type_name -> msg.ActReqTaskPlan
	133, // 166: msg.C2SActivityOpera.reqSevenDaySign:type_name -> msg.ActReqSevenDaySign
	135, // 167: msg.C2SActivityOpera.reqSuperRechargeGift:type_name -> msg.ActReqSuperRechargeGift
	137, // 168: msg.C2SActivityOpera.reqTimeLimitedTask:type_name -> msg.ActReqTimeLimitedTask
	141, // 169: msg.C2SActivityOpera.reqDailyTask:type_name -> msg.ActReqDailyTask
	143, // 170: msg.C2SActivityOpera.reqGlobalRebate:type_name -> msg.ActReqGlobalRebate
	145, // 171: msg.C2SActivityOpera.reqTriggerGift:type_name -> msg.ActReqTriggerGift
	147, // 172: msg.C2SActivityOpera.reqFoundationInvest:type_name -> msg.ActReqFoundationInvest
	149, // 173: msg.C2SActivityOpera.reqExchangeCodeGift:type_name -> msg.ActReqExchangeCodeGift
	191, // 174: msg.S2CActivityOpera.errCode:type_name -> msg.STATUS
	224, // 175: msg.S2CActivityOpera.actType:type_name -> model.EActivityType
	125, // 176: msg.S2CActivityOpera.rspPersonalCharge:type_name -> msg.ActRspPersonalCharge
	127, // 177: msg.S2CActivityOpera.rspGlobalCharge:type_name -> msg.ActRspGlobalCharge
	129, // 178: msg.S2CActivityOpera.rspLevelUpgrade:type_name -> msg.ActRspLevelUpgrade
	132, // 179: msg.S2CActivityOpera.rspTaskPlan:type_name -> msg.ActRspTaskPlan
	134, // 180: msg.S2CActivityOpera.rspSevenDaySign:type_name -> msg.ActRspSevenDaySign
	136, // 181: msg.S2CActivityOpera.rspSuperRechargeGift:type_name -> msg.ActRspSuperRechargeGift
	139, // 182: msg.S2CActivityOpera.rspTimeLimitedTask:type_name -> msg.ActRspTimeLimitedTask
	142, // 183: msg.S2CActivityOpera.rspDailyTask:type_name -> msg.ActRspDailyTask
	144, // 184: msg.S2CActivityOpera.rspGlobalRebate:type_name -> msg.ActRspGlobalRebate
	146, // 185: msg.S2CActivityOpera.rspTriggerGift:type_name -> msg.ActRspTriggerGift
	148, // 186: msg.S2CActivityOpera.rspFoundationInvest:type_name -> msg.ActRspFoundationInvest
	150, // 187: msg.S2CActivityOpera.rspExchangeCodeGift:type_name -> msg.ActRspExchangeCodeGift
	153, // 188: msg.C2STaskActivity.taskActivityGetReq:type_name -> msg.TaskActivityGetReq
	154, // 189: msg.C2STaskActivity.taskActivityRewardReq:type_name -> msg.TaskActivityRewardReq
	156, // 190: msg.S2CTaskActivity.taskActivityGetRsp:type_name -> msg.TaskActivityGetRsp
	157, // 191: msg.S2CTaskActivity.taskActivityRewardRsp:type_name -> msg.TaskActivityRewardRsp
	191, // 192: msg.S2CMonthSupply.errCode:type_name -> msg.STATUS
	191, // 193: msg.S2CFetchActCfg.errCode:type_name -> msg.STATUS
	225, // 194: msg.S2CFetchActCfg.actCfgList:type_name -> model.ActivityCfg
	226, // 195: msg.S2CFetchActCfg.actTimeList:type_name -> model.ActTimeSection
	31,  // 196: msg.C2SRankOpera.rankType:type_name -> msg.RankType
	191, // 197: msg.S2CRankOpera.errCode:type_name -> msg.STATUS
	31,  // 198: msg.S2CRankOpera.rankType:type_name -> msg.RankType
	163, // 199: msg.S2CRankOpera.rankInfoList:type_name -> msg.RankInfo
	163, // 200: msg.S2CRankOpera.selfRankInfo:type_name -> msg.RankInfo
	32,  // 201: msg.NotifyUserDataChange.notifyType:type_name -> msg.ENotifyDataType
	199, // 202: msg.OpenOperaReq.itemInfo:type_name -> model.ItemInfo
	167, // 203: msg.C2SOpenBoxReq.openOperaReq:type_name -> msg.OpenOperaReq
	57,  // 204: msg.OpenOperaRsp.itemChangeInfo:type_name -> msg.ItemChangeInfo
	199, // 205: msg.OpenOperaRsp.itemList:type_name -> model.ItemInfo
	211, // 206: msg.OpenOperaRsp.petInfoList:type_name -> model.PetInfo
	191, // 207: msg.S2COpenBoxRsp.errCode:type_name -> msg.STATUS
	169, // 208: msg.S2COpenBoxRsp.openOperaRsp:type_name -> msg.OpenOperaRsp
	227, // 209: msg.BlueVipGetRsp.blueVip:type_name -> model.BlueVip
	171, // 210: msg.C2SBlueVipReq.blueVipGetReq:type_name -> msg.BlueVipGetReq
	173, // 211: msg.C2SBlueVipReq.blueVipRewardReq:type_name -> msg.BlueVipRewardReq
	191, // 212: msg.S2CBlueVipRsp.errCode:type_name -> msg.STATUS
	172, // 213: msg.S2CBlueVipRsp.blueVipGetRsp:type_name -> msg.BlueVipGetRsp
	228, // 214: msg.QQHallGiftGetRsp.giftData:type_name -> model.QQHallGift
	176, // 215: msg.C2SQQHallGiftReq.getReq:type_name -> msg.QQHallGiftGetReq
	178, // 216: msg.C2SQQHallGiftReq.rewardReq:type_name -> msg.QQHallGiftRewardReq
	191, // 217: msg.S2CQQHallGiftRsp.errCode:type_name -> msg.STATUS
	177, // 218: msg.S2CQQHallGiftRsp.GetRsp:type_name -> msg.QQHallGiftGetRsp
	33,  // 219: msg.C2SEmailReq.type:type_name -> msg.EmailReqType
	191, // 220: msg.S2CEmailRsp.errCode:type_name -> msg.STATUS
	229, // 221: msg.S2CEmailRsp.emailList:type_name -> model.EmailInfo
	191, // 222: msg.S2CUserInfoRsp.errCode:type_name -> msg.STATUS
	185, // 223: msg.S2CUserInfoRsp.briefInfos:type_name -> msg.UserBriefInfo
	58,  // 224: msg.Extra.S2CItemInfo:type_name -> msg.S2CItemInfo
	101, // 225: msg.Extra.S2CCommonReward:type_name -> msg.S2CCommonReward
	230, // 226: msg.Extra.UserClientContext:type_name -> msg.UserClientContext
	68,  // 227: msg.Extra.S2CTask:type_name -> msg.S2CTask
	100, // 228: msg.Extra.S2CPetAssign:type_name -> msg.S2CPetAssign
	224, // 229: msg.S2CEventStatsChange.actChgList:type_name -> model.EActivityType
	230, // [230:230] is the sub-list for method output_type
	230, // [230:230] is the sub-list for method input_type
	230, // [230:230] is the sub-list for extension type_name
	230, // [230:230] is the sub-list for extension extendee
	0,   // [0:230] is the sub-list for field type_name
}

func init() { file_game_msg_proto_init() }
func file_game_msg_proto_init() {
	if File_game_msg_proto != nil {
		return
	}
	file_msg_proto_init()
	file_user_base_proto_init()
	file_world_proto_init()
	file_warehouse_proto_init()
	file_plant_proto_init()
	file_itemInfo_proto_init()
	file_order_proto_init()
	file_product_proto_init()
	file_shop_proto_init()
	file_mall_proto_init()
	file_dailySign_proto_init()
	file_task_proto_init()
	file_delivery_proto_init()
	file_petBuilding_proto_init()
	file_pet_proto_init()
	file_npc_proto_init()
	file_petDispatch_proto_init()
	file_activity_proto_init()
	file_activityCfg_proto_init()
	file_bluevip_proto_init()
	file_qqhallgift_proto_init()
	file_email_proto_init()
	file_common_msg_proto_init()
	file_lianliankan_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_game_msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SCreateBuilding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CCreateBuilding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SMoveBuilding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CMoveBuilding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SBuildingOpera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CBuildingOpera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SPlantOpera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CPlantOpera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SOrderOpera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2COrderOpera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WarehouseGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WarehouseExpandReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WarehouseSellReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SWarehouse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WarehouseGetRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WarehouseExpandRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WarehouseSellRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CWarehouse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemChangeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SProductOpera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CProductOpera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBaseChangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SUserBaseOpera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBaseChangeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CUserBaseOpera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SShopOpera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CShopOpera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2STask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SWorldOpera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CWorldOpera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Material); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SFormula); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CFormula); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SDelivery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CDelivery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LianLianKanGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LianLianKanGetRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLKMatchedOperaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLKMatchedInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLKMatched); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLKGameOperaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SLianLianKan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLKReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLKGameEndEx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CLianLianKan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SPetBuilding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CPetBuilding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetUpgrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetAssign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetUnAssign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetVariation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetSkillUpgrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetSkillChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetSkillChangeConfirm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetRename); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SPet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CPet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SPetAssign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CPetAssign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CCommonReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNPCInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteNPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedNPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalkNPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstTalk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SNPCInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CNPCInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SBuyGoods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CBuyGoods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyDeliverGoods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyMerchandise); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SMallOpera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CMallOpera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SDailySign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CDailySign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetDispatchGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetDispatchDo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetDispatchAward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SPetDispatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetDispatchAwardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CPetDispatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActReqPersonalCharge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActRspPersonalCharge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActReqGlobalCharge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActRspGlobalCharge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActReqLevelUpgrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActRspLevelUpgrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActTaskPlanQuest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActReqTaskPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActRspTaskPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActReqSevenDaySign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActRspSevenDaySign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActReqSuperRechargeGift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActRspSuperRechargeGift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActReqTimeLimitedTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeLimitedTaskItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActRspTimeLimitedTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActReqDailyTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActRspDailyTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActReqGlobalRebate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActRspGlobalRebate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActReqTriggerGift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActRspTriggerGift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActReqFoundationInvest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActRspFoundationInvest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActReqExchangeCodeGift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActRspExchangeCodeGift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SActivityOpera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CActivityOpera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskActivityGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskActivityRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2STaskActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskActivityGetRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskActivityRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CTaskActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SMonthSupply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CMonthSupply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SFetchActCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CFetchActCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SRankOpera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CRankOpera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyUserDataChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenOperaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SOpenBoxReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenOperaRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2COpenBoxRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlueVipGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlueVipGetRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlueVipRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SBlueVipReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CBlueVipRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QQHallGiftGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QQHallGiftGetRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QQHallGiftRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SQQHallGiftReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CQQHallGiftRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SEmailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CEmailRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyNewEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2SUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBriefInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CUserInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Extra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_msg_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CEventStatsChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_game_msg_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*C2SWarehouse_GetReq)(nil),
		(*C2SWarehouse_ExpandReq)(nil),
		(*C2SWarehouse_SellReq)(nil),
	}
	file_game_msg_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*S2CWarehouse_GetRsp)(nil),
		(*S2CWarehouse_ExpandRsp)(nil),
		(*S2CWarehouse_SellRsp)(nil),
	}
	file_game_msg_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*C2SProductOpera_GlobalItemId)(nil),
		(*C2SProductOpera_ProductIndex)(nil),
		(*C2SProductOpera_AddFieldId)(nil),
		(*C2SProductOpera_PropId)(nil),
	}
	file_game_msg_proto_msgTypes[28].OneofWrappers = []interface{}{
		(*C2SUserBaseOpera_ChangeReq)(nil),
		(*C2SUserBaseOpera_HeadFrame)(nil),
	}
	file_game_msg_proto_msgTypes[30].OneofWrappers = []interface{}{
		(*S2CUserBaseOpera_ChangeRsp)(nil),
		(*S2CUserBaseOpera_HeadFrame)(nil),
	}
	file_game_msg_proto_msgTypes[48].OneofWrappers = []interface{}{
		(*C2SLianLianKan_GetReq)(nil),
		(*C2SLianLianKan_Matching)(nil),
		(*C2SLianLianKan_MatchedOperaInfo)(nil),
		(*C2SLianLianKan_GameOperaInfo)(nil),
	}
	file_game_msg_proto_msgTypes[51].OneofWrappers = []interface{}{
		(*S2CLianLianKan_GetRsp)(nil),
		(*S2CLianLianKan_Matching)(nil),
		(*S2CLianLianKan_Matched)(nil),
		(*S2CLianLianKan_Gaming)(nil),
		(*S2CLianLianKan_GameEnd)(nil),
	}
	file_game_msg_proto_msgTypes[63].OneofWrappers = []interface{}{
		(*C2SPet_PetUpgrade)(nil),
		(*C2SPet_PetAssign)(nil),
		(*C2SPet_PetUnAssign)(nil),
		(*C2SPet_PetSkillUpgrade)(nil),
		(*C2SPet_PetSkillChange)(nil),
		(*C2SPet_PetSkillChangeConfirm)(nil),
		(*C2SPet_PetRename)(nil),
		(*C2SPet_PetRelease)(nil),
	}
	file_game_msg_proto_msgTypes[64].OneofWrappers = []interface{}{
		(*S2CPet_PetUpgrade)(nil),
		(*S2CPet_PetAssign)(nil),
		(*S2CPet_PetVariation)(nil),
		(*S2CPet_PetSkillUpgrade)(nil),
		(*S2CPet_PetSkillChange)(nil),
		(*S2CPet_PetSkillChangeConfirm)(nil),
		(*S2CPet_PetRename)(nil),
		(*S2CPet_PetRelease)(nil),
	}
	file_game_msg_proto_msgTypes[74].OneofWrappers = []interface{}{
		(*C2SNPCInfo_GetNPCInfo)(nil),
		(*C2SNPCInfo_InviteNPC)(nil),
		(*C2SNPCInfo_FeedNPC)(nil),
		(*C2SNPCInfo_TalkNPC)(nil),
		(*C2SNPCInfo_TakeReward)(nil),
		(*C2SNPCInfo_FirstTalk)(nil),
	}
	file_game_msg_proto_msgTypes[87].OneofWrappers = []interface{}{
		(*C2SPetDispatch_PetDispatchGet)(nil),
		(*C2SPetDispatch_PetDispatchDo)(nil),
		(*C2SPetDispatch_PetDispatchAward)(nil),
	}
	file_game_msg_proto_msgTypes[89].OneofWrappers = []interface{}{
		(*S2CPetDispatch_PetDispatchAwardInfo)(nil),
	}
	file_game_msg_proto_msgTypes[117].OneofWrappers = []interface{}{
		(*C2SActivityOpera_ReqPersonalCharge)(nil),
		(*C2SActivityOpera_ReqGlobalCharge)(nil),
		(*C2SActivityOpera_ReqLevelUpgrade)(nil),
		(*C2SActivityOpera_ReqTaskPlan)(nil),
		(*C2SActivityOpera_ReqSevenDaySign)(nil),
		(*C2SActivityOpera_ReqSuperRechargeGift)(nil),
		(*C2SActivityOpera_ReqTimeLimitedTask)(nil),
		(*C2SActivityOpera_ReqDailyTask)(nil),
		(*C2SActivityOpera_ReqGlobalRebate)(nil),
		(*C2SActivityOpera_ReqTriggerGift)(nil),
		(*C2SActivityOpera_ReqFoundationInvest)(nil),
		(*C2SActivityOpera_ReqExchangeCodeGift)(nil),
	}
	file_game_msg_proto_msgTypes[118].OneofWrappers = []interface{}{
		(*S2CActivityOpera_RspPersonalCharge)(nil),
		(*S2CActivityOpera_RspGlobalCharge)(nil),
		(*S2CActivityOpera_RspLevelUpgrade)(nil),
		(*S2CActivityOpera_RspTaskPlan)(nil),
		(*S2CActivityOpera_RspSevenDaySign)(nil),
		(*S2CActivityOpera_RspSuperRechargeGift)(nil),
		(*S2CActivityOpera_RspTimeLimitedTask)(nil),
		(*S2CActivityOpera_RspDailyTask)(nil),
		(*S2CActivityOpera_RspGlobalRebate)(nil),
		(*S2CActivityOpera_RspTriggerGift)(nil),
		(*S2CActivityOpera_RspFoundationInvest)(nil),
		(*S2CActivityOpera_RspExchangeCodeGift)(nil),
	}
	file_game_msg_proto_msgTypes[121].OneofWrappers = []interface{}{
		(*C2STaskActivity_TaskActivityGetReq)(nil),
		(*C2STaskActivity_TaskActivityRewardReq)(nil),
	}
	file_game_msg_proto_msgTypes[124].OneofWrappers = []interface{}{
		(*S2CTaskActivity_TaskActivityGetRsp)(nil),
		(*S2CTaskActivity_TaskActivityRewardRsp)(nil),
	}
	file_game_msg_proto_msgTypes[134].OneofWrappers = []interface{}{
		(*C2SOpenBoxReq_OpenOperaReq)(nil),
	}
	file_game_msg_proto_msgTypes[136].OneofWrappers = []interface{}{
		(*S2COpenBoxRsp_OpenOperaRsp)(nil),
	}
	file_game_msg_proto_msgTypes[140].OneofWrappers = []interface{}{
		(*C2SBlueVipReq_BlueVipGetReq)(nil),
		(*C2SBlueVipReq_BlueVipRewardReq)(nil),
	}
	file_game_msg_proto_msgTypes[141].OneofWrappers = []interface{}{
		(*S2CBlueVipRsp_BlueVipGetRsp)(nil),
	}
	file_game_msg_proto_msgTypes[145].OneofWrappers = []interface{}{
		(*C2SQQHallGiftReq_GetReq)(nil),
		(*C2SQQHallGiftReq_RewardReq)(nil),
	}
	file_game_msg_proto_msgTypes[146].OneofWrappers = []interface{}{
		(*S2CQQHallGiftRsp_GetRsp)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_game_msg_proto_rawDesc,
			NumEnums:      34,
			NumMessages:   157,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_game_msg_proto_goTypes,
		DependencyIndexes: file_game_msg_proto_depIdxs,
		EnumInfos:         file_game_msg_proto_enumTypes,
		MessageInfos:      file_game_msg_proto_msgTypes,
	}.Build()
	File_game_msg_proto = out.File
	file_game_msg_proto_rawDesc = nil
	file_game_msg_proto_goTypes = nil
	file_game_msg_proto_depIdxs = nil
}
