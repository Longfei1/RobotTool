// protoc --proto_path=./pb --go_out=./pbgo --go_opt=paths=source_relative ./pb/world.proto
// protoc-go-inject-tag -input="./pbgo/world.pb.go"
// goctl model mongo -e -dir ./model -t World --home template -c
//!!!!!!! 删除生成的worldtypes, 代码成替换成model对象

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.0--rc1
// source: world.proto

package pbgo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IdType int32

const (
	IdType_Invalid         IdType = 0
	IdType_Farm            IdType = 1
	IdType_Main_House      IdType = 2
	IdType_Floral_Workshop IdType = 3
	IdType_Tea_Workshop    IdType = 4
	IdType_End             IdType = 37
)

// Enum value maps for IdType.
var (
	IdType_name = map[int32]string{
		0:  "Invalid",
		1:  "Farm",
		2:  "Main_House",
		3:  "Floral_Workshop",
		4:  "Tea_Workshop",
		37: "End",
	}
	IdType_value = map[string]int32{
		"Invalid":         0,
		"Farm":            1,
		"Main_House":      2,
		"Floral_Workshop": 3,
		"Tea_Workshop":    4,
		"End":             37,
	}
)

func (x IdType) Enum() *IdType {
	p := new(IdType)
	*p = x
	return p
}

func (x IdType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdType) Descriptor() protoreflect.EnumDescriptor {
	return file_world_proto_enumTypes[0].Descriptor()
}

func (IdType) Type() protoreflect.EnumType {
	return &file_world_proto_enumTypes[0]
}

func (x IdType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdType.Descriptor instead.
func (IdType) EnumDescriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{0}
}

type VillageId int32

const (
	VillageId_InvalidVillage VillageId = 0
	VillageId_One            VillageId = 1
	VillageId_Two            VillageId = 2
)

// Enum value maps for VillageId.
var (
	VillageId_name = map[int32]string{
		0: "InvalidVillage",
		1: "One",
		2: "Two",
	}
	VillageId_value = map[string]int32{
		"InvalidVillage": 0,
		"One":            1,
		"Two":            2,
	}
)

func (x VillageId) Enum() *VillageId {
	p := new(VillageId)
	*p = x
	return p
}

func (x VillageId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VillageId) Descriptor() protoreflect.EnumDescriptor {
	return file_world_proto_enumTypes[1].Descriptor()
}

func (VillageId) Type() protoreflect.EnumType {
	return &file_world_proto_enumTypes[1]
}

func (x VillageId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VillageId.Descriptor instead.
func (VillageId) EnumDescriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{1}
}

type BuildingStatus int32

const (
	BuildingStatus_BS_Build_Start  BuildingStatus = 0
	BuildingStatus_BS_Repair_Start BuildingStatus = 1
	BuildingStatus_BS_Remove_Start BuildingStatus = 2
	BuildingStatus_BS_End          BuildingStatus = 10
)

// Enum value maps for BuildingStatus.
var (
	BuildingStatus_name = map[int32]string{
		0:  "BS_Build_Start",
		1:  "BS_Repair_Start",
		2:  "BS_Remove_Start",
		10: "BS_End",
	}
	BuildingStatus_value = map[string]int32{
		"BS_Build_Start":  0,
		"BS_Repair_Start": 1,
		"BS_Remove_Start": 2,
		"BS_End":          10,
	}
)

func (x BuildingStatus) Enum() *BuildingStatus {
	p := new(BuildingStatus)
	*p = x
	return p
}

func (x BuildingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuildingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_world_proto_enumTypes[2].Descriptor()
}

func (BuildingStatus) Type() protoreflect.EnumType {
	return &file_world_proto_enumTypes[2]
}

func (x BuildingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuildingStatus.Descriptor instead.
func (BuildingStatus) EnumDescriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{2}
}

type EBufferSrc int32

const (
	EBufferSrc_EBS_Invalid EBufferSrc = 0
	EBufferSrc_EBS_Attr    EBufferSrc = 1 //! 来源于宠物属性
	EBufferSrc_EBS_Skill   EBufferSrc = 2 //! 来源于宠物技能
)

// Enum value maps for EBufferSrc.
var (
	EBufferSrc_name = map[int32]string{
		0: "EBS_Invalid",
		1: "EBS_Attr",
		2: "EBS_Skill",
	}
	EBufferSrc_value = map[string]int32{
		"EBS_Invalid": 0,
		"EBS_Attr":    1,
		"EBS_Skill":   2,
	}
)

func (x EBufferSrc) Enum() *EBufferSrc {
	p := new(EBufferSrc)
	*p = x
	return p
}

func (x EBufferSrc) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EBufferSrc) Descriptor() protoreflect.EnumDescriptor {
	return file_world_proto_enumTypes[3].Descriptor()
}

func (EBufferSrc) Type() protoreflect.EnumType {
	return &file_world_proto_enumTypes[3]
}

func (x EBufferSrc) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EBufferSrc.Descriptor instead.
func (EBufferSrc) EnumDescriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{3}
}

type EScienceBuffType int32

const (
	EScienceBuffType_ESBT_Invalid            EScienceBuffType = 0
	EScienceBuffType_ESBT_ReduceCD           EScienceBuffType = 1 //! 减少cd
	EScienceBuffType_ESBT_AddOutPut          EScienceBuffType = 2 //! 工坊收获道具增产
	EScienceBuffType_ESBT_LandBaseSpeed      EScienceBuffType = 3
	EScienceBuffType_ESBT_LandOutPut         EScienceBuffType = 4
	EScienceBuffType_ESBT_ExpandWarehouseCap EScienceBuffType = 5 //! 仓库扩容
)

// Enum value maps for EScienceBuffType.
var (
	EScienceBuffType_name = map[int32]string{
		0: "ESBT_Invalid",
		1: "ESBT_ReduceCD",
		2: "ESBT_AddOutPut",
		3: "ESBT_LandBaseSpeed",
		4: "ESBT_LandOutPut",
		5: "ESBT_ExpandWarehouseCap",
	}
	EScienceBuffType_value = map[string]int32{
		"ESBT_Invalid":            0,
		"ESBT_ReduceCD":           1,
		"ESBT_AddOutPut":          2,
		"ESBT_LandBaseSpeed":      3,
		"ESBT_LandOutPut":         4,
		"ESBT_ExpandWarehouseCap": 5,
	}
)

func (x EScienceBuffType) Enum() *EScienceBuffType {
	p := new(EScienceBuffType)
	*p = x
	return p
}

func (x EScienceBuffType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EScienceBuffType) Descriptor() protoreflect.EnumDescriptor {
	return file_world_proto_enumTypes[4].Descriptor()
}

func (EScienceBuffType) Type() protoreflect.EnumType {
	return &file_world_proto_enumTypes[4]
}

func (x EScienceBuffType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EScienceBuffType.Descriptor instead.
func (EScienceBuffType) EnumDescriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{4}
}

type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: bson:"x"
	X uint32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	// @inject_tag: bson:"y"
	Y uint32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{0}
}

func (x *Position) GetX() uint32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Position) GetY() uint32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type Model struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: bson:"id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: bson:"direction"
	Direction uint32 `protobuf:"varint,2,opt,name=direction,proto3" json:"direction,omitempty"`
	// @inject_tag: bson:"x"
	X uint32 `protobuf:"varint,3,opt,name=x,proto3" json:"x,omitempty"`
	// @inject_tag: bson:"y"
	Y uint32 `protobuf:"varint,4,opt,name=y,proto3" json:"y,omitempty"`
	// @inject_tag: bson:"p"
	P uint32 `protobuf:"varint,5,opt,name=p,proto3" json:"p,omitempty"`
	// @inject_tag: bson:"params"
	Params string `protobuf:"bytes,6,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *Model) Reset() {
	*x = Model{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Model) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model) ProtoMessage() {}

func (x *Model) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Model.ProtoReflect.Descriptor instead.
func (*Model) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{1}
}

func (x *Model) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Model) GetDirection() uint32 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *Model) GetX() uint32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Model) GetY() uint32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Model) GetP() uint32 {
	if x != nil {
		return x.P
	}
	return 0
}

func (x *Model) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type PetBuffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: bson:"uid"
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// @inject_tag: bson:"bufferId"
	BufferId uint32 `protobuf:"varint,2,opt,name=bufferId,proto3" json:"bufferId,omitempty"`
	// @inject_tag: bson:"bufferValue"
	BufferValue uint32 `protobuf:"varint,3,opt,name=bufferValue,proto3" json:"bufferValue,omitempty"` //! 放大10W倍
	// @inject_tag: bson:"bufferTime"
	BufferTime uint32 `protobuf:"varint,4,opt,name=bufferTime,proto3" json:"bufferTime,omitempty"` //! 生效结束时间 0表示永久
	// @inject_tag: bson:"bufferSrc"
	BufferSrc EBufferSrc `protobuf:"varint,5,opt,name=bufferSrc,proto3,enum=model.EBufferSrc" json:"bufferSrc,omitempty"` //! 来源于技能&属性&...
	// @inject_tag: bson:"ApplyTargetParams"
	ApplyTargetParams uint32 `protobuf:"varint,6,opt,name=ApplyTargetParams,proto3" json:"ApplyTargetParams,omitempty"`
	// @inject_tag: bson:"EffectiveConditionID"
	EffectiveConditionID uint32 `protobuf:"varint,7,opt,name=EffectiveConditionID,proto3" json:"EffectiveConditionID,omitempty"`
	// @inject_tag: bson:"EffectiveParams"
	EffectiveParams uint32 `protobuf:"varint,8,opt,name=EffectiveParams,proto3" json:"EffectiveParams,omitempty"`
	// @inject_tag: bson:"EffectiveProbability"
	EffectiveProbability uint32 `protobuf:"varint,9,opt,name=EffectiveProbability,proto3" json:"EffectiveProbability,omitempty"`
	// @inject_tag: bson:"EffectParams"
	EffectParams uint32 `protobuf:"varint,10,opt,name=EffectParams,proto3" json:"EffectParams,omitempty"`
}

func (x *PetBuffer) Reset() {
	*x = PetBuffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetBuffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetBuffer) ProtoMessage() {}

func (x *PetBuffer) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetBuffer.ProtoReflect.Descriptor instead.
func (*PetBuffer) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{2}
}

func (x *PetBuffer) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PetBuffer) GetBufferId() uint32 {
	if x != nil {
		return x.BufferId
	}
	return 0
}

func (x *PetBuffer) GetBufferValue() uint32 {
	if x != nil {
		return x.BufferValue
	}
	return 0
}

func (x *PetBuffer) GetBufferTime() uint32 {
	if x != nil {
		return x.BufferTime
	}
	return 0
}

func (x *PetBuffer) GetBufferSrc() EBufferSrc {
	if x != nil {
		return x.BufferSrc
	}
	return EBufferSrc_EBS_Invalid
}

func (x *PetBuffer) GetApplyTargetParams() uint32 {
	if x != nil {
		return x.ApplyTargetParams
	}
	return 0
}

func (x *PetBuffer) GetEffectiveConditionID() uint32 {
	if x != nil {
		return x.EffectiveConditionID
	}
	return 0
}

func (x *PetBuffer) GetEffectiveParams() uint32 {
	if x != nil {
		return x.EffectiveParams
	}
	return 0
}

func (x *PetBuffer) GetEffectiveProbability() uint32 {
	if x != nil {
		return x.EffectiveProbability
	}
	return 0
}

func (x *PetBuffer) GetEffectParams() uint32 {
	if x != nil {
		return x.EffectParams
	}
	return 0
}

type PetAssignInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: bson:"petUid"
	PetUid string `protobuf:"bytes,1,opt,name=petUid,proto3" json:"petUid,omitempty"`
	// @inject_tag: bson:"bufferList"
	BufferList []*PetBuffer `protobuf:"bytes,2,rep,name=bufferList,proto3" json:"bufferList,omitempty"`
}

func (x *PetAssignInfo) Reset() {
	*x = PetAssignInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetAssignInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetAssignInfo) ProtoMessage() {}

func (x *PetAssignInfo) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetAssignInfo.ProtoReflect.Descriptor instead.
func (*PetAssignInfo) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{3}
}

func (x *PetAssignInfo) GetPetUid() string {
	if x != nil {
		return x.PetUid
	}
	return ""
}

func (x *PetAssignInfo) GetBufferList() []*PetBuffer {
	if x != nil {
		return x.BufferList
	}
	return nil
}

type ScienceBuffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: bson:"bufferValue"
	BufferValue uint32 `protobuf:"varint,1,opt,name=bufferValue,proto3" json:"bufferValue,omitempty"` //! 放大10W倍
	// @inject_tag: bson:"scienceBuffType"
	ScienceBuffType EScienceBuffType `protobuf:"varint,2,opt,name=scienceBuffType,proto3,enum=model.EScienceBuffType" json:"scienceBuffType,omitempty"`
}

func (x *ScienceBuffer) Reset() {
	*x = ScienceBuffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScienceBuffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScienceBuffer) ProtoMessage() {}

func (x *ScienceBuffer) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScienceBuffer.ProtoReflect.Descriptor instead.
func (*ScienceBuffer) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{4}
}

func (x *ScienceBuffer) GetBufferValue() uint32 {
	if x != nil {
		return x.BufferValue
	}
	return 0
}

func (x *ScienceBuffer) GetScienceBuffType() EScienceBuffType {
	if x != nil {
		return x.ScienceBuffType
	}
	return EScienceBuffType_ESBT_Invalid
}

type ScienceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: bson:"bufferList"
	BufferList []*ScienceBuffer `protobuf:"bytes,1,rep,name=bufferList,proto3" json:"bufferList,omitempty"`
}

func (x *ScienceInfo) Reset() {
	*x = ScienceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScienceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScienceInfo) ProtoMessage() {}

func (x *ScienceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScienceInfo.ProtoReflect.Descriptor instead.
func (*ScienceInfo) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{5}
}

func (x *ScienceInfo) GetBufferList() []*ScienceBuffer {
	if x != nil {
		return x.BufferList
	}
	return nil
}

type Building struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: bson:"_id"
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// @inject_tag: bson:"model"
	Model *Model `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	// @inject_tag: bson:"level"
	Level uint32 `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	// @inject_tag: bson:"buildStartTime"
	BuildStartTime uint32 `protobuf:"varint,4,opt,name=buildStartTime,proto3" json:"buildStartTime,omitempty"` //! 开始建造时间
	// @inject_tag: bson:"status" //! 0代表在建造状态，1代表可用
	Status BuildingStatus `protobuf:"varint,5,opt,name=status,proto3,enum=model.BuildingStatus" json:"status,omitempty"`
	// @inject_tag: bson:"petAssignInfo"
	PetAssignInfo *PetAssignInfo `protobuf:"bytes,6,opt,name=petAssignInfo,proto3" json:"petAssignInfo,omitempty"`
	// @inject_tag: bson:"scienceInfo"
	ScienceInfo *ScienceInfo `protobuf:"bytes,7,opt,name=scienceInfo,proto3" json:"scienceInfo,omitempty"`
	// @inject_tag: bson:"npcBufferList"
	NpcBufferList []*PetBuffer `protobuf:"bytes,8,rep,name=npcBufferList,proto3" json:"npcBufferList,omitempty"`
}

func (x *Building) Reset() {
	*x = Building{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Building) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Building) ProtoMessage() {}

func (x *Building) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Building.ProtoReflect.Descriptor instead.
func (*Building) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{6}
}

func (x *Building) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Building) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *Building) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Building) GetBuildStartTime() uint32 {
	if x != nil {
		return x.BuildStartTime
	}
	return 0
}

func (x *Building) GetStatus() BuildingStatus {
	if x != nil {
		return x.Status
	}
	return BuildingStatus_BS_Build_Start
}

func (x *Building) GetPetAssignInfo() *PetAssignInfo {
	if x != nil {
		return x.PetAssignInfo
	}
	return nil
}

func (x *Building) GetScienceInfo() *ScienceInfo {
	if x != nil {
		return x.ScienceInfo
	}
	return nil
}

func (x *Building) GetNpcBufferList() []*PetBuffer {
	if x != nil {
		return x.NpcBufferList
	}
	return nil
}

type VillageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ! 已解锁的村庄
	// @inject_tag: bson:"unlockVillageIdList"
	UnlockVillageIdList []VillageId `protobuf:"varint,1,rep,packed,name=unlockVillageIdList,proto3,enum=model.VillageId" json:"unlockVillageIdList,omitempty"`
	// @inject_tag: bson:"buildingList"
	BuildingList []*Building `protobuf:"bytes,2,rep,name=buildingList,proto3" json:"buildingList,omitempty"`
}

func (x *VillageInfo) Reset() {
	*x = VillageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VillageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VillageInfo) ProtoMessage() {}

func (x *VillageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VillageInfo.ProtoReflect.Descriptor instead.
func (*VillageInfo) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{7}
}

func (x *VillageInfo) GetUnlockVillageIdList() []VillageId {
	if x != nil {
		return x.UnlockVillageIdList
	}
	return nil
}

func (x *VillageInfo) GetBuildingList() []*Building {
	if x != nil {
		return x.BuildingList
	}
	return nil
}

type World struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: bson:"_id"
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// @inject_tag: bson:"villageInfo"
	VillageInfo *VillageInfo `protobuf:"bytes,2,opt,name=villageInfo,proto3" json:"villageInfo,omitempty"`
	// @inject_tag: bson:"seq"
	Seq uint64 `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
}

func (x *World) Reset() {
	*x = World{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *World) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*World) ProtoMessage() {}

func (x *World) ProtoReflect() protoreflect.Message {
	mi := &file_world_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use World.ProtoReflect.Descriptor instead.
func (*World) Descriptor() ([]byte, []int) {
	return file_world_proto_rawDescGZIP(), []int{8}
}

func (x *World) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *World) GetVillageInfo() *VillageInfo {
	if x != nil {
		return x.VillageInfo
	}
	return nil
}

func (x *World) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

var File_world_proto protoreflect.FileDescriptor

var file_world_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x22, 0x26, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x79, 0x22, 0x77, 0x0a, 0x05,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01,
	0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x79, 0x12,
	0x0c, 0x0a, 0x01, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x90, 0x03, 0x0a, 0x09, 0x50, 0x65, 0x74, 0x42, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x72, 0x63,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x72, 0x63, 0x52, 0x09, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x53, 0x72, 0x63, 0x12, 0x2c, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x11, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x14, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x32, 0x0a, 0x14, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x72, 0x6f,
	0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14,
	0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x59, 0x0a, 0x0d, 0x50, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x74,
	0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x74, 0x55, 0x69,
	0x64, 0x12, 0x30, 0x0a, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x65,
	0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x52, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x74, 0x0a, 0x0d, 0x53, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x73, 0x63, 0x69, 0x65, 0x6e, 0x63,
	0x65, 0x42, 0x75, 0x66, 0x66, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x53, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x42, 0x75, 0x66, 0x66, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x73, 0x63, 0x69, 0x65, 0x6e, 0x63,
	0x65, 0x42, 0x75, 0x66, 0x66, 0x54, 0x79, 0x70, 0x65, 0x22, 0x43, 0x0a, 0x0b, 0x53, 0x63, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x52, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xd7,
	0x02, 0x0a, 0x08, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a,
	0x0a, 0x0d, 0x70, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x65,
	0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x70, 0x65, 0x74,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x0b, 0x73, 0x63,
	0x69, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x36, 0x0a, 0x0d, 0x6e, 0x70, 0x63, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x50, 0x65, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x52, 0x0d, 0x6e, 0x70, 0x63, 0x42, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x0b, 0x56, 0x69, 0x6c,
	0x6c, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x42, 0x0a, 0x13, 0x75, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x56, 0x69, 0x6c, 0x6c, 0x61, 0x67, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x56, 0x69,
	0x6c, 0x6c, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x13, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x56,
	0x69, 0x6c, 0x6c, 0x61, 0x67, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0c,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x61, 0x0a, 0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x0b,
	0x76, 0x69, 0x6c, 0x6c, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x56, 0x69, 0x6c, 0x6c, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x76, 0x69, 0x6c, 0x6c, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x73, 0x65, 0x71, 0x2a, 0x5f, 0x0a, 0x06, 0x49, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x46,
	0x61, 0x72, 0x6d, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x48, 0x6f,
	0x75, 0x73, 0x65, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x6c, 0x6f, 0x72, 0x61, 0x6c, 0x5f,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x65,
	0x61, 0x5f, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03,
	0x45, 0x6e, 0x64, 0x10, 0x25, 0x2a, 0x31, 0x0a, 0x09, 0x56, 0x69, 0x6c, 0x6c, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x56, 0x69, 0x6c,
	0x6c, 0x61, 0x67, 0x65, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x6e, 0x65, 0x10, 0x01, 0x12,
	0x07, 0x0a, 0x03, 0x54, 0x77, 0x6f, 0x10, 0x02, 0x2a, 0x5a, 0x0a, 0x0e, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x53,
	0x5f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x10, 0x00, 0x12, 0x13,
	0x0a, 0x0f, 0x42, 0x53, 0x5f, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x53, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x53, 0x5f, 0x45,
	0x6e, 0x64, 0x10, 0x0a, 0x2a, 0x3a, 0x0a, 0x0a, 0x45, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53,
	0x72, 0x63, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x42, 0x53, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x42, 0x53, 0x5f, 0x41, 0x74, 0x74, 0x72, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x42, 0x53, 0x5f, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x10, 0x02,
	0x2a, 0x95, 0x01, 0x0a, 0x10, 0x45, 0x53, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x75, 0x66,
	0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x53, 0x42, 0x54, 0x5f, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x53, 0x42, 0x54, 0x5f,
	0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x43, 0x44, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x53,
	0x42, 0x54, 0x5f, 0x41, 0x64, 0x64, 0x4f, 0x75, 0x74, 0x50, 0x75, 0x74, 0x10, 0x02, 0x12, 0x16,
	0x0a, 0x12, 0x45, 0x53, 0x42, 0x54, 0x5f, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x61, 0x73, 0x65, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x53, 0x42, 0x54, 0x5f, 0x4c,
	0x61, 0x6e, 0x64, 0x4f, 0x75, 0x74, 0x50, 0x75, 0x74, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x45,
	0x53, 0x42, 0x54, 0x5f, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x43, 0x61, 0x70, 0x10, 0x05, 0x42, 0x0d, 0x5a, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2f, 0x70, 0x62, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_world_proto_rawDescOnce sync.Once
	file_world_proto_rawDescData = file_world_proto_rawDesc
)

func file_world_proto_rawDescGZIP() []byte {
	file_world_proto_rawDescOnce.Do(func() {
		file_world_proto_rawDescData = protoimpl.X.CompressGZIP(file_world_proto_rawDescData)
	})
	return file_world_proto_rawDescData
}

var file_world_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_world_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_world_proto_goTypes = []interface{}{
	(IdType)(0),           // 0: model.IdType
	(VillageId)(0),        // 1: model.VillageId
	(BuildingStatus)(0),   // 2: model.BuildingStatus
	(EBufferSrc)(0),       // 3: model.EBufferSrc
	(EScienceBuffType)(0), // 4: model.EScienceBuffType
	(*Position)(nil),      // 5: model.Position
	(*Model)(nil),         // 6: model.Model
	(*PetBuffer)(nil),     // 7: model.PetBuffer
	(*PetAssignInfo)(nil), // 8: model.PetAssignInfo
	(*ScienceBuffer)(nil), // 9: model.ScienceBuffer
	(*ScienceInfo)(nil),   // 10: model.ScienceInfo
	(*Building)(nil),      // 11: model.Building
	(*VillageInfo)(nil),   // 12: model.VillageInfo
	(*World)(nil),         // 13: model.World
}
var file_world_proto_depIdxs = []int32{
	3,  // 0: model.PetBuffer.bufferSrc:type_name -> model.EBufferSrc
	7,  // 1: model.PetAssignInfo.bufferList:type_name -> model.PetBuffer
	4,  // 2: model.ScienceBuffer.scienceBuffType:type_name -> model.EScienceBuffType
	9,  // 3: model.ScienceInfo.bufferList:type_name -> model.ScienceBuffer
	6,  // 4: model.Building.model:type_name -> model.Model
	2,  // 5: model.Building.status:type_name -> model.BuildingStatus
	8,  // 6: model.Building.petAssignInfo:type_name -> model.PetAssignInfo
	10, // 7: model.Building.scienceInfo:type_name -> model.ScienceInfo
	7,  // 8: model.Building.npcBufferList:type_name -> model.PetBuffer
	1,  // 9: model.VillageInfo.unlockVillageIdList:type_name -> model.VillageId
	11, // 10: model.VillageInfo.buildingList:type_name -> model.Building
	12, // 11: model.World.villageInfo:type_name -> model.VillageInfo
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_world_proto_init() }
func file_world_proto_init() {
	if File_world_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_world_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Model); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetBuffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PetAssignInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScienceBuffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScienceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Building); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VillageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*World); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_world_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_world_proto_goTypes,
		DependencyIndexes: file_world_proto_depIdxs,
		EnumInfos:         file_world_proto_enumTypes,
		MessageInfos:      file_world_proto_msgTypes,
	}.Build()
	File_world_proto = out.File
	file_world_proto_rawDesc = nil
	file_world_proto_goTypes = nil
	file_world_proto_depIdxs = nil
}
