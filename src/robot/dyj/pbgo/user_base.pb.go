// protoc --proto_path=./pb --go_out=./pbgo --go_opt=paths=source_relative ./pb/user_base.proto
// protoc-go-inject-tag -input="./pbgo/user_base.pb.go"
// goctl model mongo -e -dir ./model -t UserBase --home template -c

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.0--rc1
// source: user_base.proto

package pbgo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: bson:"_id"
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// @inject_tag: bson:"idNum"
	IdNum uint32 `protobuf:"varint,2,opt,name=idNum,proto3" json:"idNum,omitempty"` //! 居民证id
	// @inject_tag: bson:"nickName"
	NickName string `protobuf:"bytes,3,opt,name=nickName,proto3" json:"nickName,omitempty"`
	// @inject_tag: bson:"sex"
	Sex uint32 `protobuf:"varint,4,opt,name=sex,proto3" json:"sex,omitempty"` // 0是女1是男，国际通用
	// @inject_tag: bson:"lastChangeNickTime"
	LastChangeNickTime uint32 `protobuf:"varint,5,opt,name=lastChangeNickTime,proto3" json:"lastChangeNickTime,omitempty"`
	// @inject_tag: bson:"headFrame"
	HeadFrame uint32 `protobuf:"varint,6,opt,name=headFrame,proto3" json:"headFrame,omitempty"`
	// @inject_tag: bson:"lastLoginTime"
	LastLoginTime uint32 `protobuf:"varint,7,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"`
	// @inject_tag: bson:"rewardList"
	RewardList []uint32 `protobuf:"varint,8,rep,packed,name=rewardList,proto3" json:"rewardList,omitempty"` //! 第0个索引为已领取等级奖励的等级，第1个索引为舒适度等级
	// @inject_tag: bson:"llkInfo"
	LlkInfo *LLKInfo `protobuf:"bytes,9,opt,name=llkInfo,proto3" json:"llkInfo,omitempty"`
	// @inject_tag: bson:"supplyExpireTime"
	SupplyExpireTime uint32 `protobuf:"varint,10,opt,name=supplyExpireTime,proto3" json:"supplyExpireTime,omitempty"` //! 月卡过期时间
	// @inject_tag: bson:"supplyGetRewardTime"
	SupplyGetRewardTime uint32 `protobuf:"varint,11,opt,name=supplyGetRewardTime,proto3" json:"supplyGetRewardTime,omitempty"` //! 月卡每日奖励领取时间
	// @inject_tag: bson:"firstChargeInfo"
	FirstChargeInfo []*FirstChargeInfo `protobuf:"bytes,12,rep,name=firstChargeInfo,proto3" json:"firstChargeInfo,omitempty"` //! 首抽信息
	// @inject_tag: bson:"is_blue_vip"
	IsBlueVip bool `protobuf:"varint,14,opt,name=is_blue_vip,json=isBlueVip,proto3" json:"is_blue_vip,omitempty"`
	// @inject_tag: bson:"is_blue_year_vip"
	IsBlueYearVip bool `protobuf:"varint,15,opt,name=is_blue_year_vip,json=isBlueYearVip,proto3" json:"is_blue_year_vip,omitempty"`
	// @inject_tag: bson:"blue_vip_level"
	BlueVipLevel int32 `protobuf:"varint,16,opt,name=blue_vip_level,json=blueVipLevel,proto3" json:"blue_vip_level,omitempty"`
	// @inject_tag: bson:"is_super_blue_vip"
	IsSuperBlueVip bool `protobuf:"varint,17,opt,name=is_super_blue_vip,json=isSuperBlueVip,proto3" json:"is_super_blue_vip,omitempty"`
	// @inject_tag: bson:"registerTime"
	RegisterTime uint32 `protobuf:"varint,18,opt,name=registerTime,proto3" json:"registerTime,omitempty"`
	// @inject_tag: bson:"lastLoginOutTime"
	LastLoginOutTime uint32 `protobuf:"varint,19,opt,name=lastLoginOutTime,proto3" json:"lastLoginOutTime,omitempty"`
	// @inject_tag: bson:"seq"
	Seq uint64 `protobuf:"varint,20,opt,name=seq,proto3" json:"seq,omitempty"`
}

func (x *UserBase) Reset() {
	*x = UserBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_base_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBase) ProtoMessage() {}

func (x *UserBase) ProtoReflect() protoreflect.Message {
	mi := &file_user_base_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBase.ProtoReflect.Descriptor instead.
func (*UserBase) Descriptor() ([]byte, []int) {
	return file_user_base_proto_rawDescGZIP(), []int{0}
}

func (x *UserBase) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UserBase) GetIdNum() uint32 {
	if x != nil {
		return x.IdNum
	}
	return 0
}

func (x *UserBase) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserBase) GetSex() uint32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *UserBase) GetLastChangeNickTime() uint32 {
	if x != nil {
		return x.LastChangeNickTime
	}
	return 0
}

func (x *UserBase) GetHeadFrame() uint32 {
	if x != nil {
		return x.HeadFrame
	}
	return 0
}

func (x *UserBase) GetLastLoginTime() uint32 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *UserBase) GetRewardList() []uint32 {
	if x != nil {
		return x.RewardList
	}
	return nil
}

func (x *UserBase) GetLlkInfo() *LLKInfo {
	if x != nil {
		return x.LlkInfo
	}
	return nil
}

func (x *UserBase) GetSupplyExpireTime() uint32 {
	if x != nil {
		return x.SupplyExpireTime
	}
	return 0
}

func (x *UserBase) GetSupplyGetRewardTime() uint32 {
	if x != nil {
		return x.SupplyGetRewardTime
	}
	return 0
}

func (x *UserBase) GetFirstChargeInfo() []*FirstChargeInfo {
	if x != nil {
		return x.FirstChargeInfo
	}
	return nil
}

func (x *UserBase) GetIsBlueVip() bool {
	if x != nil {
		return x.IsBlueVip
	}
	return false
}

func (x *UserBase) GetIsBlueYearVip() bool {
	if x != nil {
		return x.IsBlueYearVip
	}
	return false
}

func (x *UserBase) GetBlueVipLevel() int32 {
	if x != nil {
		return x.BlueVipLevel
	}
	return 0
}

func (x *UserBase) GetIsSuperBlueVip() bool {
	if x != nil {
		return x.IsSuperBlueVip
	}
	return false
}

func (x *UserBase) GetRegisterTime() uint32 {
	if x != nil {
		return x.RegisterTime
	}
	return 0
}

func (x *UserBase) GetLastLoginOutTime() uint32 {
	if x != nil {
		return x.LastLoginOutTime
	}
	return 0
}

func (x *UserBase) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type LLKInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: bson:"score"
	Score int64 `protobuf:"varint,1,opt,name=score,proto3" json:"score,omitempty"`
	// @inject_tag: bson:"coin"
	Coin uint32 `protobuf:"varint,2,opt,name=coin,proto3" json:"coin,omitempty"`
	// @inject_tag: bson:"totalCount"
	TotalCount uint32 `protobuf:"varint,3,opt,name=totalCount,proto3" json:"totalCount,omitempty"` // 总局数
	// @inject_tag: bson:"winCount"
	WinCount uint32 `protobuf:"varint,4,opt,name=winCount,proto3" json:"winCount,omitempty"` // 胜局数
	// @inject_tag: bson:"loseCount"
	LoseCount uint32 `protobuf:"varint,5,opt,name=loseCount,proto3" json:"loseCount,omitempty"` // 胜局数
	// @inject_tag: bson:"drawCount"
	DrawCount uint32 `protobuf:"varint,6,opt,name=drawCount,proto3" json:"drawCount,omitempty"` // 平局数
	// @inject_tag: bson:"fleeCount"
	FleeCount uint32 `protobuf:"varint,7,opt,name=fleeCount,proto3" json:"fleeCount,omitempty"` // 逃跑数
}

func (x *LLKInfo) Reset() {
	*x = LLKInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_base_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLKInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLKInfo) ProtoMessage() {}

func (x *LLKInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_base_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLKInfo.ProtoReflect.Descriptor instead.
func (*LLKInfo) Descriptor() ([]byte, []int) {
	return file_user_base_proto_rawDescGZIP(), []int{1}
}

func (x *LLKInfo) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *LLKInfo) GetCoin() uint32 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *LLKInfo) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *LLKInfo) GetWinCount() uint32 {
	if x != nil {
		return x.WinCount
	}
	return 0
}

func (x *LLKInfo) GetLoseCount() uint32 {
	if x != nil {
		return x.LoseCount
	}
	return 0
}

func (x *LLKInfo) GetDrawCount() uint32 {
	if x != nil {
		return x.DrawCount
	}
	return 0
}

func (x *LLKInfo) GetFleeCount() uint32 {
	if x != nil {
		return x.FleeCount
	}
	return 0
}

type FirstChargeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: bson:"directBuyId"
	DirectBuyId uint32 `protobuf:"varint,1,opt,name=directBuyId,proto3" json:"directBuyId,omitempty"` // 档位
	// @inject_tag: bson:"firstChargeTime"
	ChargeTime uint32 `protobuf:"varint,2,opt,name=ChargeTime,proto3" json:"ChargeTime,omitempty"` // 首充时间
}

func (x *FirstChargeInfo) Reset() {
	*x = FirstChargeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_base_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstChargeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstChargeInfo) ProtoMessage() {}

func (x *FirstChargeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_base_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstChargeInfo.ProtoReflect.Descriptor instead.
func (*FirstChargeInfo) Descriptor() ([]byte, []int) {
	return file_user_base_proto_rawDescGZIP(), []int{2}
}

func (x *FirstChargeInfo) GetDirectBuyId() uint32 {
	if x != nil {
		return x.DirectBuyId
	}
	return 0
}

func (x *FirstChargeInfo) GetChargeTime() uint32 {
	if x != nil {
		return x.ChargeTime
	}
	return 0
}

var File_user_base_proto protoreflect.FileDescriptor

var file_user_base_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0xba, 0x05, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x61, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x64, 0x4e, 0x75, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x2e, 0x0a, 0x12, 0x6c,
	0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x68,
	0x65, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x68, 0x65, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x07, 0x6c, 0x6c, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4c, 0x4c, 0x4b, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x6c, 0x6c, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x75, 0x70,
	0x70, 0x6c, 0x79, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x13, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f,
	0x62, 0x6c, 0x75, 0x65, 0x5f, 0x76, 0x69, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x42, 0x6c, 0x75, 0x65, 0x56, 0x69, 0x70, 0x12, 0x27, 0x0a, 0x10, 0x69, 0x73, 0x5f,
	0x62, 0x6c, 0x75, 0x65, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x76, 0x69, 0x70, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x42, 0x6c, 0x75, 0x65, 0x59, 0x65, 0x61, 0x72, 0x56,
	0x69, 0x70, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x6c, 0x75, 0x65, 0x5f, 0x76, 0x69, 0x70, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x6c, 0x75, 0x65,
	0x56, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x29, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x73,
	0x75, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x6c, 0x75, 0x65, 0x5f, 0x76, 0x69, 0x70, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x42, 0x6c, 0x75, 0x65,
	0x56, 0x69, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x4f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4f, 0x75, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x73, 0x65, 0x71, 0x22, 0xc9, 0x01, 0x0a, 0x07, 0x4c, 0x4c, 0x4b, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77,
	0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x77,
	0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x73, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x6f, 0x73, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6c, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x6c, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x53, 0x0a, 0x0f, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x75,
	0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x42, 0x75, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x43, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2f, 0x70, 0x62, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_base_proto_rawDescOnce sync.Once
	file_user_base_proto_rawDescData = file_user_base_proto_rawDesc
)

func file_user_base_proto_rawDescGZIP() []byte {
	file_user_base_proto_rawDescOnce.Do(func() {
		file_user_base_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_base_proto_rawDescData)
	})
	return file_user_base_proto_rawDescData
}

var file_user_base_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_user_base_proto_goTypes = []interface{}{
	(*UserBase)(nil),        // 0: model.UserBase
	(*LLKInfo)(nil),         // 1: model.LLKInfo
	(*FirstChargeInfo)(nil), // 2: model.FirstChargeInfo
}
var file_user_base_proto_depIdxs = []int32{
	1, // 0: model.UserBase.llkInfo:type_name -> model.LLKInfo
	2, // 1: model.UserBase.firstChargeInfo:type_name -> model.FirstChargeInfo
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_user_base_proto_init() }
func file_user_base_proto_init() {
	if File_user_base_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_base_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_base_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLKInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_base_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstChargeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_base_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_user_base_proto_goTypes,
		DependencyIndexes: file_user_base_proto_depIdxs,
		MessageInfos:      file_user_base_proto_msgTypes,
	}.Build()
	File_user_base_proto = out.File
	file_user_base_proto_rawDesc = nil
	file_user_base_proto_goTypes = nil
	file_user_base_proto_depIdxs = nil
}
