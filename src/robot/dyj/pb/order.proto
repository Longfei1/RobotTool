// protoc --proto_path=./pb --go_out=./pbgo --go_opt=paths=source_relative ./pb/order.proto
// protoc-go-inject-tag -input="./pbgo/order.pb.go"
// goctl model mongo -e -dir ./model -t OrderInfo --home template -c
//!!!!!!! 删除生成的worldtypes, 代码成替换成model对象
syntax = "proto3";
package model;
option go_package = "server/pbgo";
import "itemInfo.proto";

message OrderItem{
  // @inject_tag: bson:"orderGlobalItemId"
  uint32 orderGlobalItemId = 1;
  // @inject_tag: bson:"fromPoolId"
  uint32 fromPoolId = 2; //! 来源于哪个池子,用于限量
  // @inject_tag: bson:"costItemList"
  repeated BaseItemInfo costItemList = 3;
  // @inject_tag: bson:"refreshTime"
  uint32 refreshTime = 4;  //! 下次可刷新时间
}

message OrderInfo{
  // @inject_tag: bson:"_id"
  string uid = 1;
  // @inject_tag: bson:"buildUid"
  string buildUid = 2;
  // @inject_tag: bson:"orderList"
  repeated OrderItem orderList = 3; //! 长度一定与格子数量相等
  // @inject_tag: bson:"endTime"
  uint32 endTime = 4;  //! 提交订单的结束时间戳(s)
  // @inject_tag: bson:"lastRefreshTime"
  uint32 lastRefreshTime = 5;  //! 上次刷新时间 用于是否需要重置todayRefreshCnt
  // @inject_tag: bson:"todayRefreshCnt"
  uint32 todayRefreshCnt = 6;  //! 今日刷新次数
  // @inject_tag: bson:"seq"
  uint64 seq = 7;
}
