// protoc --proto_path=./pb --go_out=./pbgo --go_opt=paths=source_relative ./pb/npc.proto
// protoc-go-inject-tag -input="./pbgo/npc.pb.go"
// goctl model mongo -e -dir ./model -t Npc --home template -c
//!!!!!!! 删除生成的worldtypes, 代码成替换成model对象
syntax = "proto3";
package model;
option go_package = "server/pbgo";

message NPCInfo {
    // @inject_tag: bson:"npcId"
    uint32 npcId = 1;
    // @inject_tag: bson:"favorAbility"
    uint32 favorAbility = 2;     //好感度
    // @inject_tag: bson:"npcDayInfo"
    NPCDayInfo npcDayInfo = 3;
    // @inject_tag: bson:"rewardedTokenList"
    repeated uint32 rewardedTokenList = 4;    // 已领取信物奖励的信物id列表
    // @inject_tag: bson:"firstTalk"
    bool firstTalk = 5; //是否进行初见任务
}

enum NpcOperaId {
    NOI_Invalid = 0;
    NOI_Invite = 1;
    NOI_Feed = 2;
}

// npc每天的操作记录
message NPCOperaRecord {
    // @inject_tag: bson:"time"
    uint32 time = 1;  // 操作时间
    // @inject_tag: bson:"operaId"
    NpcOperaId operaId  = 2;  // 操作id
    // @inject_tag: bson:"operaValue"
    uint32 operaValue  = 3;  // 操作对应的值，比如增加好感度等
}


// npc每天需要刷新的信息
message NPCDayInfo {
    // @inject_tag: bson:"lastInvitedTime"
    uint32 lastInvitedTime = 1;  //上次被邀请时间
    // @inject_tag: bson:"feedTime"
    uint32 feedTime  = 2;  // 被投喂次数
    // @inject_tag: bson:"talkFlag"
    bool talkFlag  = 3;  // 今日是否谈天说地的标志位
    // @inject_tag: bson:"operaRecordList"
    repeated NPCOperaRecord operaRecordList = 4;
}

message Npc {
    // @inject_tag: bson:"_id"
    string uid = 1;
    // @inject_tag: bson:"npcList"
    repeated NPCInfo npcList = 2;
    // @inject_tag: bson:"seq"
    uint64 seq = 3;
}