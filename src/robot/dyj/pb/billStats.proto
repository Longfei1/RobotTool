// protoc --proto_path=./pb --go_out=./pbgo --go_opt=paths=source_relative ./pb/billStats.proto
// protoc-go-inject-tag -input="./pbgo/billStats.pb.go"
// goctl model mongo -e -dir ./model -t LoginBill --home template -c
// goctl model mongo -e -dir ./model -t DayBaseSummaryStatsDB --home template -c
// goctl model mongo -e -dir ./model -t DayRetainStatsDB --home template -c
// goctl model mongo -e -dir ./model -t DayUserLvStatsDB --home template -c
// goctl model mongo -e -dir ./model -t DayUserTaskStatsDB --home template -c
// goctl model mongo -e -dir ./model -t ItemFlowBill --home template -c
//!!!!!!! 删除生成的worldtypes, 代码成替换成model对象
syntax = "proto3";
package model;
option go_package = "server/pbgo";
import "common.proto";

// 每天的概况汇总
message DayBaseSummaryStatsDB {
  // @inject_tag: bson:"_id"
  string day = 1;
  // @inject_tag: bson:"totalRegister"
  uint32 totalRegister = 2;  // 历史注册
  // @inject_tag: bson:"registerUser"
  uint32 registerUser = 3;   // 当日注册
  // @inject_tag: bson:"activeUser"
  uint32 activeUser = 4;    // 当日活跃
  // @inject_tag: bson:"paidUser"
  uint32 paidUser = 5;  // 当日付费用户数
  // @inject_tag: bson:"paidTimes"
  uint32 paidTimes = 6;  // 当日付费次数数
  // @inject_tag: bson:"paidAmount"
  uint32 paidAmount = 7;  // 当日付费额度
}

// 每天的留存统计
message DayRetainStatsDB {
  // @inject_tag: bson:"_id"
  string day = 1;
  // @inject_tag: bson:"registerCnt"
  uint32 registerCnt = 2; // 当日注册
  // @inject_tag: bson:"dayRetainCnt"
  repeated uint32 dayRetainCnt = 3;
}

// 每天的等级驻留统计
message DayUserLvStatsDB {
  // @inject_tag: bson:"_id"
  string day = 1;
  // @inject_tag: bson:"totalRegister"
  uint32 totalRegister = 2;  // 历史注册
  // @inject_tag: bson:"registerUser"
  uint32 registerUser = 3;   // 当日注册
  // @inject_tag: bson:"dayLvCnt"
  repeated uint32 dayLvCnt = 4; // 停留在每个等级的人数(下标0对应等级1)
}

// 每天的场景驻留统计
message DayUserTaskStatsDB {
  // @inject_tag: bson:"_id"
  string day = 1;
  // @inject_tag: bson:"totalRegister"
  uint32 totalRegister = 2;  // 历史注册
  // @inject_tag: bson:"registerUser"
  uint32 registerUser = 3;   // 当日注册
  // @inject_tag: bson:"dayTaskCnt"
  repeated uint32 dayTaskCnt = 4; // 停留在每个任务的人数(下标0对应任务1)
}

// 道具流水账单
message ItemFlowBill {
  // @inject_tag: bson:"uid"
  string uid = 1;
  // @inject_tag: bson:"timeStamp"
  uint32 timeStamp = 2; // 道具变化时间
  // @inject_tag: bson:"globalItemId"
  uint32 globalItemId = 3;
  // @inject_tag: bson:"isSub"
  bool isSub = 4; // 0增加 1减少
  // @inject_tag: bson:"count"
  uint32 count = 5;
  // @inject_tag: bson:"afterCount"
  uint32 afterCount = 6;
  // @inject_tag: bson:"reason"
  EUserOperId reason = 7;
  // @inject_tag: bson:"subReason"
  uint32 subReason = 8;
}


// 登录账单
message LoginBill{
  // @inject_tag: bson:"uid"
  string uid = 1;
  // @inject_tag: bson:"openId"
  string openId = 2;
  // @inject_tag: bson:"registerTime"
  uint32 registerTime = 3;
  // @inject_tag: bson:"loginTime"
  uint32 loginTime = 4;
  // @inject_tag: bson:"logoutTime"
  uint32 logoutTime = 5;
}
