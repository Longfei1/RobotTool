// protoc --proto_path=./pb --go_out=./pbgo --go_opt=paths=source_relative ./pb/delivery.proto
// protoc-go-inject-tag -input="./pbgo/delivery.pb.go"
// goctl model mongo -e -dir ./model -t Delivery --home template -c
//!!!!!!! 删除生成的worldtypes, 代码成替换成model对象
syntax = "proto3";
package model;
option go_package = "server/pbgo";

message CommonItem{
  // @inject_tag: bson:"itemId"
  uint32 itemId = 1;
  // @inject_tag: bson:"num"
  uint32 num = 2;
}

message Goods{
  // @inject_tag: bson:"goodsItem"
  CommonItem goodsItem = 1;
  // @inject_tag: bson:"loadRewardList"
  repeated CommonItem loadRewardList = 2;  //! 装车奖励信息
  // @inject_tag: bson:"loadFlag"
  uint32 loadFlag = 3; //! 是否装修货物 1代表装填, 用于单个物品装填后发奖励
}

message RewardInfo{
  // @inject_tag: bson:"finRewardItem"
  CommonItem finRewardItem = 1;
  // @inject_tag: bson:"rewardedFlag"
  uint32 rewardedFlag = 2; //! 是否领取奖励 0没领取 1已领取
}

message DeliveryDis{
  // @inject_tag: bson:"name"
  string name = 1;
  // @inject_tag: bson:"startTime"
  uint32 startTime = 2;
  // @inject_tag: bson:"finTime"
  uint32 finTime = 3;
}

message Cargo{
  // @inject_tag: bson:"goodsList"
  repeated Goods goodsList = 1; //! 随机3到4个物品
  // @inject_tag: bson:"finRewardList"
  repeated RewardInfo finRewardList = 2;  //! 完成后的奖励列表
  // @inject_tag: bson:"deliveryDis"
  DeliveryDis deliveryDis = 3;
  // @inject_tag: bson:"startFlag"
  uint32 startFlag = 4; //! 是否出发  1出发
}

message Delivery{
  // @inject_tag: bson:"_id"
  string uid = 1;
  // @inject_tag: bson:"buildUid"
  string buildUid = 2;
  // @inject_tag: bson:"cargoList"
  repeated Cargo cargoList = 3;
  // @inject_tag: bson:"seq"
  uint64 seq = 4;
}
