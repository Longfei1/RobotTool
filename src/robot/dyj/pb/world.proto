// protoc --proto_path=./pb --go_out=./pbgo --go_opt=paths=source_relative ./pb/world.proto
// protoc-go-inject-tag -input="./pbgo/world.pb.go"
// goctl model mongo -e -dir ./model -t World --home template -c
//!!!!!!! 删除生成的worldtypes, 代码成替换成model对象
syntax = "proto3";
package model;
option go_package = "server/pbgo";

enum IdType {
  Invalid = 0;
  Farm = 1;
  Main_House = 2;
  Floral_Workshop = 3;
  Tea_Workshop = 4;
  End = 37;
}

enum VillageId {
  InvalidVillage = 0;
  One = 1;
  Two = 2;
}

message Position{
  // @inject_tag: bson:"x"
  uint32 x = 1;
  // @inject_tag: bson:"y"
  uint32 y = 2;
}

message Model{
  // @inject_tag: bson:"id"
  string id = 1;
  // @inject_tag: bson:"direction"
  uint32 direction = 2;
  // @inject_tag: bson:"x"
  uint32 x = 3;
  // @inject_tag: bson:"y"
  uint32 y = 4;
  // @inject_tag: bson:"p"
  uint32 p = 5;
  // @inject_tag: bson:"params"
  string params = 6;
}

enum BuildingStatus {
  BS_Build_Start = 0;
  BS_Repair_Start = 1;
  BS_Remove_Start = 2;
  BS_End = 10;
}

enum EBufferSrc {
  EBS_Invalid = 0;
  EBS_Attr = 1;  //! 来源于宠物属性
  EBS_Skill = 2; //! 来源于宠物技能
}

message PetBuffer{
  // @inject_tag: bson:"uid"
  string uid = 1;
  // @inject_tag: bson:"bufferId"
  uint32 bufferId = 2;
  // @inject_tag: bson:"bufferValue"
  uint32 bufferValue = 3; //! 放大10W倍
  // @inject_tag: bson:"bufferTime"
  uint32 bufferTime = 4;  //! 生效结束时间 0表示永久
  // @inject_tag: bson:"bufferSrc"
  EBufferSrc bufferSrc = 5;  //! 来源于技能&属性&...
  // @inject_tag: bson:"ApplyTargetParams"
  uint32 ApplyTargetParams = 6;
  // @inject_tag: bson:"EffectiveConditionID"
  uint32 EffectiveConditionID = 7;
  // @inject_tag: bson:"EffectiveParams"
  uint32 EffectiveParams = 8;
  // @inject_tag: bson:"EffectiveProbability"
  uint32 EffectiveProbability = 9;
  // @inject_tag: bson:"EffectParams"
  uint32 EffectParams = 10;
}

message PetAssignInfo {
  // @inject_tag: bson:"petUid"
  string petUid = 1;
  // @inject_tag: bson:"bufferList"
  repeated PetBuffer bufferList = 2;
}

enum EScienceBuffType {
  ESBT_Invalid = 0;
  ESBT_ReduceCD = 1;          //! 减少cd
  ESBT_AddOutPut = 2;         //! 工坊收获道具增产
  ESBT_LandBaseSpeed = 3;
  ESBT_LandOutPut = 4;        
  ESBT_ExpandWarehouseCap = 5;   //! 仓库扩容
}

message ScienceBuffer{
  // @inject_tag: bson:"bufferValue"
  uint32 bufferValue = 1; //! 放大10W倍
  // @inject_tag: bson:"scienceBuffType"
  EScienceBuffType  scienceBuffType = 2;
}

message ScienceInfo {
  // @inject_tag: bson:"bufferList"
  repeated ScienceBuffer bufferList = 1;
}

message Building {
  // @inject_tag: bson:"_id"
  string uid = 1;
  // @inject_tag: bson:"model"
  Model model = 2;
  // @inject_tag: bson:"level"
  uint32 level = 3;
  // @inject_tag: bson:"buildStartTime"
  uint32 buildStartTime = 4;  //! 开始建造时间
  // @inject_tag: bson:"status" //! 0代表在建造状态，1代表可用
  BuildingStatus status = 5;
  // @inject_tag: bson:"petAssignInfo"
  PetAssignInfo petAssignInfo = 6;
  // @inject_tag: bson:"scienceInfo"
  ScienceInfo scienceInfo = 7;
  // @inject_tag: bson:"npcBufferList"
  repeated PetBuffer npcBufferList = 8;
}

message VillageInfo{
  //! 已解锁的村庄
  // @inject_tag: bson:"unlockVillageIdList"
  repeated VillageId unlockVillageIdList = 1;
  // @inject_tag: bson:"buildingList"
  repeated Building buildingList = 2;
}

message World{
  // @inject_tag: bson:"_id"
  string uid = 1;
  // @inject_tag: bson:"villageInfo"
  VillageInfo villageInfo = 2;
  // @inject_tag: bson:"seq"
  uint64 seq = 3;
}
