// protoc --proto_path=./docproj/msg --go_out=./pbgo --go_opt=paths=source_relative ./docproj/msg/eventStats.proto
// protoc-go-inject-tag -input="./pbgo/eventStats.pb.go"
// goctl model mongo -e -dir ./model -t EventStats --home template -c
// goctl model mongo -e -dir ./model -t EventStatIds --home template -c
//!!!!!!! 删除生成的worldtypes, 代码成替换成model对象
syntax = "proto3";
package model;
option go_package = "server/pbgo";

message EventStatsItem{
  // @inject_tag: bson:"statsId"
  uint32 statsId = 1;
  // @inject_tag: bson:"statsCnt"
  uint32 statsCnt = 2;  //! 统计数量
  // @inject_tag: bson:"updateTime"
  uint32 updateTime = 3;  //! 统计更新时间
}

message EventStats {
  // @inject_tag: bson:"_id"
  string uid = 1;
  // @inject_tag: bson:"eventStatsList"
  repeated EventStatsItem eventStatsList = 2;
  // @inject_tag: bson:"seq"
  uint64 seq = 3;
}

// 这个活动任务的统计还需要看玩家是否领取这个stat, 还需要需要维护一个玩家的statIdList的表
message EventStatIds {
  // @inject_tag: bson:"_id"
  string uid = 1;
  // @inject_tag: bson:"statsIds"
  repeated uint32 statsIds = 2;
}