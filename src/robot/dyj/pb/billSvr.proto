// goctl rpc protoc ./pb/billSvr.proto --proto_path=./pbserver/  --proto_path=./pb/  --go_out=./pbgo --go_opt=paths=source_relative  --go-grpc_out=./pbgo  --go-grpc_opt=paths=source_relative --zrpc_out=./app/billsvr/src
// protoc --proto_path=./pb --go_out=./pbgo --go_opt=paths=source_relative ./pb/billSvr.proto

syntax = "proto3";
package model;
option go_package = "server/pbgo";

message UserStats {
  int32 historical_registrations = 1; // 历史注册用户总数
  int32 registered_users = 2;         // 当日注册用户数
  int32 active_users = 3;             // 活跃用户数
  int32 paid_users = 4;             // 付费用户数
  int32 payment_occurrences = 5;      // 付费人次
  int32 payment_total = 6;           // 付费额度
}

message UserStatsReq {
  int32 historical_registrations = 1; // 历史注册用户总数
  int32 registered_users = 2;         // 当日注册用户数
  int32 active_users = 3;             // 活跃用户数
  int32 paid_users = 4;             // 付费用户数
  int32 payment_occurrences = 5;      // 付费人次
  int32 payment_total = 6;           // 付费额度
}

message UserStatsRsp {
  int32 historical_registrations = 1; // 历史注册用户总数
  int32 registered_users = 2;         // 当日注册用户数
  int32 active_users = 3;             // 活跃用户数
  int32 paid_users = 4;             // 付费用户数
  int32 payment_occurrences = 5;      // 付费人次
  int32 payment_total = 6;           // 付费额度
}

message RetainedUsers {
  int32 num = 1;
}

message RetainedUsersReq {

}

message RetainedUsersRsp {

}

message UserChurnStats {
  int32 num = 1;
}

message UserChurnStatsReq {

}

message UserChurnStatsRsp {

}
message SceneOccupationStats {
  int32 num = 1;
}

message SceneOccupationStatsReq {

}

message SceneOccupationStatsRsp {

}

//service
service BillStats {
  // 基础信息  历史注册	注册用户	活跃用户	付费用户	付费人次	付费额度等0
  rpc UserStats(UserStatsReq) returns(UserStatsRsp);
  // 留存用户 注册用户	次日留存	3日留存	…
  rpc RetainedUsers(RetainedUsersReq) returns(RetainedUsersRsp);
  // 流失统计 注册用户	1级	2级	3级	4级	5级
  rpc UserChurnStats(UserChurnStatsReq) returns(UserChurnStatsRsp);
  // 场景驻留 注册用户	任务一	任务二	任务三	任务四
  rpc SceneOccupationStats(SceneOccupationStatsReq) returns(SceneOccupationStatsRsp);
}
